
================================================================================
Overview
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Overview
Current version
Schema
Summary Representations
HTTP verbs
Client errors
Invalid JSON
All custom errors
Authentication
OAuth 2 Token (sent in a header)
OAuth2 Key/Secret
Pagination
Rate limiting
This document describes how to use Monica's API. This document is heavily
inspired by
GitHub's
and
Stripe's
API. Please use the API in a nice way
and don't be a jerk.
Current version
By default, all requests to
https://app.monicahq.com/api
receive the
v1 version of the API.
Schema
All API access is over HTTPS, and accessed from the
https://app.monicahq.com/api
URL. All data is sent and received as
JSON.
If you do have a custom instance of Monica, replace the URL above with the URL
of your instance. The endpoint will always be
YOUR_URL/api
.
Server: nginx/1.11.9
Content-Type: application/json
Transfer-Encoding: chunked
Connection: keep-alive
Cache-Control: no-cache, private
Date: Thu, 14 Sep 2017 02:24:19 GMT
X-RateLimit-Limit: 60
X-RateLimit-Remaining: 58
All timestamps return in ISO 8601 format:
YYYY-MM-DDTHH:MM:SSZ
Summary Representations
When you fetch a list of resources, for instance the list of reminders, you will
always get a subset of a contact attached to it, giving you just enough
information so you don't need to fetch the full information of the contact to do
something with it.
HTTP verbs
Monica tries to use the appropriate HTTP verbs wherever it can. Note that the
PATCH
HTTP verb is not used right now.
Verb
Description
GET
Used for retrieving resources.
POST
Used for creating resources.
PUT
Used for replacing resources or collections.
DELETE
Used for deleting resources.
Client errors
Invalid JSON
Sending an invalid JSON during a POST or a PUT will result in a error.
{
"error": {
"message": "Problems parsing JSON",
"error_code": 37
}
}
All custom errors
Code
Message
Explanation
30
The limit parameter is too big.
The maximum number for the limit parameter in a request is 100.
31
The resource has not been found.
Comes along with a 404 HTTP error code.
32
Error while trying to save the data.
Happens when the validation (during a
POST
or
PUT
) fails for some reason.
33
Too many parameters.
Happens when we try to save the data from the JSON, but the object expected different parameters.
34
Too many attempts, please slow down the request.
You are limited to 60 API calls per minute.
35
This email address is already taken.
An email address should be unique in the account.
36
You can't set a partner or a child to a partial contact.
37
Problems parsing JSON.
When doing a
PUT
or a
POST
, returns an error if the JSON is not a valid JSON or badly formatted.
38
Date should be in the future.
When setting up a reminder, the date should be in the future.
39
The sorting criteria is invalid.
Sorting query only allows a few criterion.
40
Invalid query.
The query is invalid for obscure reasons. It might be an invalid method call, an invalid sorting criteria, or something else. This should not happen often.
41
Invalid parameters.
Parameters in the JSON request are invalid.
Authentication
There are several ways to authenticate to the API. All requests to the API require authentication.
OAuth 2 Token (sent in a header)
curl -H "Authorization: Bearer OAUTH-TOKEN"
https://app.monicahq.com/api
OAuth2 Key/Secret
This is meant to be used in server to server scenarios. Never reveal your OAuth
application's client secret to your users. To use this authentication method,
you need to first register an application in your Monica's instance.
Pagination
Requests that return multiple items will be paginated to 10 items by default.
You can specify further pages with the
?page
parameter. For some resources,
you can also set a custom page size up to 100 with the
?limit
parameter.
Omitting the
?page
parameter will return the first page.
curl '
https://app.monicahq.com/api/contacts?page=2&limit=100
'
Rate limiting
The returned HTTP headers of any API request show your current rate limit status:
Date: Thu, 14 Sep 2017 02:24:19 GMT
X-RateLimit-Limit: 60
X-RateLimit-Remaining: 58
Header name
Description
X-RateLimit-Limit
The maximum number of requests you're permitted to make per minute.
X-RateLimit-Remaining
The number of requests remaining in the current rate limit window.
If you exceed the rate limit, an
429
error response returns with a JSON:
X-RateLimit-Limit   60
X-RateLimit-Remaining   0
Retry-After 55
{
"error": {
"message": "Too many attempts, please slow down the request.",
"error_code": 34
}
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Activities
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Activities
Overview
List all the activities in your account
Parameters
Response
List all the activities of a specific contact
Response
Get a specific activity
Response
Create an activity
Input
Example
Response
Update an activity
Input
Example
Response
Delete an activity
Response
Overview
The Activity object represents activities made with one or more contacts. Use it
to keep track of what you've done. An activity can't be orphan - it needs to be
linked to at least one contact.
When retrieving an activity, we always also return some basic information about
the related contact(s).
List all the activities in your account
GET /activities/
Parameters
Name
Type
Description
limit
integer
Indicates the page size.
page
integer
Indicates the page to return.
Response
{
"data": [
{
"id": 1,
"object": "activity",
"summary": "",
"description": "On a mangé avec papi et mamie au restaurant indien.",
"happened_at": "2016-10-04",
"activity_type": {
"id": 12,
"object": "activityType",
"name": "návštěva zápasu",
"location_type": null,
"activity_type_category": {
"id": 4,
"object": "activityTypeCategory",
"name": "Cultural activities",
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
"attendees": {
"total": 1,
"contacts": [
{
"id": 1,
"object": "contact",
"hash_id": "h:X5LOkAdWNDqgVomKPv",
"first_name": "Henri",
"last_name": "Troyat",
"nickname": "",
"complete_name": "Henri Troyat",
"initials": "HT",
"gender": "Female",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
}
]
},
"account": {
"id": 1
},
"created_at": "2016-10-07T11:59:14Z",
"updated_at": "2017-05-03T01:42:28Z"
},
{
"id": 2,
"object": "activity",
"summary": "Lunch with Dwight",
"description": "We play handball and it was just awesome. He told me about a new girl he likes Cathy Simms, so he has to be careful.",
"happened_at": "2016-10-18",
"activity_type": {
"id": 12,
"object": "activityType",
"name": "návštěva zápasu",
"location_type": null,
"activity_type_category": {
"id": 4,
"object": "activityTypeCategory",
"name": "Cultural activities",
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
"attendees": {
"total": 1,
"contacts": [
{
"id": 8,
"object": "contact",
"hash_id": "h:AlKmTUoPDqgVomKPv",
"first_name": "Jim",
"last_name": "Halpert",
"nickname": "",
"complete_name": "Jim Halpert",
"initials": "JH",
"gender": "Male",
"gender_type": "M",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1978-10-01T16:20:55Z"
}
]
},
"account": {
"id": 1
}
}
]
},
"account": {
"id": 1
},
"created_at": "2016-10-18T23:58:18Z",
"updated_at": "2017-06-07T13:09:47Z"
},
{
"id": 42,
"object": "activity",
"summary": "",
"description": null,
"happened_at": "2017-02-18",
"activity_type": {
"id": 12,
"object": "activityType",
"name": "návštěva zápasu",
"location_type": null,
"activity_type_category": {
"id": 4,
"object": "activityTypeCategory",
"name": "Cultural activities",
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
"attendees": {
"total": 1,
"contacts": [
{
"id": 1,
"object": "contact",
"hash_id": "h:X5LOkAdWNDqgVomKPv",
"first_name": "Henri",
"last_name": "Troyat",
"nickname": "",
"complete_name": "Henri Troyat",
"initials": "HT",
"gender": "Female",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
}
]
},
"account": {
"id": 1
},
"created_at": "2017-02-18T23:59:47Z",
"updated_at": "2017-02-18T23:59:47Z"
},
{
"id": 4667,
"object": "activity",
"summary": "Theater",
"description": "We had such an incredible time doing all this.",
"happened_at": "2017-10-25",
"activity_type": null,
"attendees": {
"total": 3,
"contacts": [
{
"id": 7,
"object": "contact",
"hash_id": "h:Vlu8z3PDqgVomKPv",
"first_name": "Alexandre",
"last_name": "Trioi",
"nickname": "",
"complete_name": "Alexandre Trioi",
"initials": "AT",
"gender": "Male",
"gender_type": "M",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 1
}
},
{
"id": 1,
"object": "contact",
"hash_id": "h:X5LOkAdWNDqgVomKPv",
"first_name": "Henri",
"last_name": "Troyat",
"nickname": "",
"complete_name": "Henri Troyat",
"initials": "HT",
"gender": "Female",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
{
"id": 79120,
"object": "contact",
"first_name": "Cecelia Marie",
"last_name": null,
"gender": "female",
"is_partial": true,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "approximate",
"birthdate": "2013-01-01T23:55:58Z"
}
]
},
"account": {
"id": 1
}
}
]
},
"account": {
"id": 1
},
"created_at": "2017-10-25T11:12:20Z",
"updated_at": "2017-10-25T11:12:20Z"
},
{
"id": 4669,
"object": "activity",
"summary": "We ate at an awesome restaurant.",
"description": "We ate way too much, we had fun and we promised we'd see each other again in a couple of weeks.",
"happened_at": "2018-02-02",
"activity_type": {
"id": 12,
"object": "activityType",
"name": "návštěva zápasu",
"location_type": null,
"activity_type_category": {
"id": 4,
"object": "activityTypeCategory",
"name": "Cultural activities",
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
"attendees": {
"total": 1,
"contacts": [
{
"id": 1,
"object": "contact",
"hash_id": "h:X5LOkAdWNDqgVomKPv",
"first_name": "Henri",
"last_name": "Troyat",
"nickname": "",
"complete_name": "Henri Troyat",
"initials": "HT",
"gender": "Female",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
}
]
},
"account": {
"id": 1
},
"created_at": "2017-10-25T11:44:49Z",
"updated_at": "2017-10-25T11:44:49Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/activities?page=1",
"last": "https:\/\/app.monicahq.com\/api\/activities?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/activities",
"per_page": 10,
"to": 5,
"total": 5
}
}
List all the activities of a specific contact
GET /contacts/:id/activities
Response
{
"data": [
{
"id": 2,
"object": "activity",
"summary": "Lunch with Dwight",
"description": "We play handball and it was just awesome. He told me about a new girl he likes Cathy Simms, so he has to be careful.",
"happened_at": "2016-10-18",
"activity_type": {
"id": 12,
"object": "activityType",
"name": "návštěva zápasu",
"location_type": null,
"activity_type_category": {
"id": 4,
"object": "activityTypeCategory",
"name": "Cultural activities",
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
"attendees": {
"total": 1,
"contacts": [
{
"id": 8,
"object": "contact",
"hash_id": "h:AlKmTUoPDqgVomKPv",
"first_name": "Jim",
"last_name": "Halpert",
"nickname": "",
"complete_name": "Jim Halpert",
"initials": "JH",
"gender": "Male",
"gender_type": "M",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1978-10-01T16:20:55Z"
}
]
},
"account": {
"id": 1
}
}
]
},
"account": {
"id": 1
},
"created_at": "2016-10-18T23:58:18Z",
"updated_at": "2017-06-07T13:09:47Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/contacts\/8\/activities?page=1",
"last": "https:\/\/app.monicahq.com\/api\/contacts\/8\/activities?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/contacts\/8\/activities",
"per_page": 10,
"to": 1,
"total": 1
}
}
Get a specific activity
GET /activities/:id
Response
{
"data": {
"id": 2,
"object": "activity",
"summary": "Lunch with Dwight",
"description": "We play handball and it was just awesome. He told me about a new girl he likes Cathy Simms, so he has to be careful.",
"happened_at": "2016-10-18",
"activity_type": {
"id": 12,
"object": "activityType",
"name": "návštěva zápasu",
"location_type": null,
"activity_type_category": {
"id": 4,
"object": "activityTypeCategory",
"name": "Cultural activities",
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
"attendees": {
"total": 1,
"contacts": [
{
"id": 8,
"object": "contact",
"hash_id": "h:AlKmTUoPDqgVomKPv",
"first_name": "Jim",
"last_name": "Halpert",
"nickname": "",
"complete_name": "Jim Halpert",
"initials": "JH",
"gender": "Male",
"gender_type": "M",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1978-10-01T16:20:55Z"
}
]
},
"account": {
"id": 1
}
}
]
},
"account": {
"id": 1
},
"created_at": "2016-10-18T23:58:18Z",
"updated_at": "2017-06-07T13:09:47Z"
}
}
Create an activity
POST /activities/
Input
Name
Type
Description
activity_type_id
integer
Required
. The ID of the type of activity that the activity is associated with.
summary
string
Required
. A short description of the activity. Max 255 characters.
description
string
An optional comment to add more details on what happened. Max 1000000 characters.
happened_at
string
Required
. The date the event happened. Can be in the past or future - the latter being dumb, but well. Format: YYYY-MM-DD.
contacts
array
Required
. The ID of contacts the activity is associated with.
emotions
array
The ID of emotions the activity is associated with.
Example
{
"activity_type_id": 2,
"summary": "We ate at an awesome restaurant.",
"description": "We ate way too much, we had fun and we promised we'd see each other again in a couple of weeks.",
"happened_at": "2018-02-02",
"contacts": [1,3,5]
}
Response
The API call returns an Activity object if the call succeeds.
{
"data": {
"id": 4670,
"object": "activity",
"summary": "We ate at an awesome restaurant.",
"description": "We ate way too much, we had fun and we promised we'd see each other again in a couple of weeks.",
"happened_at": "2018-02-02",
"activity_type": {
"id": 12,
"object": "activityType",
"name": "návštěva zápasu",
"location_type": null,
"activity_type_category": {
"id": 4,
"object": "activityTypeCategory",
"name": "Cultural activities",
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
"attendees": {
"total": 3,
"contacts": [
{
"id": 1,
"object": "contact",
"hash_id": "h:X5LOkAdWNDqgVomKPv",
"first_name": "Henri",
"last_name": "Troyat",
"nickname": "",
"complete_name": "Henri Troyat",
"initials": "HT",
"gender": "Female",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
{
"id": 2,
"object": "contact",
"first_name": "Nicolas",
"last_name": "Loriu",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 1
}
},
{
"id": 7,
"object": "contact",
"first_name": "Alexandre",
"last_name": "Loap",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 1
}
}
]
},
"account": {
"id": 1
},
"created_at": "2017-10-25T12:46:55Z",
"updated_at": "2017-10-25T12:46:55Z"
}
}
Update an activity
PUT /activities/:id
Input
Name
Type
Description
activity_type_id
integer
Required
. The ID of the type of activity that the activity is associated with.
summary
string
Required
. A short description of the activity. Max 255 characters.
description
string
An optional comment to add more details on what happened. Max 1000000 characters.
happened_at
string
Required
. The date the event happened. Can be in the past or future - the latter being dumb, but well. Format: YYYY-MM-DD.
contacts
array
Required
. The ID of contacts the activity is associated with.
emotions
array
The ID of emotions the activity is associated with.
Example
{
"activity_type_id": 2,
"summary": "We ate at an awesome restaurant.",
"description": "We ate way too much, we had fun and we promised we'd see each other again in a couple of weeks.",
"happened_at": "2018-02-02",
"contacts": [1,3]
}
Response
{
"data": {
"id": 4670,
"object": "activity",
"summary": "We ate at an awesome restaurant.",
"description": "We ate way too much, we had fun and we promised we'd see each other again in a couple of weeks.",
"happened_at": "2018-02-02",
"activity_type": {
"id": 12,
"object": "activityType",
"name": "návštěva zápasu",
"location_type": null,
"activity_type_category": {
"id": 4,
"object": "activityTypeCategory",
"name": "Cultural activities",
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
"attendees": {
"total": 2,
"contacts": [
{
"id": 1,
"object": "contact",
"hash_id": "h:X5LOkAdWNDqgVomKPv",
"first_name": "Henri",
"last_name": "Troyat",
"nickname": "",
"complete_name": "Henri Troyat",
"initials": "HT",
"gender": "Female",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
{
"id": 3,
"object": "contact",
"first_name": "David",
"last_name": "Calir",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 1
}
}
]
},
"account": {
"id": 1
},
"created_at": "2017-10-25T12:46:55Z",
"updated_at": "2017-10-25T12:46:55Z"
}
}
Delete an activity
DELETE /activities/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 31
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Activity Types
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Activity Type Categories
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Addresses
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Addresses
Overview
List all the addresses of a specific contact
Response
Get a specific address
Response
Create an address
Input
Example
Response
Update an address
Input
Example
Response
Delete an address
Response
Overview
The Address object represents an address of a contact. A contact can have as
many addresses as necessary. An address can't be orphan - it needs to be linked to
at least one contact.
When retrieving an address, we always also return some basic information about
the related contact(s).
List all the addresses of a specific contact
GET /contacts/:id/addresses
Response
{
"data": [
{
"id": 3,
"object": "address",
"name": "default",
"street": null,
"city": "Scranton",
"province": null,
"postal_code": null,
"country": {
"id": "US",
"object": "country",
"name": "United States",
"iso": "US"
},
"account": {
"id": 1
},
"contact": {
"id": 8,
"object": "contact",
"first_name": "Jim",
"last_name": "Halpert",
"gender": "male",
"is_partial": false,
"is_dead": false,
"deceased_date": null,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1978-10-01T00:00:00Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": null,
"updated_at": null
},
{
"id": 11163,
"object": "address",
"name": "Work (The Office)",
"street": "1725 Slough Avenue",
"city": "Scranton",
"province": "PA",
"postal_code": null,
"country": {
"id": "US",
"object": "country",
"name": "United States",
"iso": "US"
},
"account": {
"id": 1
},
"contact": {
"id": 8,
"object": "contact",
"first_name": "Jim",
"last_name": "Halpert",
"gender": "male",
"is_partial": false,
"is_dead": false,
"deceased_date": null,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1978-10-01T00:00:00Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-11-23T08:28:47Z",
"updated_at": "2017-11-23T08:33:07Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/contacts\/8\/addresses?page=1",
"last": "https:\/\/app.monicahq.com\/api\/contacts\/8\/addresses?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/contacts\/8\/addresses",
"per_page": 10,
"to": 2,
"total": 2
}
}
Get a specific address
GET /addresses/:id
Response
{
"data": {
"id": 11163,
"object": "address",
"name": "Work (The Office)",
"street": "1725 Slough Avenue",
"city": "Scranton",
"province": "PA",
"postal_code": null,
"country": {
"id": "US",
"object": "country",
"name": "United States",
"iso": "US"
},
"account": {
"id": 1
},
"contact": {
"id": 8,
"object": "contact",
"first_name": "Jim",
"last_name": "Halpert",
"gender": "male",
"is_partial": false,
"is_dead": false,
"deceased_date": null,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1978-10-01T00:00:00Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-11-23T08:28:47Z",
"updated_at": "2017-11-23T08:33:07Z"
}
}
Create an address
POST /addresses/
Input
Name
Type
Description
name
string
Required
. A short description of the address. Max 255 characters.
street
string
The number and street name. Max 255 characters.
city
string
The city the contact lives in. Max 255 characters.
province
string
The province the contact is in. Max 255 characters.
postal_code
string
The postal code of the city the contact lives in. Max 255 characters.
country
string
The country ID of the country the contact lives in. Country IDs are retrieved through the
Country's API
. Max 3 characters.
contact_id
integer
Required
. The ID of the contact that the address is associated with.
Example
{
"name": "Work",
"street": "1725 Slough Avenue",
"city": "Scranton",
"province": "PA",
"postal_code": null,
"country": "US",
"contact_id": 8
}
Response
The API call returns an address object if the call succeeds.
{
"data": {
"id": 11164,
"object": "address",
"name": "Work",
"street": "1725 Slough Avenue",
"city": "Scranton",
"province": "PA",
"postal_code": null,
"country": {
"id": "US,
"object": "country",
"name": "United States",
"iso": "US"
},
"account": {
"id": 1
},
"contact": {
"id": 8,
"object": "contact",
"first_name": "Jim",
"last_name": "Halpert",
"gender": "male",
"is_partial": false,
"is_dead": false,
"deceased_date": null,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1978-10-01T00:00:00Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-11-23T09:26:54Z",
"updated_at": "2017-11-23T09:26:54Z"
}
}
Update an address
PUT /addresses/:id
Input
Name
Type
Description
name
string
Required
. A short description of the address. Max 255 characters.
street
string
The number and street name. Max 255 characters.
city
string
The city the contact lives in. Max 255 characters.
province
string
The province the contact is in. Max 255 characters.
postal_code
string
The postal code of the city the contact lives in. Max 255 characters.
country
string
The country ID of the country the contact lives in. Country IDs are retrieved through the
Country's API
. Max 3 characters.
contact_id
integer
Required
. The ID of the contact that the address is associated with.
Example
{
"name": "Work (The Office)",
"street": "1725 Slough Avenue",
"city": "Scranton",
"province": "PA",
"postal_code": null,
"country": "US",
"contact_id": 8
}
Response
{
"data": {
"id": 11163,
"object": "address",
"name": "Work (The Office)",
"street": "1725 Slough Avenue",
"city": "Scranton",
"province": "PA",
"postal_code": null,
"country": {
"id": "US",
"object": "country",
"name": "United States",
"iso": "us"
},
"account": {
"id": 1
},
"contact": {
"id": 8,
"object": "contact",
"first_name": "Jim",
"last_name": "Halpert",
"gender": "male",
"is_partial": false,
"is_dead": false,
"deceased_date": null,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1978-10-01T00:00:00Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-11-23T08:28:47Z",
"updated_at": "2017-11-23T08:33:07Z"
}
}
Delete an address
DELETE /addresses/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 31
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Audit Logs
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Calls
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Calls
Overview
List all the calls in your account
Parameters
Response
List all the calls of a specific contact
Response
Get a specific call
Response
Create a call
Input
Example
Response
Update a call
Input
Example
Response
Delete a call
Response
Overview
The Call object allows to record phone calls made with contacts. A call has to be
associated with an existing contact - it can't be orphan.
A call has a
called_at
field that lets you record the date the call happened.
The
called_at
field must be a valid date according to the strtotime PHP
function.
When retrieving a call, we always also return some basic information about the
related contact.
List all the calls in your account
GET /calls/
Parameters
Name
Type
Description
limit
integer
Indicates the page size.
page
integer
Indicates the page to return.
Response
{
"data": [
{
"id": 3,
"object": "call",
"called_at": "2017-10-07T21:17:45Z",
"content": "He called, we had fun.",
"account": {
"id": 5
},
"contact": {
"id": 3,
"object": "contact",
"first_name": "Leslie",
"last_name": "Knope",
"gender": "none",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 5
}
},
"created_at": "2017-10-07T21:17:45Z",
"updated_at": "2017-10-07T21:17:45Z"
},
{
"id": 5,
"object": "call",
"called_at": "2017-10-07T22:29:21Z",
"content": "He called, we had fun and really awesome.",
"account": {
"id": 5
},
"contact": {
"id": 3,
"object": "contact",
"first_name": "Leslie",
"last_name": "Knope",
"gender": "none",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 5
}
},
"created_at": "2017-10-07T22:29:21Z",
"updated_at": "2017-10-07T22:29:56Z"
},
{
"id": 1,
"object": "call",
"called_at": "2017-10-07T21:00:56Z",
"content": "We talked about nice stuff\r\n* And especially about their wedding",
"account": {
"id": 5
},
"contact": {
"id": 3,
"object": "contact",
"first_name": "Leslie",
"last_name": "Knope",
"gender": "none",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 5
}
},
"created_at": "2017-10-07T21:00:56Z",
"updated_at": "2017-10-07T21:00:56Z"
},
{
"id": 2,
"object": "call",
"called_at": "2017-10-07T21:02:57Z",
"content": "Just laughed super hard.",
"account": {
"id": 5
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Henri",
"last_name": "Troyat",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "approximate",
"birthdate": "1987-01-01T21:56:44Z"
}
]
},
"account": {
"id": 5
}
},
"created_at": "2017-10-07T21:02:57Z",
"updated_at": "2017-10-07T21:02:57Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/calls?page=1",
"last": "https:\/\/app.monicahq.com\/api\/calls?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/calls",
"per_page": 10,
"to": 4,
"total": 4
}
}
List all the calls of a specific contact
GET /contacts/:id/calls
Response
{
"data": [
{
"id": 3,
"object": "call",
"called_at": "2017-10-07T21:17:45Z",
"content": "He called, we had fun.",
"account": {
"id": 5
},
"contact": {
"id": 3,
"object": "contact",
"first_name": "Leslie",
"last_name": "Knope",
"gender": "none",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 5
}
},
"created_at": "2017-10-07T21:17:45Z",
"updated_at": "2017-10-07T21:17:45Z"
},
{
"id": 1,
"object": "call",
"called_at": "2017-10-07T21:00:56Z",
"content": "We talked about nice stuff\r\n* And especially about their wedding",
"account": {
"id": 5
},
"contact": {
"id": 3,
"object": "contact",
"first_name": "Leslie",
"last_name": "Knope",
"gender": "none",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 5
}
},
"created_at": "2017-10-07T21:00:56Z",
"updated_at": "2017-10-07T21:00:56Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/contacts\/3\/calls?page=1",
"last": "https:\/\/app.monicahq.com\/api\/contacts\/3\/calls?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/contacts\/3\/calls",
"per_page": 10,
"to": 2,
"total": 2
}
}
Get a specific call
GET /calls/:id
Response
{
"data": {
"id": 1,
"object": "call",
"called_at": "2017-10-07T21:00:56Z",
"content": "We talked about nice stuff\r\n* And especially about their wedding",
"account": {
"id": 5
},
"contact": {
"id": 3,
"object": "contact",
"first_name": "Leslie",
"last_name": "Knope",
"gender": "none",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 5
}
},
"created_at": "2017-10-07T21:00:56Z",
"updated_at": "2017-10-07T21:00:56Z"
}
}
Create a call
POST /calls/
Input
Name
Type
Description
content
string
Required
. The description of the call. Max 100000 characters.
contact_id
integer
Required
. The ID of the contact that the call is associated with.
called_at
string
Required
. The date the call happened. Can be in the past or future - the latter being dumb, but well. Format: YYYY-MM-DD.
Example
{
"content": "He called, we had fun.",
"contact_id": 3,
"called_at": "2018-02-02"
}
Response
The API call returns a Call object if the call succeeds.
{
"data": {
"id": 5,
"object": "call",
"called_at": "2017-10-07T22:29:21Z",
"content": "He called, we had fun.",
"account": {
"id": 5
},
"contact": {
"id": 3,
"object": "contact",
"first_name": "Leslie",
"last_name": "Knope",
"gender": "none",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 5
}
},
"created_at": "2017-10-07T22:29:21Z",
"updated_at": "2017-10-07T22:29:21Z"
}
}
Update a call
PUT /calls/:id
Input
Name
Type
Description
content
string
Required
. The description of the call. Max 100000 characters.
contact_id
integer
Required
. The ID of the contact that the call is associated with.
called_at
string
Required
. The date the called happened. Can be in the past or future - the latter being dumb, but well. Format: YYYY-MM-DD.
Example
{
"content": "He called, we had fun and really awesome.",
"contact_id": 3,
"called_at": "2018-02-02"
}
Response
{
"data": {
"id": 5,
"object": "call",
"called_at": "2017-10-07T22:29:21Z",
"content": "He called, we had fun and really awesome.",
"account": {
"id": 5
},
"contact": {
"id": 3,
"object": "contact",
"first_name": "Leslie",
"last_name": "Knope",
"gender": "none",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 5
}
},
"created_at": "2017-10-07T22:29:21Z",
"updated_at": "2017-10-07T22:29:56Z"
}
}
Delete a call
DELETE /calls/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 31
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Companies
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Companies
Overview
List all the companies in your account
Parameters
Response
Get a specific company
Response
Create a company
Input
Example
Response
Update a company
Input
Example
Response
Delete a call
Response
Overview
The Company object represents a company a Contact works (or worked) at.
List all the companies in your account
GET /companies/
Parameters
Name
Type
Description
limit
integer
Indicates the page size.
page
integer
Indicates the page to return.
Response
{
"data": [
{
"id": 1,
"object": "company",
"name": "Central Perk",
"website": "http:\/\/url.com",
"number_of_employees": 3,
"account": {
"id": 1
},
"created_at": "2019-01-02T14:44:30Z",
"updated_at": "2019-01-02T14:47:07Z"
},
{
"id": 3,
"object": "company",
"name": "ACME",
"website": "http:\/\/url.com",
"number_of_employees": 3,
"account": {
"id": 1
},
"created_at": "2019-01-02T14:49:07Z",
"updated_at": "2019-01-02T14:49:07Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/companies?page=1",
"last": "https:\/\/app.monicahq.com\/api\/companies?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/companies",
"per_page": 15,
"to": 2,
"total": 2
}
}
Get a specific company
GET /companies/:id
Response
{
"data": {
"id": 1,
"object": "company",
"name": "Central Perk",
"website": "http:\/\/url.com",
"number_of_employees": 3,
"account": {
"id": 1
},
"created_at": "2019-01-02T14:44:30Z",
"updated_at": "2019-01-02T14:47:07Z"
}
}
Create a company
POST /companies/
Input
Name
Type
Description
name
string
Required
. The name of the company. Max 255 characters.
website
string
The URL of the website of the company. Max 255 characters.
number_of_employees
integer
The number of employees in the company.
Example
{
"name": "ACME",
"website": "http://url.com",
"number_of_employees": 3
}
Response
The API call returns a Company object if the call succeeds.
{
"data": {
"id": 1,
"object": "company",
"name": "ACME",
"website": "http:\/\/url.com",
"number_of_employees": 3,
"account": {
"id": 1
},
"created_at": "2019-01-02T14:44:30Z",
"updated_at": "2019-01-02T14:44:30Z"
}
}
Update a company
PUT /companies/:id
Input
Name
Type
Description
name
string
Required
. The name of the company. Max 255 characters.
website
string
The URL of the website of the company. Max 255 characters.
number_of_employees
integer
The number of employees in the company.
Example
{
"name": "Central Perk",
"website": "http://url.com",
"number_of_employees": 3
}
Response
{
"data": {
"id": 1,
"object": "company",
"name": "Central Perk",
"website": "http:\/\/url.com",
"number_of_employees": 3,
"account": {
"id": 1
},
"created_at": "2019-01-02T14:44:30Z",
"updated_at": "2019-01-02T14:47:07Z"
}
}
Delete a call
DELETE /companies/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 1
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Compliance
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Compliance
Overview
List all the terms and privacy policies ever used in Monica
Response
Get a specific term and privacy policy
Response
Get the status of all policies signed by a given user
Response
Get the status of a specific policy of a given user
Response
Sign the latest compliance policy for the authenticated user
Input
Example
Response
Overview
Compliance is about terms of use and privacy policies.
Monica, like any other software, needs to be compliant with the laws. In that regard, we need to make sure users accept our privacy policy and our terms of use before using the software.
Per instance, we keep track of who have accepted the terms, when they've done it and from which IP address, as required by the law.
List all the terms and privacy policies ever used in Monica
GET /compliance
Response
{
"data": [
{
"id": 3,
"object": "term",
"term_version": "3",
"term_content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor.",
"privacy_version": "3",
"privacy_content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor.",
"created_at": "2018-05-18T00:00:00Z",
"updated_at": null
},
{
"id": 1,
"object": "term",
"term_version": "2",
"term_content": "\nScope of service\nMonica supports the following browsers:\n\nInternet Explorer (11+)\nFirefox (50+)\nChrome (latest)\nSafari (latest)\nI do not guarantee that the site will work with other browsers, but it’s very likely that it will just work.\n\nRights\nYou don’t have to provide your real name when you register to an account. You do however need a valid email address if you want to upgrade your account to the paid version, or receive reminders by email.\n\nYou have the right to close your account at any time.\n\nYou have the right to export your data at any time, in the SQL format.\n\nYour data will not be intentionally shown to other users or shared with third parties.\n\nYour personal data will not be shared with anyone without your consent.\n\nYour data is backed up every hour.\n\nIf the site ceases operation, you will receive an opportunity to export all your data before the site dies.\n\nAny new features that affect privacy will be strictly opt-in.\n\nResponsibilities\nYou will not use the site to store illegal information or data under the Canadian law (or any law).\n\nYou have to be at least 18+ to create an account and use the site.\n\nYou must not abuse the site by knowingly posting malicious code that could harm you or the other users.\n\nYou must only use the site to do things that are widely accepted as morally good.\n\nYou may not make automated requests to the site.\n\nYou may not abuse the invitation system.\n\nYou are responsible for keeping your account secure.\n\nI reserve the right to close accounts that abuse the system (thousands of contacts with hundred of thousands of reminders for instance) or use it in an unreasonable manner.\n\nOther important legal stuff\nThough I want to provide a great service, there are certain things about the service I cannot promise. For example, the services and software are provided “as-is”, at your own risk, without express or implied warranty or condition of any kind. I also disclaim any warranties of merchantability, fitness for a particular purpose or non-infringement. Monica will have no responsibility for any harm to your computer system, loss or corruption of data, or other harm that results from your access to or use of the Services or Software.\n\nThese Terms can change at any time, but I’ll never be a dick about it. Running this site is a dream come true to me, and I hope I’ll be able to run it as long as I can.\n        ",
"privacy_version": "2",
"privacy_content": "\nMonica is an open source project. The hosted version has a premium plan that let us collect money so we can pay for the servers and additional servers, but the main goal is not to make money (otherwise we wouldn’t have opened source it).\n\nMonica comes in two flavors: you can either use our hosted version, or download it and run it yourself. In the latter case, we do not track anything at all. We don’t know that you’ve even downloaded the product. Do whatever you want with it (but respect your local laws).\n\nWhen you create your account on our hosted version, you are giving the site information about yourself that we collect. This includes your name, your email address and your password, that is encrypted before being stored. We do not store any other personal information.\n\nWhen you login to the service, we are using cookies to remember your login credentials. This is the only use we do with the cookies.\n\nMonica runs on Linode and we are the only ones, apart from Linode’s employees, who have access to those servers.\n\nWe do hourly backups of the database.\n\nYour password is encrypted with bcrypt, a password hashing algorithm that is highly secure. You can also activate two factor authentication on your account if you need an extra layer of security. Apart from those encryptions mechanism, your data is not encrypted in the database. If someone gets access to the database, they will be able to read your data. We do our best to make sure that this will never happen, but it can happen.\n\nIf a data breach happens, we will contact the users who are affected to warn them about the breach.\n\nTransactional emails are dserved through Postmark.\n\nWe use an open source tool called Sentry to track errors that happen in production. Their service records the errors, but they don’t have access to any information apart the account ID, which lets me debug what’s going on.\n\nThe site does not currently and will never show ads. It also does not, and don’t intend to, sell data to a third party, with or without your consent. We are just against this. Fuck ads.\n\nWe do no use any tracking third parties, like Google Analytics or Intercom, that track user behaviours or data, neither on the marketing site or the hosted version. We are deeply against their principles as they would use those data to profile you, which we are totally against.\n\nAll the data you put on Monica belongs to you. We do not have any rights on it. Please don’t put illegal stuff on it, otherwise we’d be in trouble.\n\nAll the information about the contacts you put on Monica are private to you. We do not cross link information between accounts or use one information in an account to populate another account (unlike Facebook for instance).\n\nWe use Stripe to collect payments made to access the paid version. We do not store credit card information or anything concerning the transactions themselves on our servers. However, as per the open source library we use to process the payments (Laravel Cashier), we store the last 4 digits of the credit card, the brand name (VISA or MasterCard). As a user, you are identified on Stripe by a random number that they generate and use.\n\nRegarding the payments, you can downgrade to the free plan whenever you like. When you do, Stripe is automatically updated and we have no way to charge you again, even if we would like to. The less we deal with payment information, the happier we are.\n\nYou can export your data at any time. You can also use the API to export all your data if you know how to do it. You can also request that we process this ourselves and send it to you. Your data will be exported in the SQL format.\n\nWhen you close your account, we immediately destroy all your personal information and don’t keep any backup. While you have control over this, we can delete an account for you if you ask us.\n\nIn certain situations, we may be required to disclose peronal data in response to lawful requests by public authorities, including to met national security or law enforcements requirements. We just hope that this never happens.\n\nIf you violate the terms of use we will terminate your account and notify you about it. However if you follow the \"don’t be a dick\" policy, nothing should ever happen to you and we’ll all be happy.\n\nMonica uses only open-source projects that are mainly hosted on Github.\n\nWe will update this privacy policy as soon as we introduce new information practices. If we do, we will send an email to the email address specified in your account. We will never be a dick about it and will never, ever, introduce something in what we do that will affect your right to the absolute privacy.",
"created_at": "2018-04-12T00:00:00Z",
"updated_at": null
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/compliance?page=1",
"last": "https:\/\/app.monicahq.com\/api\/compliance?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/compliance",
"per_page": 15,
"to": 2,
"total": 2
}
}
Get a specific term and privacy policy
GET /compliance/:id
Response
{
"data": {
"id": 3,
"object": "term",
"term_version": "3",
"term_content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor.",
"privacy_version": "3",
"privacy_content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor.",
"created_at": "2018-05-18T00:00:00Z",
"updated_at": null
}
}
Get the status of all policies signed by a given user
GET /me/compliance
Response
{
"data": [
[
{
"signed": true,
"signed_date": "2018-05-18T21:14:21Z",
"ip_address": "127.0.0.1",
"user": {
"id": 1,
"object": "user",
"first_name": "John",
"last_name": "Doe",
"email": "
[email protected]
",
"timezone": "US\/Eastern",
"currency": {
"id": 2,
"object": "currency",
"iso": "USD",
"name": "US Dollar",
"symbol": "$"
},
"locale": "en",
"is_policy_compliant": true,
"account": {
"id": 1
},
"created_at": "2018-05-14T22:21:09Z",
"updated_at": "2018-05-14T22:21:09Z"
},
"term": {
"id": 3,
"object": "term",
"term_version": "3",
"term_content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor.",
"privacy_version": "3",
"privacy_content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor.",
"created_at": "2018-05-18T00:00:00Z",
"updated_at": null
}
}
],
[
{
"signed": true,
"signed_date": "2018-05-18T00:00:00Z",
"ip_address": "129.3.1.2.",
"user": {
"id": 1,
"object": "user",
"first_name": "John",
"last_name": "Doe",
"email": "
[email protected]
",
"timezone": "US\/Eastern",
"currency": {
"id": 2,
"object": "currency",
"iso": "USD",
"name": "US Dollar",
"symbol": "$"
},
"locale": "en",
"is_policy_compliant": true,
"account": {
"id": 1
},
"created_at": "2018-05-14T22:21:09Z",
"updated_at": "2018-05-14T22:21:09Z"
},
"term": {
"id": 1,
"object": "term",
"term_version": "2",
"term_content": "\nScope of service\nMonica supports the following browsers:\n\nInternet Explorer (11+)\nFirefox (50+)\nChrome (latest)\nSafari (latest)\nI do not guarantee that the site will work with other browsers, but it’s very likely that it will just work.\n\nRights\nYou don’t have to provide your real name when you register to an account. You do however need a valid email address if you want to upgrade your account to the paid version, or receive reminders by email.\n\nYou have the right to close your account at any time.\n\nYou have the right to export your data at any time, in the SQL format.\n\nYour data will not be intentionally shown to other users or shared with third parties.\n\nYour personal data will not be shared with anyone without your consent.\n\nYour data is backed up every hour.\n\nIf the site ceases operation, you will receive an opportunity to export all your data before the site dies.\n\nAny new features that affect privacy will be strictly opt-in.\n\nResponsibilities\nYou will not use the site to store illegal information or data under the Canadian law (or any law).\n\nYou have to be at least 18+ to create an account and use the site.\n\nYou must not abuse the site by knowingly posting malicious code that could harm you or the other users.\n\nYou must only use the site to do things that are widely accepted as morally good.\n\nYou may not make automated requests to the site.\n\nYou may not abuse the invitation system.\n\nYou are responsible for keeping your account secure.\n\nI reserve the right to close accounts that abuse the system (thousands of contacts with hundred of thousands of reminders for instance) or use it in an unreasonable manner.\n\nOther important legal stuff\nThough I want to provide a great service, there are certain things about the service I cannot promise. For example, the services and software are provided “as-is”, at your own risk, without express or implied warranty or condition of any kind. I also disclaim any warranties of merchantability, fitness for a particular purpose or non-infringement. Monica will have no responsibility for any harm to your computer system, loss or corruption of data, or other harm that results from your access to or use of the Services or Software.\n\nThese Terms can change at any time, but I’ll never be a dick about it. Running this site is a dream come true to me, and I hope I’ll be able to run it as long as I can.\n        ",
"privacy_version": "2",
"privacy_content": "\nMonica is an open source project. The hosted version has a premium plan that let us collect money so we can pay for the servers and additional servers, but the main goal is not to make money (otherwise we wouldn’t have opened source it).\n\nMonica comes in two flavors: you can either use our hosted version, or download it and run it yourself. In the latter case, we do not track anything at all. We don’t know that you’ve even downloaded the product. Do whatever you want with it (but respect your local laws).\n\nWhen you create your account on our hosted version, you are giving the site information about yourself that we collect. This includes your name, your email address and your password, that is encrypted before being stored. We do not store any other personal information.\n\nWhen you login to the service, we are using cookies to remember your login credentials. This is the only use we do with the cookies.\n\nMonica runs on Linode and we are the only ones, apart from Linode’s employees, who have access to those servers.\n\nWe do hourly backups of the database.\n\nYour password is encrypted with bcrypt, a password hashing algorithm that is highly secure. You can also activate two factor authentication on your account if you need an extra layer of security. Apart from those encryptions mechanism, your data is not encrypted in the database. If someone gets access to the database, they will be able to read your data. We do our best to make sure that this will never happen, but it can happen.\n\nIf a data breach happens, we will contact the users who are affected to warn them about the breach.\n\nTransactional emails are dserved through Postmark.\n\nWe use an open source tool called Sentry to track errors that happen in production. Their service records the errors, but they don’t have access to any information apart the account ID, which lets me debug what’s going on.\n\nThe site does not currently and will never show ads. It also does not, and don’t intend to, sell data to a third party, with or without your consent. We are just against this. Fuck ads.\n\nWe do no use any tracking third parties, like Google Analytics or Intercom, that track user behaviours or data, neither on the marketing site or the hosted version. We are deeply against their principles as they would use those data to profile you, which we are totally against.\n\nAll the data you put on Monica belongs to you. We do not have any rights on it. Please don’t put illegal stuff on it, otherwise we’d be in trouble.\n\nAll the information about the contacts you put on Monica are private to you. We do not cross link information between accounts or use one information in an account to populate another account (unlike Facebook for instance).\n\nWe use Stripe to collect payments made to access the paid version. We do not store credit card information or anything concerning the transactions themselves on our servers. However, as per the open source library we use to process the payments (Laravel Cashier), we store the last 4 digits of the credit card, the brand name (VISA or MasterCard). As a user, you are identified on Stripe by a random number that they generate and use.\n\nRegarding the payments, you can downgrade to the free plan whenever you like. When you do, Stripe is automatically updated and we have no way to charge you again, even if we would like to. The less we deal with payment information, the happier we are.\n\nYou can export your data at any time. You can also use the API to export all your data if you know how to do it. You can also request that we process this ourselves and send it to you. Your data will be exported in the SQL format.\n\nWhen you close your account, we immediately destroy all your personal information and don’t keep any backup. While you have control over this, we can delete an account for you if you ask us.\n\nIn certain situations, we may be required to disclose peronal data in response to lawful requests by public authorities, including to met national security or law enforcements requirements. We just hope that this never happens.\n\nIf you violate the terms of use we will terminate your account and notify you about it. However if you follow the \"don’t be a dick\" policy, nothing should ever happen to you and we’ll all be happy.\n\nMonica uses only open-source projects that are mainly hosted on Github.\n\nWe will update this privacy policy as soon as we introduce new information practices. If we do, we will send an email to the email address specified in your account. We will never be a dick about it and will never, ever, introduce something in what we do that will affect your right to the absolute privacy.",
"created_at": "2018-04-12T00:00:00Z",
"updated_at": null
}
}
]
]
}
Get the status of a specific policy of a given user
You can check that a specific policy version has been accepted by the authenticated user.
GET /me/compliance/:id
Response
{
"data": {
"signed": true,
"ip_address": "127.0.0.1",
"user": {
"id": 1,
"object": "user",
"first_name": "John",
"last_name": "Doe",
"email": "
[email protected]
",
"timezone": "US\/Eastern",
"currency": {
"id": 2,
"object": "currency",
"iso": "USD",
"name": "US Dollar",
"symbol": "$"
},
"locale": "en",
"is_policy_compliant": true,
"account": {
"id": 1
},
"created_at": "2018-05-14T22:21:09Z",
"updated_at": "2018-05-14T22:21:09Z"
},
"term": {
"id": 3,
"object": "term",
"term_version": "3",
"term_content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor.",
"privacy_version": "3",
"privacy_content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor.",
"created_at": "2018-05-18T00:00:00Z",
"updated_at": null
}
}
}
Sign the latest compliance policy for the authenticated user
POST /me/compliance/
Input
Name
Type
Description
ip_address
string
Required
. The IP address the user wants to sign the compliance from.
Example
{
"ip_address": "127.0.0.1"
}
Response
{
"data": {
"signed": true,
"signed_date": "2018-05-18T21:14:21Z",
"ip_address": "127.0.0.1",
"user": {
"id": 1,
"object": "user",
"first_name": "John",
"last_name": "Doe",
"email": "
[email protected]
",
"timezone": "US\/Eastern",
"currency": {
"id": 2,
"object": "currency",
"iso": "USD",
"name": "US Dollar",
"symbol": "$"
},
"locale": "en",
"is_policy_compliant": true,
"account": {
"id": 1
},
"created_at": "2018-05-14T22:21:09Z",
"updated_at": "2018-05-14T22:21:09Z"
},
"term": {
"id": 3,
"object": "term",
"term_version": "3",
"term_content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor.",
"privacy_version": "3",
"privacy_content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor.",
"created_at": "2018-05-18T00:00:00Z",
"updated_at": null
}
}
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Contacts
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Contacts
Overview
Special dates
List all your contacts
Parameters
Response
Sorting
List all the contacts for a given tag
Parameters
Response
Get a specific contact
Get a
real
contact
Get a
partial
contact
Get a contact with contact fields information
Get the audit logs for the contact
Parameters
Create a contact
Input
Example
Response
Update a contact
Input
Example
Response
Update a contact career
Input
Example
Response
Delete a contact
Response
Search
Input
Response
Overview
The Contact object is the core of what Monica is all about. The API allows you
to create, delete and update your contacts. You can retrieve individual contacts
as well as a list of all your contacts.
It's important to understand that all the people in Monica are Contact objects -
that includes relationship contacts like kids or significant other. However, there
are two types of contacts:
real
contacts
partial
contacts.
A
real
contact is a contact that you have a lot of information about -
therefore you can attach activities, reminders, notes, etc... to the object.
Real contacts have their own contact sheet.
A
partial
contact, however, is a person you don't have a lot of information
about. This is typically the spouse of one of your friend, or their child for
whom you only need to remember the names and the date of birth. A
partial
contact is always linked to a
real
contact. Partial contacts don't have their
own contact sheet and shouldn't have one.
A
partial
contact has the flag
is_partial
set to
true
.
When creating
real
contacts, the only rule is the uniqueness of the email
address in the user's account. If you try to use the same email address when
creating another contact in the account, the API will return an error.
Special dates
Some dates about a contact are considered "special". Currently three dates have this special type:
birthdate
deceased date
first met date
Those dates are special because they can be based on different factors:
User knows the exact date: Oct 29 1981.
User knows only the month and day, but not the year: Oct 29.
User knows the age, but not the date.
User doesn't know the date at all.
When you retrieve one of these dates, here is what you get:
{
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1994-01-27T00:00:00Z"
}
If the
date
field is present and not null, that means we know a date for the birthdate of the contact.
is_age_based
: this indicates whether the date is based on the age provided by the user or not. When it is,
date
is set with the right year, but the month and the day should be set to
01
. We can't set a reminder to a date that is age-based.
is_year_unknown
: this indicates whether we know the year of birth of the contact or not. If we don't know the year,
date
has to be set to the current year.
Note that
is_year_unknown
and
is_age_based
are mutually exclusive. That means, if
is_age_based
is true,
is_year_unknown
has to be false and vice versa.
Below is a summary of the different use-cases. We assume the current year is 2017.
I don't know the date of birth of a contact
Query:
{
...
"birthdate": null,
"birthdate_is_age_based": false,
"birthdate_is_year_unknown": false,
"birthdate_age": null,
...
Response:
{
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": null
}
I only know the age of a contact
Query:
{
...
"birthdate": null,
"birthdate_is_age_based": true,
"birthdate_is_year_unknown": false,
"birthdate_age": 29,
...
Response:
{
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "1994-01-01T00:00:00Z"
}
I know the day and month of birth of a contact
Query:
{
...
"birthdate": "2017-10-29 00:00:00",
"birthdate_is_age_based": false,
"birthdate_is_year_unknown": true,
"birthdate_age": null,
...
Response:
{
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2017-10-29T00:00:00Z"
}
I know the day, month and year of birth of a contact
Query:
{
...
"birthdate": "1994-03-21 00:00:00",
"birthdate_is_age_based": false,
"birthdate_is_year_unknown": false,
"birthdate_age": null,
...
Response:
{
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1994-03-21T00:00:00Z"
}
List all your contacts
GET /contacts/
Parameters
Name
Type
Description
limit
integer
Indicates the page size.
page
integer
Indicates the page to return.
query
string
Performs a search with the given query.
sort
string
Indicates how the query should be ordered by. Possible values:
created_at
,
-created_at
,
updated_at
,
-updated_at
.
Response
{
"data": [
{
"id": 1,
"object": "contact",
"first_name": "Justen",
"last_name": "Flatley",
"nickname": "Rambo",
"gender": "male",
"is_partial": false,
"is_dead": false,
"last_called": null,
"last_activity_together": {
"date": "1977-07-17 00:00:00.000000",
"timezone_type": 3,
"timezone": "US\/Eastern"
},
"stay_in_touch_frequency": 5,
"stay_in_touch_trigger_date": "2018-04-26T09:25:43Z",
"information": {
"relationships": {
"love": {
"total": 0,
"contacts": []
},
"family": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 1,
"name": "son",
},
"contact": {
"id": 2,
"object": "contact",
"first_name": "Oscar",
"last_name": "Tremblay",
"nickname": "Rambo",
"gender": "male",
"is_partial": true,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2017-11-29T00:00:00Z"
}
},
"account": {
"id": 1
}
}
}
]
},
"friend": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 1,
"name": "son",
},
"contact": {
"id": 3,
"object": "contact",
"first_name": "Makayla",
"last_name": null,
"nickname": "Rambo",
"gender": "female",
"is_partial": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2017-02-27T00:00:00Z"
}
},
"account": {
"id": 1
}
}
}
]
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/randomuser.me\/api\/portraits\/men\/39.jpg",
"source": "external"
},
"food_preferencies": "Alice was a paper label, with the distant sobs of the March Hare. Visit either you like: they're both mad.' 'But I don't believe you do lessons?' said Alice, 'because I'm not myself, you see.' 'I.",
"how_you_met": {
"general_information": "King exclaimed.",
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": {
"id": 4,
"object": "contact",
"first_name": "Johnathon",
"last_name": "Stark",
"nickname": "Rambo",
"gender": "male",
"is_partial": true,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2017-09-24T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"account": {
"id": 1
}
}
}
},
"addresses": [],
"tags": [],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 5,
"number_of_activities": 3,
"number_of_reminders": 0,
"number_of_tasks": 3,
"number_of_gifts": 7,
"number_of_debts": 1
},
"account": {
"id": 1
},
"created_at": "2017-12-12T09:57:15Z",
"updated_at": "2017-12-12T09:57:15Z"
},
{
"id": 3,
"object": "contact",
"first_name": "Makayla",
"last_name": null,
"nickname": "Rambo",
"gender": "female",
"is_partial": false,
"is_dead": false,
"last_called": null,
"last_activity_together": null,
"stay_in_touch_frequency": 5,
"stay_in_touch_trigger_date": "2018-04-26T09:25:43Z",
"information": {
"relationships": {
"love": {
"total": 0,
"contacts": []
},
"family": {
"total": 0,
"contacts": []
},
"friend": {
"total": 0,
"contacts": []
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2017-02-27T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": null,
"source": null
},
"food_preferencies": null,
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": null
}
},
"addresses": [],
"tags": [],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 0,
"number_of_activities": 0,
"number_of_reminders": 1,
"number_of_tasks": 0,
"number_of_gifts": 0,
"number_of_debts": 0
},
"account": {
"id": 1
},
"created_at": "2017-12-12T09:57:15Z",
"updated_at": "2017-12-12T09:57:15Z"
}
],
"links": {
"first": "http:\/\/monica.app\/api\/contacts?page=1",
"last": "http:\/\/monica.app\/api\/contacts?page=104",
"prev": null,
"next": "http:\/\/monica.app\/api\/contacts?page=2"
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 104,
"path": "http:\/\/monica.app\/api\/contacts",
"per_page": "2",
"to": 2,
"total": 208
}
}
Sorting
You can sort this query. Accepted criteria are:
Name
Description
created_at
Will add
order by created_at asc
to the query
-created_at
Will add
order by created_at desc
to the query
updated_at
Will add
order by updated_at asc
to the query
-updated_at
Will add
order by updated_at desc
to the query
List all the contacts for a given tag
This method lists all the contacts for a given tag.
GET /tags/{:id}/contacts
Parameters
Name
Type
Description
limit
integer
Indicates the page size.
page
integer
Indicates the page to return.
Response
{
"data": [
{
"id": 117,
"object": "contact",
"hash_id": "h:Nvp2EaJrg9Pbl1YyX5",
"first_name": "Pamela",
"last_name": null,
"nickname": null,
"gender": "Rather not say",
"gender_type": "O",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": false,
"is_me": false,
"last_called": null,
"last_activity_together": null,
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 0,
"contacts": []
},
"family": {
"total": 0,
"contacts": []
},
"friend": {
"total": 0,
"contacts": []
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/3e0c4041-5140-48fd-a58d-b45d9ea00c46.jpg?1579446390",
"source": "default",
"default_avatar_color": "#93521e"
},
"food_preferences": null,
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": null
}
},
"addresses": [],
"tags": [
{
"id": 104,
"object": "tag",
"name": "dicta",
"name_slug": "dicta",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:30Z",
"updated_at": "2020-01-19T15:06:30Z"
},
{
"id": 83,
"object": "tag",
"name": "quod",
"name_slug": "quod",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:26Z",
"updated_at": "2020-01-19T15:06:26Z"
},
{
"id": 44,
"object": "tag",
"name": "aut",
"name_slug": "aut",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:20Z",
"updated_at": "2020-01-19T15:06:20Z"
},
{
"id": 9,
"object": "tag",
"name": "nihil",
"name_slug": "nihil",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 82,
"object": "tag",
"name": "in",
"name_slug": "in",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:26Z",
"updated_at": "2020-01-19T15:06:26Z"
},
{
"id": 105,
"object": "tag",
"name": "rem",
"name_slug": "rem",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:30Z",
"updated_at": "2020-01-19T15:06:30Z"
},
{
"id": 1,
"object": "tag",
"name": "qui",
"name_slug": "qui",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 47,
"object": "tag",
"name": "quia",
"name_slug": "quia",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:22Z",
"updated_at": "2020-01-19T15:06:22Z"
},
{
"id": 35,
"object": "tag",
"name": "et",
"name_slug": "et",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:19Z",
"updated_at": "2020-01-19T15:06:19Z"
}
],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 1,
"number_of_activities": 0,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 5,
"number_of_debts": 4
},
"contactFields": [],
"notes": [
{
"id": 71,
"object": "note",
"body": "Mock Turtle yawned and shut his eyes.--'Tell her about the crumbs,' said the.",
"is_favorited": true,
"favorited_at": "2005-10-31T00:00:00Z",
"url": "https:\/\/monica.test\/api\/notes\/71",
"account": {
"id": 1
},
"contact": {
"id": 117,
"object": "contact",
"hash_id": "h:Nvp2EaJrg9Pbl1YyX5",
"first_name": "Pamela",
"last_name": null,
"nickname": null,
"complete_name": "Pamela",
"initials": "P",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/3e0c4041-5140-48fd-a58d-b45d9ea00c46.jpg?1579446390",
"source": "default",
"default_avatar_color": "#93521e"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/117",
"account": {
"id": 1
}
},
"created_at": "2020-01-19T15:06:30Z",
"updated_at": "2020-01-19T15:06:30Z"
}
],
"url": "https:\/\/monica.test\/api\/contacts\/117",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:30Z",
"updated_at": "2020-01-19T15:06:30Z"
}
],
"links": {
"first": "https:\/\/monica.test\/api\/tags\/1\/contacts?page=1",
"last": "https:\/\/monica.test\/api\/tags\/1\/contacts?page=5",
"prev": null,
"next": "https:\/\/monica.test\/api\/tags\/1\/contacts?page=2"
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 5,
"path": "https:\/\/monica.test\/api\/tags\/1\/contacts",
"per_page": "1",
"to": 1,
"total": 5
}
}
Get a specific contact
Get a
real
contact
GET /contacts/:id
{
"data": {
"id": 1,
"object": "contact",
"first_name": "Justen",
"last_name": "Flatley",
"nickname": "Rambo",
"gender": "male",
"is_partial": false,
"is_dead": false,
"last_called": null,
"last_activity_together": {
"date": "1977-07-17 00:00:00.000000",
"timezone_type": 3,
"timezone": "US\/Eastern"
},
"stay_in_touch_frequency": 5,
"stay_in_touch_trigger_date": "2018-04-26T09:25:43Z",
"information": {
"relationships": {
"love": {
"total": 0,
"contacts": []
},
"family": {
"total": 0,
"contacts": []
},
"friend": {
"total": 0,
"contacts": []
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/randomuser.me\/api\/portraits\/men\/39.jpg",
"source": "external"
},
"food_preferencies": "Alice was a paper label, with the distant sobs of the March Hare. Visit either you like: they're both mad.' 'But I don't believe you do lessons?' said Alice, 'because I'm not myself, you see.' 'I.",
"how_you_met": {
"general_information": "King exclaimed.",
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": {
"id": 4,
"object": "contact",
"first_name": "Johnathon",
"last_name": "Stark",
"nickname": "Rambo",
"gender": "male",
"is_partial": true,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2017-09-24T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"account": {
"id": 1
}
}
}
},
"addresses": [],
"tags": [],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 5,
"number_of_activities": 3,
"number_of_reminders": 0,
"number_of_tasks": 3,
"number_of_gifts": 7,
"number_of_debts": 1
},
"account": {
"id": 1
},
"created_at": "2017-12-12T09:57:15Z",
"updated_at": "2017-12-12T09:57:15Z"
}
}
Get a
partial
contact
Partial contacts are relationship contacts.
GET /contacts/:id
{
"data": {
"id": 10,
"object": "contact",
"first_name": "Casandra",
"last_name": null,
"nickname": "Rambo",
"gender": "female",
"is_partial": true,
"is_dead": false,
"information": {
"dates": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1994-01-27T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
}
},
"account": {
"id": 1
},
"created_at": "2017-12-12T09:57:16Z",
"updated_at": "2017-12-12T09:57:16Z"
}
}
Get a contact with contact fields information
Sometimes you need to have more information about a specific contact. This is especially useful in the context of the mobile application, where you need to reduce the amount of calls as much as possible.
The contact fields are added at the bottom of the JSON file that is returned. When doing this call, we also return the latest 3 notes that the user has written about the current contact.
GET /contacts/:id?with=contactfields
{
"data": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Frieda",
"last_name": "Mayer",
"nickname": "Prof. Shawna Kunze",
"gender": "Woman",
"gender_type": "F",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": false,
"is_me": false,
"last_called": null,
"last_activity_together": "2019-05-19T00:00:00.000000Z",
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 0,
"contacts": []
},
"family": {
"total": 0,
"contacts": []
},
"friend": {
"total": 0,
"contacts": []
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "2003-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/f7cd73b9-5027-4f66-ab8d-1d578b7a2274.jpg?1579446377",
"source": "default",
"default_avatar_color": "#ff9807"
},
"food_preferences": "First, she tried the roots of trees, and I've tried to get dry very soon. 'Ahem!' said the Cat. 'I don't think--' 'Then you shouldn't talk,' said the Mock Turtle, capering wildly about. 'Change.",
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": null
}
},
"addresses": [
{
"id": 1,
"object": "address",
"name": "qui",
"street": null,
"city": "East Mabelleburgh",
"province": null,
"postal_code": "61454-4639",
"latitude": null,
"longitude": null,
"country": {
"id": "SZ",
"object": "country",
"name": "Eswatini",
"iso": "SZ"
},
"url": "https:\/\/monica.test\/api\/addresses\/1",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Frieda",
"last_name": "Mayer",
"nickname": "Prof. Shawna Kunze",
"complete_name": "Frieda Mayer (Prof. Shawna Kunze)",
"initials": "FMSK",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "2003-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/f7cd73b9-5027-4f66-ab8d-1d578b7a2274.jpg?1579446377",
"source": "default",
"default_avatar_color": "#ff9807"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/1",
"account": {
"id": 1
}
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
}
],
"tags": [
{
"id": 1,
"object": "tag",
"name": "qui",
"name_slug": "qui",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 2,
"object": "tag",
"name": "debitis",
"name_slug": "debitis",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 3,
"object": "tag",
"name": "placeat",
"name_slug": "placeat",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 4,
"object": "tag",
"name": "dolor",
"name_slug": "dolor",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 5,
"object": "tag",
"name": "officiis",
"name_slug": "officiis",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 6,
"object": "tag",
"name": "ad",
"name_slug": "ad",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 7,
"object": "tag",
"name": "eligendi",
"name_slug": "eligendi",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 8,
"object": "tag",
"name": "soluta",
"name_slug": "soluta",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 9,
"object": "tag",
"name": "nihil",
"name_slug": "nihil",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 10,
"object": "tag",
"name": "sit",
"name_slug": "sit",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
}
],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 0,
"number_of_activities": 2,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 7,
"number_of_debts": 0
},
"contactFields": [
{
"id": 69,
"object": "contactfield",
"content": "asdfas",
"contact_field_type": {
"id": 1,
"object": "contactfieldtype",
"name": "Email",
"fontawesome_icon": "fa fa-envelope-open-o",
"protocol": "mailto:",
"delible": false,
"type": "email",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Frieda",
"last_name": "Mayer",
"nickname": "Prof. Shawna Kunze",
"complete_name": "Frieda Mayer (Prof. Shawna Kunze)",
"initials": "FMSK",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "2003-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/f7cd73b9-5027-4f66-ab8d-1d578b7a2274.jpg?1579446377",
"source": "default",
"default_avatar_color": "#ff9807"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/1",
"account": {
"id": 1
}
},
"created_at": "2020-01-31T22:08:03Z",
"updated_at": "2020-01-31T22:08:03Z"
},
{
"id": 70,
"object": "contactfield",
"content": "sdasdfa",
"contact_field_type": {
"id": 3,
"object": "contactfieldtype",
"name": "Facebook",
"fontawesome_icon": "fa fa-facebook-official",
"protocol": "https:\/\/facebook.com\/",
"delible": true,
"type": null,
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Frieda",
"last_name": "Mayer",
"nickname": "Prof. Shawna Kunze",
"complete_name": "Frieda Mayer (Prof. Shawna Kunze)",
"initials": "FMSK",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "2003-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/f7cd73b9-5027-4f66-ab8d-1d578b7a2274.jpg?1579446377",
"source": "default",
"default_avatar_color": "#ff9807"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/1",
"account": {
"id": 1
}
},
"created_at": "2020-01-31T22:08:09Z",
"updated_at": "2020-01-31T22:08:09Z"
}
],
"notes": [
{
"id": 115,
"object": "note",
"body": "This is an awesome note",
"is_favorited": false,
"favorited_at": null,
"url": "https:\/\/monica.test\/api\/notes\/115",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Frieda",
"last_name": "Mayer",
"nickname": "Prof. Shawna Kunze",
"complete_name": "Frieda Mayer (Prof. Shawna Kunze)",
"initials": "FMSK",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "2003-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/f7cd73b9-5027-4f66-ab8d-1d578b7a2274.jpg?1579446377",
"source": "default",
"default_avatar_color": "#ff9807"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/1",
"account": {
"id": 1
}
},
"created_at": "2020-01-31T22:30:38Z",
"updated_at": "2020-01-31T22:30:38Z"
},
{
"id": 114,
"object": "note",
"body": "This is another awesome note",
"is_favorited": false,
"favorited_at": null,
"url": "https:\/\/monica.test\/api\/notes\/114",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Frieda",
"last_name": "Mayer",
"nickname": "Prof. Shawna Kunze",
"complete_name": "Frieda Mayer (Prof. Shawna Kunze)",
"initials": "FMSK",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "2003-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/f7cd73b9-5027-4f66-ab8d-1d578b7a2274.jpg?1579446377",
"source": "default",
"default_avatar_color": "#ff9807"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/1",
"account": {
"id": 1
}
},
"created_at": "2020-01-31T22:30:36Z",
"updated_at": "2020-01-31T22:30:36Z"
}
],
"url": "https:\/\/monica.test\/api\/contacts\/1",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-31T22:08:09Z"
}
}
Get the audit logs for the contact
Audit logs can be filtered by contact.
GET /contacts/:id/logs
Parameters
Name
Type
Description
limit
integer
Indicates the page size.
page
integer
Indicates the page to return.
{
"data": [
{
"id": 1,
"object": "auditlog",
"author": {
"id": 1,
"name": null
},
"action": "contact_created",
"objects": {
"contact_name": "Celine Skiles",
"contact_id": 1
},
"audited_at": "2020-02-05T22:02:44Z",
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
}
],
"links": {
"first": "https:\/\/monica.test\/api\/contacts\/1\/logs?page=1",
"last": "https:\/\/monica.test\/api\/contacts\/1\/logs?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/monica.test\/api\/contacts\/1\/logs",
"per_page": 15,
"to": 1,
"total": 1
}
}
Create a contact
POST /contacts/
Input
If a field is not required, you can send the
null
value as the content of the field.
Name
Type
Description
first_name
string
Required
. The first name of the contact. Max 50 characters.
last_name
string
Last name of the contact. Max 100 characters.
nickname
string
Nickname of the contact. Max 100 characters.
gender_id
integer
Required
. The Gender ID of the contact. Gender IDs are retrieved through the
Gender's API
.
birthdate_day
integer
Birthdate day of the contact. Required when is_birthdate_known is true and birthdate_is_age_based is false.
birthdate_month
integer
Birthdate month of the contact. Required when is_birthdate_known is true and birthdate_is_age_based is false.
birthdate_year
integer
Birthdate year of the contact.
birthdate_is_age_based
boolean
Indicates whether the birthdate is age based or not.
is_birthdate_known
boolean
Required
.
birthdate_age
integer
The number of years between the birthdate and the current year. Required when is_birthdate_known is true and birthdate_is_age_based is true.
is_partial
boolean
Indicates whether a contact is
real
(false) or
partial
(true).
is_deceased
boolean
Required
. Indicates whether a contact is deceased.
is_deceased_date_known
boolean
Required
.
deceased_date_add_reminder
boolean
Whether add a reminder for the deceased date or not.
deceased_date_day
integer
Deceased day of the contact.
deceased_date_month
integer
Deceased month of the contact.
deceased_date_year
integer
Deceased year of the contact.
deceased_date_is_age_based
boolean
Indicates whether the deceased_date is age based or not.
Example
{
"first_name": "henri",
"last_name": "troyat",
"nickname": "Rambo",
"gender_id": 1,
"birthdate_day": null,
"birthdate_month": null,
"birthdate_year": null,
"is_birthdate_known": false,
"birthdate_is_age_based": true,
"is_birthdate_known": false,
"birthdate_age": 29,
"is_partial": false,
"is_deceased": true,
"deceased_date_day": 2,
"deceased_date_month": 2,
"deceased_date_year": 2017,
"deceased_date_is_age_based": false,
"is_deceased_date_known": true,
}
Response
The API call returns a contact object if the call succeeds.
{
"data": {
"id": 206,
"object": "contact",
"hash_id": "h:j9ePOdJb0XdbB6EN1R",
"first_name": "henri",
"last_name": "troyat",
"nickname": "Rambo",
"complete_name": "henri troyat (Rambo) ⚰",
"description": null,
"gender": "Man",
"gender_type": "M",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": true,
"is_me": false,
"last_called": null,
"last_activity_together": null,
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 0,
"contacts": []
},
"family": {
"total": 0,
"contacts": []
},
"friend": {
"total": 0,
"contacts": []
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": false,
"is_year_unknown": false,
"date": "2017-02-02T00:00:00Z"
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/600a4566-89fb-4768-a825-0aa19355b722.jpg?1580520601",
"source": "default",
"default_avatar_color": "#b3d5fe"
},
"food_preferences": null,
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": null
}
},
"addresses": [],
"tags": [],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 0,
"number_of_activities": 0,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 0,
"number_of_debts": 0
},
"url": "https:\/\/monica.test\/api\/contacts\/206",
"account": {
"id": 1
},
"created_at": "2020-02-01T01:30:01Z",
"updated_at": "2020-02-01T01:30:01Z"
}
}
Update a contact
PUT /contacts/:id
Input
Name
Type
Description
first_name
string
Required
. The first name of the contact. Max 50 characters.
last_name
string
Last name of the contact. Max 100 characters.
nickname
string
Nickname of the contact. Max 100 characters.
gender_id
integer
Required
. The Gender ID of the contact. Gender IDs are retrieved through the
Gender's API
.
birthdate_day
integer
Birthdate day of the contact. Required when is_birthdate_known is true and birthdate_is_age_based is false.
birthdate_month
integer
Birthdate month of the contact. Required when is_birthdate_known is true and birthdate_is_age_based is false.
birthdate_year
integer
Birthdate year of the contact.
birthdate_is_age_based
boolean
Indicates whether the birthdate is age based or not.
is_birthdate_known
boolean
Required
.
birthdate_age
integer
The number of years between the birthdate and the current year. Required when is_birthdate_known is true and birthdate_is_age_based is true.
is_partial
boolean
Indicates whether a contact is
real
(false) or
partial
(true).
is_deceased
boolean
Required
. Indicates whether a contact is deceased.
is_deceased_date_known
boolean
Required
.
deceased_date_add_reminder
boolean
Whether add a reminder for the deceased date or not.
deceased_date_day
integer
Deceased day of the contact.
deceased_date_month
integer
Deceased month of the contact.
deceased_date_year
integer
Deceased year of the contact.
deceased_date_is_age_based
boolean
Indicates whether the deceased_date is age based or not.
Example
{
"first_name": "henri",
"last_name": "troyat",
"nickname": "Rambo",
"gender_id": 1,
"birthdate_day": null,
"birthdate_month": null,
"birthdate_year": null,
"birthdate_is_age_based": true,
"is_birthdate_known": false,
"birthdate_age": 29,
"is_partial": false,
"is_deceased": true,
"deceased_date": null,
"deceased_date_is_age_based": true,
"deceased_date_is_year_unknown": false,
"deceased_date_age": 98,
"is_deceased_date_known": false
}
Response
{
"data": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "henri",
"last_name": "troyat",
"nickname": "Rambo",
"complete_name": "henri troyat (Rambo) ⚰",
"description": "kjlkjkl",
"gender": "Man",
"gender_type": "M",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": true,
"is_me": false,
"last_called": null,
"last_activity_together": "2019-05-19T00:00:00.000000Z",
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 0,
"contacts": []
},
"family": {
"total": 0,
"contacts": []
},
"friend": {
"total": 0,
"contacts": []
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/f7cd73b9-5027-4f66-ab8d-1d578b7a2274.jpg?1580520815",
"source": "default",
"default_avatar_color": "#ff9807"
},
"food_preferences": "First, she tried the roots of trees, and I've tried to get dry very soon. 'Ahem!' said the Cat. 'I don't think--' 'Then you shouldn't talk,' said the Mock Turtle, capering wildly about. 'Change.",
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": null
}
},
"addresses": [
{
"id": 1,
"object": "address",
"name": "qui",
"street": null,
"city": "East Mabelleburgh",
"province": null,
"postal_code": "61454-4639",
"latitude": null,
"longitude": null,
"country": {
"id": "SZ",
"object": "country",
"name": "Eswatini",
"iso": "SZ"
},
"url": "https:\/\/monica.test\/api\/addresses\/1",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "henri",
"last_name": "troyat",
"nickname": "Rambo",
"complete_name": "henri troyat (Rambo) ⚰",
"initials": "ht",
"gender": "Man",
"gender_type": "M",
"is_partial": false,
"is_dead": true,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/f7cd73b9-5027-4f66-ab8d-1d578b7a2274.jpg?1580520815",
"source": "default",
"default_avatar_color": "#ff9807"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/1",
"account": {
"id": 1
}
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
}
],
"tags": [
{
"id": 1,
"object": "tag",
"name": "qui",
"name_slug": "qui",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 2,
"object": "tag",
"name": "debitis",
"name_slug": "debitis",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 3,
"object": "tag",
"name": "placeat",
"name_slug": "placeat",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 4,
"object": "tag",
"name": "dolor",
"name_slug": "dolor",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 5,
"object": "tag",
"name": "officiis",
"name_slug": "officiis",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 6,
"object": "tag",
"name": "ad",
"name_slug": "ad",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 7,
"object": "tag",
"name": "eligendi",
"name_slug": "eligendi",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 8,
"object": "tag",
"name": "soluta",
"name_slug": "soluta",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 9,
"object": "tag",
"name": "nihil",
"name_slug": "nihil",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 10,
"object": "tag",
"name": "sit",
"name_slug": "sit",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
}
],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 2,
"number_of_activities": 2,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 7,
"number_of_debts": 0
},
"url": "https:\/\/monica.test\/api\/contacts\/1",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-02-01T01:33:35Z"
}
}
Update a contact career
PUT /contacts/:id/work
Input
Name
Type
Description
job
string
The job title. Max 255 characters.
company
string
The company name. Max 255 characters.
Example
{
"job": "Big boss",
"company": "Monicahq"
}
Response
{
"data": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "henri",
"last_name": "troyat",
"nickname": "Rambo",
"complete_name": "henri troyat (Rambo) ⚰",
"description": "kjlkjkl",
"gender": "Man",
"gender_type": "M",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": true,
"is_me": false,
"last_called": null,
"last_activity_together": "2019-05-19T00:00:00.000000Z",
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 0,
"contacts": []
},
"family": {
"total": 0,
"contacts": []
},
"friend": {
"total": 0,
"contacts": []
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": "sales",
"company": "dunder mifflin"
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/f7cd73b9-5027-4f66-ab8d-1d578b7a2274.jpg?1580520930",
"source": "default",
"default_avatar_color": "#ff9807"
},
"food_preferences": "First, she tried the roots of trees, and I've tried to get dry very soon. 'Ahem!' said the Cat. 'I don't think--' 'Then you shouldn't talk,' said the Mock Turtle, capering wildly about. 'Change.",
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": null
}
},
"addresses": [
{
"id": 1,
"object": "address",
"name": "qui",
"street": null,
"city": "East Mabelleburgh",
"province": null,
"postal_code": "61454-4639",
"latitude": null,
"longitude": null,
"country": {
"id": "SZ",
"object": "country",
"name": "Eswatini",
"iso": "SZ"
},
"url": "https:\/\/monica.test\/api\/addresses\/1",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "henri",
"last_name": "troyat",
"nickname": "Rambo",
"complete_name": "henri troyat (Rambo) ⚰",
"initials": "ht",
"gender": "Man",
"gender_type": "M",
"is_partial": false,
"is_dead": true,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/f7cd73b9-5027-4f66-ab8d-1d578b7a2274.jpg?1580520930",
"source": "default",
"default_avatar_color": "#ff9807"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/1",
"account": {
"id": 1
}
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
}
],
"tags": [
{
"id": 1,
"object": "tag",
"name": "qui",
"name_slug": "qui",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 2,
"object": "tag",
"name": "debitis",
"name_slug": "debitis",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 3,
"object": "tag",
"name": "placeat",
"name_slug": "placeat",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 4,
"object": "tag",
"name": "dolor",
"name_slug": "dolor",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 5,
"object": "tag",
"name": "officiis",
"name_slug": "officiis",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 6,
"object": "tag",
"name": "ad",
"name_slug": "ad",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 7,
"object": "tag",
"name": "eligendi",
"name_slug": "eligendi",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 8,
"object": "tag",
"name": "soluta",
"name_slug": "soluta",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 9,
"object": "tag",
"name": "nihil",
"name_slug": "nihil",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
},
{
"id": 10,
"object": "tag",
"name": "sit",
"name_slug": "sit",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-01-19T15:06:17Z"
}
],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 2,
"number_of_activities": 2,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 7,
"number_of_debts": 0
},
"url": "https:\/\/monica.test\/api\/contacts\/1",
"account": {
"id": 1
},
"created_at": "2020-01-19T15:06:17Z",
"updated_at": "2020-02-01T01:37:50Z"
}
}
Delete a contact
DELETE /contacts/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 93135
}
Search
You can search specific contacts. Here are the fields that search takes into account:
first name
last name
food preferencies
job
company.
GET /contacts?query=regis
Input
Name
Type
Description
query
string
Required
. The string you'd like to search.
Response
This call returns a collection of contacts. Note that
body.meta.query
contains the query you wanted to search.
{
"data": [
{
"id": 117,
"object": "contact",
"first_name": "Collin",
"last_name": "Moen",
"nickname": "Rambo",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"last_called": null,
"last_activity_together": null,
"stay_in_touch_frequency": 5,
"stay_in_touch_trigger_date": "2018-04-26T09:25:43Z",
"information": {
"relationships": {
"love": {
"total": 0,
"contacts": []
},
"family": {
"total": 0,
"contacts": []
},
"friend": {
"total": 0,
"contacts": []
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": null,
"source": null,
"default_avatar_color": "#fdb660"
},
"food_preferencies": null,
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": null
}
},
"addresses": [
{
"id": 7,
"object": "address",
"name": "beatae",
"street": "88761 Hallie Walk Apt. 685",
"city": null,
"province": null,
"postal_code": null,
"country": {
"id": 154,
"object": "country",
"name": "Montenegro",
"iso": "me"
},
"created_at": "2018-02-18T10:36:02Z",
"updated_at": "2018-02-18T10:36:02Z"
}
],
"tags": [],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 2,
"number_of_activities": 0,
"number_of_reminders": 1,
"number_of_tasks": 0,
"number_of_gifts": 0,
"number_of_debts": 4
},
"account": {
"id": 1
},
"created_at": "2018-02-18T10:36:02Z",
"updated_at": "2018-02-25T11:17:18Z"
}
],
"links": {
"first": "http://monica.test/api/contacts?page=1",
"last": "http://monica.test/api/contacts?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "http://monica.test/api/contacts",
"per_page": 15,
"to": 1,
"total": 1,
"query": "collin"
}
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Contact Fields
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Contact Field Types
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Conversations
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Conversations
Overview
List all the conversations in the account
Response
List all the conversations of a contact
Response
Get a specific conversation
Response
Create a conversation
Input
Example
Response
Update a conversation
Input
Example
Response
Delete a conversation
Response
Add a message to a conversation
Input
Example
Response
Update a message in a conversation
Input
Example
Response
Delete a message
Response
Overview
The Conversation object represents a conversation made with a contact. A contact can have as many conversations as necessary.
A conversation happens somewhere - on the phone, on a social network or a SMS application. This list is pulled from the Contact Field Types in the account of the user. Therefore, a conversation must have a contact field type id to be saved.
A conversation is made of one or more messages. The Message object contains the body of the conversation in itself. A Message can't be orphan and belongs to a Conversation.
List all the conversations in the account
GET /conversations
Response
{
"data": [
{
"id": 1,
"object": "conversation",
"happened_at": "1977-06-09T02:00:51Z",
"messages": [
{
"id": 1,
"object": "message",
"content": "The other side of the conversation. Alice replied, so eagerly that the Mouse to tell me who YOU are, first.' 'Why?' said the Hatter. He came in with the Queen merely remarking that a moment's pause.",
"written_at": "1953-04-02T14:28:10Z",
"written_by_me": true,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Soledad",
"last_name": null,
"nickname": null,
"complete_name": "Soledad",
"initials": "S",
"gender": "Rather not say",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/37.jpg",
"default_avatar_color": "#ff9807"
}
},
"account": {
"id": 1
}
},
"conversation": {
"id": 1
},
"created_at": "2018-10-11T01:31:40Z",
"updated_at": "2018-10-11T01:31:40Z"
},
{
"id": 2,
"object": "message",
"content": "I should think it would like the largest telescope that ever was! Good-bye, feet!' (for when she caught it, and very soon finished it off. * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *.",
"written_at": "1944-07-10T23:50:30Z",
"written_by_me": true,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Soledad",
"last_name": null,
"nickname": null,
"complete_name": "Soledad",
"initials": "S",
"gender": "Rather not say",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/37.jpg",
"default_avatar_color": "#ff9807"
}
},
"account": {
"id": 1
}
},
"conversation": {
"id": 1
},
"created_at": "2018-10-11T01:31:40Z",
"updated_at": "2018-10-11T01:31:40Z"
},
{
"id": 3,
"object": "message",
"content": "I used to come yet, please your Majesty,' said the Mouse was bristling all over, and both creatures hid their faces in their paws. 'And how many hours a day did you call him Tortoise--' 'Why did you.",
"written_at": "1943-12-31T14:17:43Z",
"written_by_me": false,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Soledad",
"last_name": null,
"nickname": null,
"complete_name": "Soledad",
"initials": "S",
"gender": "Rather not say",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/37.jpg",
"default_avatar_color": "#ff9807"
}
},
"account": {
"id": 1
}
},
"conversation": {
"id": 1
},
"created_at": "2018-10-11T01:31:40Z",
"updated_at": "2018-10-11T01:31:40Z"
},
{
"id": 4,
"object": "message",
"content": "I can't take more.' 'You mean you can't think! And oh, I wish you could keep it to the little creature down, and was delighted to find that she was coming to, but it had gone. 'Well! I've often seen.",
"written_at": "1961-04-09T17:17:50Z",
"written_by_me": true,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Soledad",
"last_name": null,
"nickname": null,
"complete_name": "Soledad",
"initials": "S",
"gender": "Rather not say",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/37.jpg",
"default_avatar_color": "#ff9807"
}
},
"account": {
"id": 1
}
},
"conversation": {
"id": 1
},
"created_at": "2018-10-11T01:31:40Z",
"updated_at": "2018-10-11T01:31:40Z"
},
{
"id": 5,
"object": "message",
"content": "I can kick a little!' She drew her foot as far down the little door into that beautiful garden--how IS that to be a queer thing, to be two people! Why, there's hardly enough of it altogether; but.",
"written_at": "1949-11-29T10:56:18Z",
"written_by_me": true,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Soledad",
"last_name": null,
"nickname": null,
"complete_name": "Soledad",
"initials": "S",
"gender": "Rather not say",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/37.jpg",
"default_avatar_color": "#ff9807"
}
},
"account": {
"id": 1
}
},
"conversation": {
"id": 1
},
"created_at": "2018-10-11T01:31:40Z",
"updated_at": "2018-10-11T01:31:40Z"
}
],
"contact_field_type": {
"id": 4,
"object": "contactfieldtype",
"name": "Twitter",
"fontawesome_icon": "fa fa-twitter-square",
"protocol": null,
"delible": true,
"type": null,
"account": {
"id": 1
},
"created_at": "2018-10-11T01:31:37Z",
"updated_at": "2018-10-11T01:31:37Z"
},
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Soledad",
"last_name": null,
"nickname": null,
"complete_name": "Soledad",
"initials": "S",
"gender": "Rather not say",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/37.jpg",
"default_avatar_color": "#ff9807"
}
},
"account": {
"id": 1
}
},
"created_at": "2018-10-11T01:31:40Z",
"updated_at": "2018-10-11T01:31:40Z"
}
...
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/conversations?page=1",
"last": "https:\/\/app.monicahq.com\/api\/conversations?page=22",
"prev": null,
"next": "https:\/\/app.monicahq.com\/api\/conversations?page=2"
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 22,
"path": "https:\/\/app.monicahq.com\/api\/conversations",
"per_page": 15,
"to": 15,
"total": 317
}
}
List all the conversations of a contact
GET /contacts/:id/conversations
Response
{
"data": [
{
"id": 1,
"object": "conversation",
"happened_at": "1977-06-09T00:00:00Z",
"messages": [
{
"id": 1,
"object": "message",
"content": "The other side of the conversation. Alice replied, so eagerly that the Mouse to tell me who YOU are, first.' 'Why?' said the Hatter. He came in with the Queen merely remarking that a moment's pause.",
"written_at": "1953-04-02T00:00:00Z",
"written_by_me": true,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Soledad",
"last_name": null,
"nickname": null,
"complete_name": "Soledad",
"initials": "S",
"gender": "Rather not say",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/37.jpg",
"default_avatar_color": "#ff9807"
}
},
"account": {
"id": 1
}
},
"conversation": {
"id": 1
},
"created_at": "2018-10-11T01:31:40Z",
"updated_at": "2018-10-11T01:31:40Z"
},
{
"id": 2,
"object": "message",
"content": "I should think it would like the largest telescope that ever was! Good-bye, feet!' (for when she caught it, and very soon finished it off. * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *.",
"written_at": "1944-07-10T00:00:00Z",
"written_by_me": true,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Soledad",
"last_name": null,
"nickname": null,
"complete_name": "Soledad",
"initials": "S",
"gender": "Rather not say",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/37.jpg",
"default_avatar_color": "#ff9807"
}
},
"account": {
"id": 1
}
},
"conversation": {
"id": 1
},
"created_at": "2018-10-11T01:31:40Z",
"updated_at": "2018-10-11T01:31:40Z"
},
{
"id": 3,
"object": "message",
"content": "I used to come yet, please your Majesty,' said the Mouse was bristling all over, and both creatures hid their faces in their paws. 'And how many hours a day did you call him Tortoise--' 'Why did you.",
"written_at": "1943-12-31T00:00:00Z",
"written_by_me": false,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Soledad",
"last_name": null,
"nickname": null,
"complete_name": "Soledad",
"initials": "S",
"gender": "Rather not say",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/37.jpg",
"default_avatar_color": "#ff9807"
}
},
"account": {
"id": 1
}
},
"conversation": {
"id": 1
},
"created_at": "2018-10-11T01:31:40Z",
"updated_at": "2018-10-11T01:31:40Z"
},
{
"id": 4,
"object": "message",
"content": "I can't take more.' 'You mean you can't think! And oh, I wish you could keep it to the little creature down, and was delighted to find that she was coming to, but it had gone. 'Well! I've often seen.",
"written_at": "1961-04-09T00:00:00Z",
"written_by_me": true,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Soledad",
"last_name": null,
"nickname": null,
"complete_name": "Soledad",
"initials": "S",
"gender": "Rather not say",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/37.jpg",
"default_avatar_color": "#ff9807"
}
},
"account": {
"id": 1
}
},
"conversation": {
"id": 1
},
"created_at": "2018-10-11T01:31:40Z",
"updated_at": "2018-10-11T01:31:40Z"
},
{
"id": 5,
"object": "message",
"content": "I can kick a little!' She drew her foot as far down the little door into that beautiful garden--how IS that to be a queer thing, to be two people! Why, there's hardly enough of it altogether; but.",
"written_at": "1949-11-29T00:00:00Z",
"written_by_me": true,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Soledad",
"last_name": null,
"nickname": null,
"complete_name": "Soledad",
"initials": "S",
"gender": "Rather not say",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/37.jpg",
"default_avatar_color": "#ff9807"
}
},
"account": {
"id": 1
}
},
"conversation": {
"id": 1
},
"created_at": "2018-10-11T01:31:40Z",
"updated_at": "2018-10-11T01:31:40Z"
}
],
"contact_field_type": {
"id": 4,
"object": "contactfieldtype",
"name": "Twitter",
"fontawesome_icon": "fa fa-twitter-square",
"protocol": null,
"delible": true,
"type": null,
"account": {
"id": 1
},
"created_at": "2018-10-11T01:31:37Z",
"updated_at": "2018-10-11T01:31:37Z"
},
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Soledad",
"last_name": null,
"nickname": null,
"complete_name": "Soledad",
"initials": "S",
"gender": "Rather not say",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/37.jpg",
"default_avatar_color": "#ff9807"
}
},
"account": {
"id": 1
}
},
"created_at": "2018-10-11T01:31:40Z",
"updated_at": "2018-10-11T01:31:40Z"
}
...
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/conversations?page=1",
"last": "https:\/\/app.monicahq.com\/api\/conversations?page=22",
"prev": null,
"next": "https:\/\/app.monicahq.com\/api\/conversations?page=2"
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 22,
"path": "https:\/\/app.monicahq.com\/api\/conversations",
"per_page": 15,
"to": 15,
"total": 317
}
}
Get a specific conversation
Retrieving a conversation contains all the messages of this conversation.
GET /conversations/:id
Response
{
"data": {
"id": 3,
"object": "conversation",
"happened_at": "1981-10-29T00:00:00Z",
"messages": [
{
"id": 4,
"object": "message",
"content": "lorem ipsum",
"written_at": "1998-02-02T00:00:00Z",
"written_by_me": true,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "John",
"last_name": "Doe",
"nickname": null,
"complete_name": "John Doe",
"initials": "JD",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#93521e"
}
},
"account": {
"id": 1
}
},
"conversation": {
"id": 3
},
"created_at": "2018-08-19T19:29:09Z",
"updated_at": "2018-08-19T19:29:09Z"
}
],
"contact_field_type": {
"id": 1,
"object": "contactfieldtype",
"name": "Email",
"fontawesome_icon": "fa fa-envelope-open-o",
"protocol": "mailto:",
"delible": false,
"type": "email",
"account": {
"id": 1
},
"created_at": "2018-08-18T19:07:58Z",
"updated_at": "2018-08-18T19:07:58Z"
},
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "John",
"last_name": "Doe",
"nickname": null,
"complete_name": "John Doe",
"initials": "JD",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#93521e"
}
},
"account": {
"id": 1
}
},
"created_at": "2018-08-19T19:15:03Z",
"updated_at": "2018-08-19T19:15:03Z"
}
}
Create a conversation
Creating a conversation only creates the conversation itself. You will have to add messages one by one to populate it with actual content.
POST /conversations/
Input
Name
Type
Description
happened_at
date
Required
. The date the conversation happened. Format: YYYY-MM-DD.
contact_field_type_id
integer
Required
. The type of the contact field. Has to be a valid, existing contact field type ID. You can retrieve the list of all the contact field types of an account
via the API
.
contact_id
integer
Required
. The ID of the contact that the conversation field is associated with.
Example
{
"happened_at": "1981-10-29",
"contact_id": 1,
"contact_field_type_id": 1
}
Response
The API call returns a Conversation object if the call succeeds.
{
"data": {
"id": 3,
"object": "conversation",
"happened_at": "1981-10-29T00:00:00Z",
"messages": [],
"contact_field_type": {
"id": 1,
"object": "contactfieldtype",
"name": "Email",
"fontawesome_icon": "fa fa-envelope-open-o",
"protocol": "mailto:",
"delible": false,
"type": "email",
"account": {
"id": 1
},
"created_at": "2018-08-18T19:07:58Z",
"updated_at": "2018-08-18T19:07:58Z"
},
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "John",
"last_name": "Doe",
"nickname": null,
"complete_name": "John Doe",
"initials": "JD",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#93521e"
}
},
"account": {
"id": 1
}
},
"created_at": "2018-08-19T19:15:03Z",
"updated_at": "2018-08-19T19:15:03Z"
}
}
Update a conversation
This only updates the conversation object itself - not the messages in the conversation.
PUT /conversations/:id
Input
Name
Type
Description
happened_at
date
Required
. The date the conversation happened. Format: YYYY-MM-DD.
Example
{
"happened_at": "2019-10-29"
}
Response
{
"data": {
"id": 3,
"object": "conversation",
"happened_at": "1981-10-29T00:00:00Z",
"messages": [],
"contact_field_type": {
"id": 1,
"object": "contactfieldtype",
"name": "Email",
"fontawesome_icon": "fa fa-envelope-open-o",
"protocol": "mailto:",
"delible": false,
"type": "email",
"account": {
"id": 1
},
"created_at": "2018-08-18T19:07:58Z",
"updated_at": "2018-08-18T19:07:58Z"
},
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "John",
"last_name": "Doe",
"nickname": null,
"complete_name": "John Doe",
"initials": "JD",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#93521e"
}
},
"account": {
"id": 1
}
},
"created_at": "2018-08-19T19:15:03Z",
"updated_at": "2018-08-19T19:15:03Z"
}
}
Delete a conversation
DELETE /conversations/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 31
}
Add a message to a conversation
POST /conversations/:id/messages
Input
Name
Type
Description
written_at
date
Required
. The date the message has been written. Format: YYYY-MM-DD.
written_by_me
boolean
Required
. True if the user has written the message. False if the contact has written the message.
content
text
Required
. The actual message.
contact_id
integer
Required
. The ID of the contact that the conversation is associated with.
Example
{
"contact_id": 1,
"written_at": "1998-02-02",
"written_by_me": true,
"content": "this is a message"
}
Response
The API call returns a Conversation object if the call succeeds.
{
"data": {
"id": 3,
"object": "conversation",
"happened_at": "1981-10-29T00:00:00Z",
"messages": [
{
"id": 4,
"object": "message",
"content": "this is a message",
"written_at": "1998-02-02T00:00:00Z",
"written_by_me": true,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "John",
"last_name": "Doe",
"nickname": null,
"complete_name": "John Doe",
"initials": "JD",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#93521e"
}
},
"account": {
"id": 1
}
},
"conversation": {
"id": 3
},
"created_at": "2018-08-19T19:29:09Z",
"updated_at": "2018-08-19T19:29:09Z"
}
],
"contact_field_type": {
"id": 1,
"object": "contactfieldtype",
"name": "Email",
"fontawesome_icon": "fa fa-envelope-open-o",
"protocol": "mailto:",
"delible": false,
"type": "email",
"account": {
"id": 1
},
"created_at": "2018-08-18T19:07:58Z",
"updated_at": "2018-08-18T19:07:58Z"
},
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "John",
"last_name": "Doe",
"nickname": null,
"complete_name": "John Doe",
"initials": "JD",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#93521e"
}
},
"account": {
"id": 1
}
},
"created_at": "2018-08-19T19:15:03Z",
"updated_at": "2018-08-19T19:15:03Z"
}
}
Update a message in a conversation
PUT /conversations/:id/messages/:id
Input
Name
Type
Description
written_at
date
Required
. The date the message has been written. Format: YYYY-MM-DD.
written_by_me
boolean
Required
. True if the user has written the message. False if the contact has written the message.
content
text
Required
. The actual message.
contact_id
integer
Required
. The ID of the contact that the conversation is associated with.
Example
{
"contact_id": 1,
"written_at": "1998-02-02",
"written_by_me": true,
"content": "this is a message"
}
Response
The API call returns a Conversation object if the call succeeds.
{
"data": {
"id": 3,
"object": "conversation",
"happened_at": "1981-10-29T00:00:00Z",
"messages": [
{
"id": 4,
"object": "message",
"content": "this is a message",
"written_at": "1998-02-02T00:00:00Z",
"written_by_me": true,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "John",
"last_name": "Doe",
"nickname": null,
"complete_name": "John Doe",
"initials": "JD",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#93521e"
}
},
"account": {
"id": 1
}
},
"conversation": {
"id": 3
},
"created_at": "2018-08-19T19:29:09Z",
"updated_at": "2018-08-19T19:29:09Z"
}
],
"contact_field_type": {
"id": 1,
"object": "contactfieldtype",
"name": "Email",
"fontawesome_icon": "fa fa-envelope-open-o",
"protocol": "mailto:",
"delible": false,
"type": "email",
"account": {
"id": 1
},
"created_at": "2018-08-18T19:07:58Z",
"updated_at": "2018-08-18T19:07:58Z"
},
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "John",
"last_name": "Doe",
"nickname": null,
"complete_name": "John Doe",
"initials": "JD",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#93521e"
}
},
"account": {
"id": 1
}
},
"created_at": "2018-08-19T19:15:03Z",
"updated_at": "2018-08-19T19:15:03Z"
}
}
Delete a message
DELETE /conversations/:id/messages/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 31
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Countries
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Countries
Overview
List all the countries
Response
Overview
The Country object is used in collaboration with the Address object. It
represents a country a contact lives in. The Country's API only allows read, as
there are not many new countries that are created every day. When you create an
address and need to indicate a country, use the Country object to retrieve the
country_id
that you need for the address.
List all the countries
Countries are order alphabetically by their name regarding the user's locale.
GET /countries/
Response
{
"data": {
"AFG": {
"id": "AF",
"object": "country",
"name": "Afghanistan",
"iso": "AF"
},
"WSB": {
"id": "WSB",
"object": "country",
"name": "Akrotiri",
"iso": "WSB"
},
...
"ZMB": {
"id": "ZM",
"object": "country",
"name": "Zambia",
"iso": "ZM"
},
"ZWE": {
"id": "ZW",
"object": "country",
"name": "Zimbabwe",
"iso": "ZW"
}
}
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Currencies
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Currencies
Overview
List all the currencies
Response
Get a specific currency
Response
Overview
This is the list of currencies we support.
List all the currencies
GET /currencies
Response
{
"data": [
{
"id": 1,
"object": "currency",
"iso": "CAD",
"name": "Canadian Dollar",
"symbol": "$"
},
{
"id": 2,
"object": "currency",
"iso": "USD",
"name": "US Dollar",
"symbol": "$"
},
{
"id": 3,
"object": "currency",
"iso": "GBP",
"name": "British Pound",
"symbol": "£"
},
{
"id": 4,
"object": "currency",
"iso": "EUR",
"name": "Euro",
"symbol": "€"
},
{
"id": 5,
"object": "currency",
"iso": "RUB",
"name": "Russian Ruble",
"symbol": "₽"
},
{
"id": 6,
"object": "currency",
"iso": "ZAR",
"name": "South African Rand",
"symbol": "R "
},
{
"id": 7,
"object": "currency",
"iso": "DKK",
"name": "Danish krone",
"symbol": "kr."
},
{
"id": 8,
"object": "currency",
"iso": "INR",
"name": "Indian rupee",
"symbol": "₹"
},
{
"id": 9,
"object": "currency",
"iso": "BRL",
"name": "Brazilian Real",
"symbol": "R$"
},
{
"id": 10,
"object": "currency",
"iso": "AED",
"name": "Emirati Dirham",
"symbol": ".د.ب"
},
{
"id": 11,
"object": "currency",
"iso": "AFN",
"name": "Afghan Afghani",
"symbol": "؋"
},
{
"id": 12,
"object": "currency",
"iso": "ALL",
"name": "Albanian lek",
"symbol": "lek"
},
{
"id": 13,
"object": "currency",
"iso": "AMD",
"name": "Armenian dram",
"symbol": ""
},
{
"id": 14,
"object": "currency",
"iso": "ANG",
"name": "Dutch Guilder",
"symbol": "ƒ"
},
{
"id": 15,
"object": "currency",
"iso": "AOA",
"name": "Angolan Kwanza",
"symbol": "Kz"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/currencies?page=1",
"last": "https:\/\/app.monicahq.com\/api\/currencies?page=11",
"prev": null,
"next": "https:\/\/app.monicahq.com\/api\/currencies?page=2"
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 11,
"path": "https:\/\/app.monicahq.com\/api\/currencies",
"per_page": 15,
"to": 15,
"total": 156
}
}
Get a specific currency
GET /currencies/:id
Response
{
"data": {
"id": 1,
"object": "currency",
"iso": "CAD",
"name": "Canadian Dollar",
"symbol": "$"
}
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Debts
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Debts
Overview
List all your debts
Parameters
Response
Get a specific debt
Create a debt
Input
Example
Response
Update a debt
Input
Example
Response
Delete a debt
Response
Overview
The Debt object allows to record that you own to contacts, or what your contacts
own you.
A debt has to be linked to a contact, always.
If the user owns money to the contact, the
in_debt
will be
yes
. If the
contact owns money to the user,
in_debt
will be
no
.
List all your debts
GET /debts/
Parameters
Name
Type
Description
limit
integer
Indicates the page size.
page
integer
Indicates the page to return.
Response
{
"data": [
{
"id": 428,
"object": "debt",
"in_debt": "yes",
"status": "inprogress",
"amount": 100,
"amount_with_currency": "$100",
"reason": "",
"account": {
"id": 1
},
"contact": {
"id": 8,
"object": "contact",
"first_name": "Jim",
"last_name": "Halpert",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1978-10-01T16:20:55Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-06-14T17:43:13Z",
"updated_at": "2017-06-14T17:43:20Z"
},
{
"id": 831,
"object": "debt",
"in_debt": "no",
"status": "inprogress",
"amount": 123,
"amount_with_currency": "$123",
"reason": "For the bar last time",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Henri",
"last_name": "Troyat",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T00:00:00Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-21T15:59:14Z",
"updated_at": "2017-10-21T15:59:14Z"
},
{
"id": 832,
"object": "debt",
"in_debt": "yes",
"status": "inprogress",
"amount": 431,
"amount_with_currency": "$431",
"reason": "For the coffee last time.",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Henri",
"last_name": "Troyat",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T00:00:00Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-21T16:04:08Z",
"updated_at": "2017-10-21T16:04:08Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/debts?page=1",
"last": "https:\/\/app.monicahq.com\/api\/debts?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/debts",
"per_page": 10,
"to": 3,
"total": 3
}
}
Get a specific debt
GET /debts/:id
{
"data": {
"id": 832,
"object": "debt",
"in_debt": "yes",
"status": "inprogress",
"amount": 431,
"amount_with_currency": "$431",
"reason": "For the coffee last time.",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Henri",
"last_name": "Troyat",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T00:00:00Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-21T16:04:08Z",
"updated_at": "2017-10-21T16:04:08Z"
}
}
Create a debt
POST /debts/
Input
If a field is not required, you can send the
null
value as the content of the field.
Name
Type
Description
contact_id
integer
Required
. The ID of the contact that the debt is associated with.
in_debt
string
Required
. Value:
yes
if the user owns money to the contact.
no
if the contact owns money to the user.
status
string
Required
. State of the debt. Values:
inprogress
or
complete
.
amount
integer
Required
. The amount of money owned.
reason
string
The reason the debt exists. Max 10000000 characters.
Example
{
"in_debt":"yes",
"status":"inprogress",
"amount":325,
"reason":"He bought half the pizza",
"contact_id": 1
}
Response
The API call returns a debt object if the call succeeds.
{
"data": {
"id": 835,
"object": "debt",
"in_debt": "yes",
"status": "inprogress",
"amount": 325,
"amount_with_currency": "$325",
"reason": "He bought half the pizza",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Henri",
"last_name": "Troyat",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T00:00:00Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-21T16:16:26Z",
"updated_at": "2017-10-21T16:16:26Z"
}
}
Update a debt
PUT /debts/:id
Input
Name
Type
Description
contact_id
integer
Required
. The ID of the contact that the debt is associated with.
in_debt
string
Required
. Value:
yes
if the user owns money to the contact.
no
if the contact owns money to the user.
status
string
Required
. State of the debt. Values:
inprogress
or
complete
.
amount
integer
Required
. The amount of money owned.
reason
string
The reason the debt exists. Max 10000000 characters.
Example
{
"in_debt":"yes",
"status":"inprogress",
"amount":23,
"reason":"He bought half the pizza",
"contact_id": 1
}
Response
{
"data": {
"id": 835,
"object": "debt",
"in_debt": "yes",
"status": "inprogress",
"amount": 23,
"amount_with_currency": "$23",
"reason": "He bought half the pizza",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Henri",
"last_name": "Troyat",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T00:00:00Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-21T16:16:26Z",
"updated_at": "2017-10-21T16:19:54Z"
}
}
Delete a debt
DELETE /debts/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 31
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Documents
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Documents
Overview
List all the documents in the account
Response
List all the documents of a contact
Response
Get a specific document
Response
Create a document
Input
Example
Response
Delete a document
Response
Overview
The Document object represents a document attached to a contact. A contact can have as many documents as necessary. There are two limitations though: the maximum allowed size of the document itself, and the maximum allowed total amount of Mb allowed by the instance.
List all the documents in the account
GET /documents
Response
{
"data": [
{
"id": 9,
"object": "document",
"original_filename": "3234 DE ROUEN - ENTENTE DE RESILIATION.pdf",
"new_filename": "documents\/cb208lQzsZE0yn9YIPRml1LsZPfPGOmwZwEH1rSa.pdf",
"filesize": 248942,
"type": "pdf",
"number_of_downloads": 0,
"account": {
"id": 1
},
"contact": null,
"created_at": "2018-10-15T21:27:23Z",
"updated_at": "2018-10-15T21:27:23Z"
},
{
"id": 10,
"object": "document",
"original_filename": "20171212_174320.jpg",
"new_filename": "documents\/f5T8bXqHCmZxsyrZUqkiKj07P4buMkjv6cUSpGzo.jpeg",
"filesize": 2497939,
"type": "jpeg",
"number_of_downloads": 0,
"account": {
"id": 1
},
"contact": null,
"created_at": "2018-10-15T21:28:42Z",
"updated_at": "2018-10-15T21:28:42Z"
},
{
"id": 11,
"object": "document",
"original_filename": "20180123_090414.jpg",
"new_filename": "documents\/mIX1JkPrIPMpnwpH594SwmrovAVyT1jgUp3tzaoM.jpeg",
"filesize": 3114608,
"type": "jpeg",
"number_of_downloads": 0,
"account": {
"id": 1
},
"contact": null,
"created_at": "2018-10-15T22:04:49Z",
"updated_at": "2018-10-15T22:04:49Z"
},
{
"id": 12,
"object": "document",
"original_filename": "20180123_090140.jpg",
"new_filename": "documents\/Y4wZOrqL6PfrXgqQScJJvNFhkOTcUOULsq6t5nxH.jpeg",
"filesize": 3098677,
"type": "jpeg",
"number_of_downloads": 0,
"account": {
"id": 1
},
"contact": null,
"created_at": "2018-10-15T22:14:59Z",
"updated_at": "2018-10-15T22:14:59Z"
},
{
"id": 13,
"object": "document",
"original_filename": "20180123_090140.jpg",
"new_filename": "documents\/14ibItLsm4fSZTAgpETYDnbXBtLLOruW6sMwWI78.jpeg",
"filesize": 3098677,
"type": "jpeg",
"number_of_downloads": 0,
"account": {
"id": 1
},
"contact": null,
"created_at": "2018-10-15T22:16:09Z",
"updated_at": "2018-10-15T22:16:09Z"
},
{
"id": 14,
"object": "document",
"original_filename": "20180123_090140.jpg",
"new_filename": "documents\/B1bXHEXiFz1VMcAS0bHZNyAqyHSA1pEo6X5vcsDK.jpeg",
"filesize": 3098677,
"type": "jpeg",
"number_of_downloads": 0,
"account": {
"id": 1
},
"contact": null,
"created_at": "2018-10-15T22:54:14Z",
"updated_at": "2018-10-15T22:54:14Z"
},
{
"id": 15,
"object": "document",
"original_filename": "receipt.pdf",
"new_filename": "documents\/0v5XnPEe2lRCiXK2oFlJxZ5PQf64slRcMV6C26ch.pdf",
"filesize": 193197,
"type": "pdf",
"number_of_downloads": 0,
"account": {
"id": 1
},
"contact": null,
"created_at": "2018-10-15T22:58:23Z",
"updated_at": "2018-10-15T22:58:23Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/documents?page=1",
"last": "https:\/\/app.monicahq.com\/api\/documents?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/documents",
"per_page": 15,
"to": 7,
"total": 7
}
}
List all the documents of a contact
GET /contacts/:id/documents
Response
{
"data": [
{
"id": 9,
"object": "document",
"original_filename": "23232 ROUEN - ENTENTE DE RESILIATION.pdf",
"new_filename": "documents\/cb208lQzsZE0yn9YIPRml1LsZPfPGOmwZwEH1rSa.pdf",
"filesize": 248942,
"type": "pdf",
"number_of_downloads": 0,
"account": {
"id": 1
},
"contact": {
"id": 352,
"object": "contact",
"hash_id": "h:OxEj52krPN8bR7VpJK",
"first_name": "Elance",
"last_name": null,
"nickname": null,
"complete_name": "Elance",
"initials": "E",
"gender": "vCard",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
},
"created_at": "2018-10-15T21:27:23Z",
"updated_at": "2018-10-15T21:27:23Z"
},
{
"id": 10,
"object": "document",
"original_filename": "20171212_174320.jpg",
"new_filename": "documents\/f5T8bXqHCmZxsyrZUqkiKj07P4buMkjv6cUSpGzo.jpeg",
"filesize": 2497939,
"type": "jpeg",
"number_of_downloads": 0,
"account": {
"id": 1
},
"contact": {
"id": 352,
"object": "contact",
"hash_id": "h:OxEj52krPN8bR7VpJK",
"first_name": "Elance",
"last_name": null,
"nickname": null,
"complete_name": "Elance",
"initials": "E",
"gender": "vCard",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
},
"created_at": "2018-10-15T21:28:42Z",
"updated_at": "2018-10-15T21:28:42Z"
},
{
"id": 11,
"object": "document",
"original_filename": "20180123_090414.jpg",
"new_filename": "documents\/mIX1JkPrIPMpnwpH594SwmrovAVyT1jgUp3tzaoM.jpeg",
"filesize": 3114608,
"type": "jpeg",
"number_of_downloads": 0,
"account": {
"id": 1
},
"contact": {
"id": 352,
"object": "contact",
"hash_id": "h:OxEj52krPN8bR7VpJK",
"first_name": "Elance",
"last_name": null,
"nickname": null,
"complete_name": "Elance",
"initials": "E",
"gender": "vCard",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
},
"created_at": "2018-10-15T22:04:49Z",
"updated_at": "2018-10-15T22:04:49Z"
},
{
"id": 12,
"object": "document",
"original_filename": "20180123_090140.jpg",
"new_filename": "documents\/Y4wZOrqL6PfrXgqQScJJvNFhkOTcUOULsq6t5nxH.jpeg",
"filesize": 3098677,
"type": "jpeg",
"number_of_downloads": 0,
"account": {
"id": 1
},
"contact": {
"id": 352,
"object": "contact",
"hash_id": "h:OxEj52krPN8bR7VpJK",
"first_name": "Elance",
"last_name": null,
"nickname": null,
"complete_name": "Elance",
"initials": "E",
"gender": "vCard",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
},
"created_at": "2018-10-15T22:14:59Z",
"updated_at": "2018-10-15T22:14:59Z"
},
{
"id": 13,
"object": "document",
"original_filename": "20180123_090140.jpg",
"new_filename": "documents\/14ibItLsm4fSZTAgpETYDnbXBtLLOruW6sMwWI78.jpeg",
"filesize": 3098677,
"type": "jpeg",
"number_of_downloads": 0,
"account": {
"id": 1
},
"contact": {
"id": 352,
"object": "contact",
"hash_id": "h:OxEj52krPN8bR7VpJK",
"first_name": "Elance",
"last_name": null,
"nickname": null,
"complete_name": "Elance",
"initials": "E",
"gender": "vCard",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
},
"created_at": "2018-10-15T22:16:09Z",
"updated_at": "2018-10-15T22:16:09Z"
},
{
"id": 14,
"object": "document",
"original_filename": "20180123_090140.jpg",
"new_filename": "documents\/B1bXHEXiFz1VMcAS0bHZNyAqyHSA1pEo6X5vcsDK.jpeg",
"filesize": 3098677,
"type": "jpeg",
"number_of_downloads": 0,
"account": {
"id": 1
},
"contact": {
"id": 352,
"object": "contact",
"hash_id": "h:OxEj52krPN8bR7VpJK",
"first_name": "Elance",
"last_name": null,
"nickname": null,
"complete_name": "Elance",
"initials": "E",
"gender": "vCard",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
},
"created_at": "2018-10-15T22:54:14Z",
"updated_at": "2018-10-15T22:54:14Z"
},
{
"id": 15,
"object": "document",
"original_filename": "receipt.pdf",
"new_filename": "documents\/0v5XnPEe2lRCiXK2oFlJxZ5PQf64slRcMV6C26ch.pdf",
"filesize": 193197,
"type": "pdf",
"number_of_downloads": 0,
"account": {
"id": 1
},
"contact": {
"id": 352,
"object": "contact",
"hash_id": "h:OxEj52krPN8bR7VpJK",
"first_name": "Elance",
"last_name": null,
"nickname": null,
"complete_name": "Elance",
"initials": "E",
"gender": "vCard",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
},
"created_at": "2018-10-15T22:58:23Z",
"updated_at": "2018-10-15T22:58:23Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/contacts\/352\/documents?page=1",
"last": "https:\/\/app.monicahq.com\/api\/contacts\/352\/documents?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/contacts\/352\/documents",
"per_page": 15,
"to": 7,
"total": 7
}
}
Get a specific document
GET /documents/:id
Response
{
"data": {
"id": 9,
"object": "document",
"original_filename": "receipt.pdf",
"new_filename": "documents\/cb208lQzsZE0yn9YIPRml1LsZPfPGOmwZwEH1rSa.pdf",
"filesize": 248942,
"type": "pdf",
"number_of_downloads": 0,
"account": {
"id": 1
},
"contact": {
"id": 352,
"object": "contact",
"hash_id": "h:OxEj52krPN8bR7VpJK",
"first_name": "Elance",
"last_name": null,
"nickname": null,
"complete_name": "Elance",
"initials": "E",
"gender": "vCard",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
},
"created_at": "2018-10-15T21:27:23Z",
"updated_at": "2018-10-15T21:27:23Z"
}
}
Create a document
POST /documents/
Input
Name
Type
Description
contact_id
integer
Required
. The ID of the contact that the document is associated with.
document
file
Required
. The file content to upload.
Example
You can send the document using a
multipart/form-data
Content-type.
Example with curl:
curl -sSL -H "Authorization: Bearer $TOKEN"
https://app.monicahq.com/api/documents
-X POST
-F contact_id=1
-F
[email protected]
Response
The API call returns a Document object if the call succeeds.
{
"data": {
"id": 9,
"object": "document",
"original_filename": "document.pdf",
"new_filename": "documents\/IML1K0yXTuJlQurXGNg2FEVaueGO6TRt1eqiaEyg.txt",
"filesize": 31586,
"type": "pdf",
"mime_type": "application/pdf",
"number_of_downloads": 0,
"link":"https:\/\/app.monicahq.com\/storage\/documents\/IML1K0yXTuJlQurXGNg2FEVaueGO6TRt1eqiaEyg.txt",
"account": {
"id": 1
},
"contact": {
"id": 352,
"object": "contact",
"hash_id": "h:OxEj52krPN8bR7VpJK",
"first_name": "Elance",
"last_name": null,
"nickname": null,
"complete_name": "Elance",
"initials": "E",
"gender": "vCard",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
},
"created_at": "2018-10-15T21:27:23Z",
"updated_at": "2018-10-15T21:27:23Z"
}
}
Delete a document
DELETE /documents/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 127
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Genders
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Genders
Overview
List all the genders in the account
Response
Get a specific gender
Response
Create a gender
Input
Example
Response
Update a gender
Input
Example
Response
Delete a gender
Response
Overview
The Gender object represents a gender associated to a contact. A contact must have a gender before being created.
List all the genders in the account
GET /genders
Response
{
"data": [
{
"id": 1,
"object": "gender",
"name": "Man",
"account": {
"id": 1
},
"created_at": "2019-01-04T23:37:42Z",
"updated_at": "2019-01-04T23:37:42Z"
},
{
"id": 2,
"object": "gender",
"name": "Woman",
"account": {
"id": 1
},
"created_at": "2019-01-04T23:37:42Z",
"updated_at": "2019-01-04T23:37:42Z"
},
{
"id": 3,
"object": "gender",
"name": "Rather not say",
"account": {
"id": 1
},
"created_at": "2019-01-04T23:37:42Z",
"updated_at": "2019-01-04T23:37:42Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/genders?page=1",
"last": "https:\/\/app.monicahq.com\/api\/genders?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/genders",
"per_page": 15,
"to": 3,
"total": 3
}
}
Get a specific gender
GET /genders/:id
Response
{
"data": {
"id": 1,
"object": "gender",
"name": "Man",
"account": {
"id": 1
},
"created_at": "2019-01-04T23:37:42Z",
"updated_at": "2019-01-04T23:37:42Z"
}
}
Create a gender
POST /genders/
Input
Name
Type
Description
name
string
Required
. The description of the gender. Max 255 characters.
Example
{
"name":"man"
}
Response
The API returns a gender object if the gender succeeds.
{
"data": {
"id": 7,
"object": "gender",
"name": "man",
"account": {
"id": 1
},
"created_at": "2019-01-04T23:45:23Z",
"updated_at": "2019-01-04T23:45:23Z"
}
}
Update a gender
PUT /genders/:id
Input
Name
Type
Description
name
string
Required
. The description of the gender. Max 255 characters.
Example
{
"name":"woman"
}
Response
{
"data": {
"id": 7,
"object": "gender",
"name": "woman",
"account": {
"id": 1
},
"created_at": "2019-01-04T23:45:23Z",
"updated_at": "2019-01-04T23:46:22Z"
}
}
Delete a gender
Warning: deleting a gender is dangerous. You have to make sure that no contacts in your account have this gender before deleting it.
DELETE /genders/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 31
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Gifts
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Gifts
Overview
List all the gifts in your account
Parameters
Response
List all the gifts of a specific contact
Response
Get a specific gift
Response
Create a gift
Input
Example
Response
Update a gift
Input
Example
Response
Delete a gift
Response
Associate a photo to a gift
Input
Response
Overview
The Gift object allows to record gifts you have offered, or wish to offer to
your contacts. A gift has to be associated with an existing contact - it can't
be orphan.
Apart from being linked to a contact, a gift can also be linked to a partner or
a child of the given contact. This is defined by the
is_for
tab.
When retrieving a gift, we always also return some basic information about the
related contact.
List all the gifts in your account
GET /gifts/
Parameters
Name
Type
Description
limit
integer
Indicates the page size.
page
integer
Indicates the page to return.
Response
{
"data": [
{
"id": 1,
"object": "gift",
"name": "Nice gift for Dwight",
"comment": "I'm sure he'll love it",
"url": "https:\/\/www.amazon.ca\/Culturenik-815-640-AMA-Office-Worlds-Television\/dp\/B00PCVCW80\/ref=sr_1_1?ie=UTF8&qid=1508272830&sr=8-1&keywords=dunder+mifflin+mug",
"amount": "123",
"amount_with_currency": "$123.00",
"status": "idea",
"date": null,
"recipient": null,
"photos": [],
"contact": {
"id": 1,
"object": "contact",
"first_name": "Henri",
"last_name": "Troyat",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "approximate",
"birthdate": "1987-01-01T21:56:44Z"
}
]
},
"account": {
"id": 5
}
},
"account": {
"id": 5
},
"created_at": "2017-10-17T16:40:38Z",
"updated_at": "2017-10-17T16:40:38Z"
},
{
"id": 2,
"object": "gift",
"name": "For my friend Ron Swanson",
"comment": "",
"url": "https:\/\/www.amazon.ca\/Culturenik-182-390-Recreation-Swanson-Pyramid\/dp\/B00UTPTOHG\/ref=sr_1_1?ie=UTF8&qid=1508272877&sr=8-1&keywords=ron+swanson",
"amount": "43",
"amount_with_currency": "$43.00",
"status": "idea",
"date": null,
"recipient": null,
"photos": [],
"contact": {
"id": 3,
"object": "contact",
"first_name": "Leslie",
"last_name": "Knope",
"gender": "none",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 5
}
},
"account": {
"id": 5
},
"created_at": "2017-10-17T16:41:27Z",
"updated_at": "2017-10-17T16:41:27Z"
},
{
"id": 3,
"object": "gift",
"name": "A giant cup of tea",
"comment": "",
"url": "",
"amount": "21",
"amount_with_currency": "$21.00",
"status": "offered",
"date": null,
"recipient": {
"id": 4,
"object": "contact",
"first_name": "Ben",
"last_name": "Wyatt",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "approximate",
"birthdate": "1974-01-01T16:42:11Z"
}
]
},
"account": {
"id": 5
}
},
"photos": [],
"contact": {
"id": 3,
"object": "contact",
"first_name": "Leslie",
"last_name": "Knope",
"gender": "none",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 5
}
},
"account": {
"id": 5
},
"created_at": "2017-10-17T16:42:25Z",
"updated_at": "2017-10-17T16:42:25Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/gifts?page=1",
"last": "https:\/\/app.monicahq.com\/api\/gifts?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/gifts",
"per_page": 10,
"to": 3,
"total": 3
}
}
List all the gifts of a specific contact
GET /contacts/:id/gifts
Response
{
"data": [
{
"id": 2,
"object": "gift",
"name": "For my friend Ron Swanson",
"comment": "",
"url": "https:\/\/www.amazon.ca\/Culturenik-182-390-Recreation-Swanson-Pyramid\/dp\/B00UTPTOHG\/ref=sr_1_1?ie=UTF8&qid=1508272877&sr=8-1&keywords=ron+swanson",
"amount": "43",
"amount_with_currency": "$43.00",
"status": "offered",
"date": null,
"recipient": null,
"photos": [],
"contact": {
"id": 3,
"object": "contact",
"first_name": "Leslie",
"last_name": "Knope",
"gender": "none",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 5
}
},
"account": {
"id": 5
},
"created_at": "2017-10-17T16:41:27Z",
"updated_at": "2017-10-17T16:41:27Z"
},
{
"id": 3,
"object": "gift",
"name": "A giant cup of tea",
"comment": "",
"url": "",
"amount": "21",
"amount_with_currency": "$21.00",
"status": "offered",
"date": null,
"recipient": {
"id": 4,
"object": "contact",
"first_name": "Ben",
"last_name": "Wyatt",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "approximate",
"birthdate": "1974-01-01T16:42:11Z"
}
]
},
"account": {
"id": 5
}
},
"photos": [
{
"id": 44,
"object": "photo",
"original_filename": "EBeVa4qXsAIMnaC.jpeg",
"new_filename": "photos\/POWVMVuauZ2xPsG9ZNoZdE0jLaMRz1FGZtCUrjDH.jpeg",
"filesize": 484289,
"mime_type": "image\/jpeg",
"link": "https:\/\/app.monicahq.com\/storage\/photos\/POWVMVuauZ2xPsG9ZNoZdE0jLaMRz1FGZtCUrjDH.jpeg",
"contact": {
"id": 3,
"object": "contact",
"first_name": "Leslie",
"last_name": "Knope",
"gender": "none",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 5
}
},
"account":{
"id": 5
},
"created_at": "2017-10-17T16:42:25Z",
"updated_at": "2017-10-17T16:42:25Z",
}
]
"contact": {
"id": 3,
"object": "contact",
"first_name": "Leslie",
"last_name": "Knope",
"gender": "none",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 5
}
},
"account": {
"id": 5
},
"created_at": "2017-10-17T16:42:25Z",
"updated_at": "2017-10-17T16:42:25Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/contacts\/3\/gifts?page=1",
"last": "https:\/\/app.monicahq.com\/api\/contacts\/3\/gifts?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/contacts\/3\/gifts",
"per_page": 10,
"to": 2,
"total": 2
}
}
Get a specific gift
GET /gifts/:id
Response
{
"data": {
"id": 2,
"object": "gift",
"name": "For my friend Ron Swanson",
"comment": "",
"url": "https:\/\/www.amazon.ca\/Culturenik-182-390-Recreation-Swanson-Pyramid\/dp\/B00UTPTOHG\/ref=sr_1_1?ie=UTF8&qid=1508272877&sr=8-1&keywords=ron+swanson",
"amount": "43",
"amount_with_currency": "$43.00",
"status": "offered",
"date": null,
"recipient": null,
"photos": [],
"contact": {
"id": 3,
"object": "contact",
"first_name": "Leslie",
"last_name": "Knope",
"gender": "none",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 5
}
},
"account": {
"id": 5
},
"created_at": "2017-10-17T16:41:27Z",
"updated_at": "2017-10-17T16:41:27Z"
}
}
Create a gift
POST /gifts/
Input
Name
Type
Description
contact_id
integer
Required
. The ID of the contact that the gift is associated with.
recipient_id
integer
The ID of the contact the gift is for. It is either one of the partner or a child of the contact.
name
string
Required
. The description of the gift. Max 255 characters.
comment
string
More details about the gift. Max 1000000 characters.
url
string
The URL where the gift can be find (for instance, on Amazon). Max 1000000 characters.
amount
number
The amount (in the currency of the user) of the gift.
status
string
Required
. Status of the gift. Could be one of:
idea
: if the gift is an idea,
offered
: if the gift has been offered,
received
: if it's a gift from the contact.
date
string
The date the gift has been offered. Can be in the past or future - the latter being dumb, but well. Format: YYYY-MM-DD.
Example
{
"name":"For my friend Ron Swanson",
"comment":"This is going to be so awesome",
"url":"https://www.amazon.ca/Culturenik-182-390-Recreation-Swanson-Pyramid/dp/B00UTPTOHG/ref=sr_1_1?ie=UTF8&qid=1508272877&sr=8-1&keywords=ron+swanson",
"amount":291,
"status":"offered",
"date":"2015-02-24",
"contact_id": 3,
"recipient_id": 1
}
Response
The API returns a gift object if the gift succeeds.
{
"data": {
"id": 676,
"object": "gift",
"name": "For my friend Ron Swanson",
"comment": "This is going to be so awesome",
"url": "https:\/\/www.amazon.ca\/Culturenik-182-390-Recreation-Swanson-Pyramid\/dp\/B00UTPTOHG\/ref=sr_1_1?ie=UTF8&qid=1508272877&sr=8-1&keywords=ron+swanson",
"amount": "291",
"amount_with_currency": "$291.00",
"status": "offered",
"date": "2015-02-24T00:00:00Z",
"recipient": {
"id": 1,
"object": "contact",
"first_name": "Henri",
"last_name": "Troyat",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 1
}
},
"photos": [],
"contact": {
"id": 3,
"object": "contact",
"first_name": "David",
"last_name": "Olsdwaer",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 1
}
},
"account": {
"id": 1
},
"created_at": "2017-10-19T21:51:15Z",
"updated_at": "2017-10-19T21:51:15Z"
}
}
Update a gift
PUT /gifts/:id
Input
Name
Type
Description
contact_id
integer
Required
. The ID of the contact that the gift is associated with.
recipient_id
integer
The ID of the contact the gift is for. It is either one of the partner or a child of the contact.
name
string
Required
. The description of the gift. Max 255 characters.
comment
string
More details about the gift. Max 1000000 characters.
url
string
The URL where the gift can be find (for instance, on Amazon). Max 1000000 characters.
amount
number
The amount (in the currency of the user) of the gift.
status
string
Required
. Status of the gift. Could be one of:
idea
: if the gift is an idea,
offered
: if the gift has been offered,
received
: if it's a gift from the contact.
date
string
The date the gift has been offered. Can be in the past or future - the latter being dumb, but well. Format: YYYY-MM-DD.
Example
{
"name":"For my friend Ron Swanson",
"comment":"This is going to be so awesome",
"url":"https://www.amazon.ca/Culturenik-182-390-Recreation-Swanson-Pyramid/dp/B00UTPTOHG/ref=sr_1_1?ie=UTF8&qid=1508272877&sr=8-1&keywords=ron+swanson",
"amount":"293",
"status":"offered",
"date":"2015-02-24",
"contact_id": 3,
"recipient_id": null
}
Response
{
"data": {
"id": 678,
"object": "gift",
"name": "For my friend Ron Swanson",
"comment": "This is going to be so awesome",
"url": "https:\/\/www.amazon.ca\/Culturenik-182-390-Recreation-Swanson-Pyramid\/dp\/B00UTPTOHG\/ref=sr_1_1?ie=UTF8&qid=1508272877&sr=8-1&keywords=ron+swanson",
"amount": "293",
"amount_with_currency": "$293.00",
"status": "offered",
"date": "2015-02-24T00:00:00Z",
"recipient": null,
"photos": [],
"contact": {
"id": 3,
"object": "contact",
"first_name": "David",
"last_name": "Olsdwaer",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 1
}
},
"account": {
"id": 1
},
"created_at": "2017-10-19T21:52:53Z",
"updated_at": "2017-10-19T21:52:53Z"
}
}
Delete a gift
DELETE /gifts/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 31
}
Associate a photo to a gift
PUT /gifts/:id/photo/:photoId
A
photo
can be associated to a gift. You will have to
create a photo
first, associate with the contact, and then associate it.
Input
No input needed.
Response
{
"data": {
"id": 678,
"object": "gift",
"name": "For my friend Ron Swanson",
"comment": "This is going to be so awesome",
"url": "https:\/\/www.amazon.ca\/Culturenik-182-390-Recreation-Swanson-Pyramid\/dp\/B00UTPTOHG\/ref=sr_1_1?ie=UTF8&qid=1508272877&sr=8-1&keywords=ron+swanson",
"amount": "293",
"amount_with_currency": "$293.00",
"status": "offered",
"date": "2015-02-24T00:00:00Z",
"recipient": null,
"photos": [
{
"id": 44,
"object": "photo",
"original_filename": "EBeVa4qXsAIMnaC.jpeg",
"new_filename": "photos\/POWVMVuauZ2xPsG9ZNoZdE0jLaMRz1FGZtCUrjDH.jpeg",
"filesize": 484289,
"mime_type": "image\/jpeg",
"link": "https:\/\/app.monicahq.com\/storage\/photos\/POWVMVuauZ2xPsG9ZNoZdE0jLaMRz1FGZtCUrjDH.jpeg",
"contact": {
"id": 3,
"object": "contact",
"first_name": "David",
"last_name": "Olsdwaer",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account":{
"id": 1
},
},
"account":{
"id": 1
},
"created_at": "2017-10-17T16:42:25Z",
"updated_at": "2017-10-17T16:42:25Z",
}
],
"contact": {
"id": 3,
"object": "contact",
"first_name": "David",
"last_name": "Olsdwaer",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 1
}
},
"account": {
"id": 1
},
"created_at": "2017-10-19T21:52:53Z",
"updated_at": "2017-10-19T21:52:53Z"
}
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Groups
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Groups
Overview
List all your groups
Parameters
Response
Get a specific group
Create a group
Input
Example
Response
Update a group
Input
Example
Response
Delete a group
Response
Attach contact(s) to a group
Input
Example
Response
Overview
The Group object represents a group of contacts. A group is generic on purpose, it’s up to the user to decide who should be in a group.
A group can have no contacts, up to an unlimited number of contacts.
A group can only contain real contacts. That means partial contacts are not supported in a group.
List all your groups
GET /groups/
Parameters
Name
Type
Description
limit
integer
Indicates the page size.
page
integer
Indicates the page to return.
Response
{
"data": [
{
"id": 1,
"object": "group",
"name": "loving friends",
"contacts": [
{
"id": 4,
"object": "contact",
"hash_id": "h:w7MAYJlq1nbR6BKj2p",
"first_name": "Maximillian",
"last_name": null,
"nickname": null,
"complete_name": "Maximillian",
"description": null,
"gender": "Woman",
"gender_type": "F",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": false,
"is_me": false,
"last_called": null,
"last_activity_together": null,
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 6,
"name": "ex_husband"
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Celine",
"last_name": "Skiles",
"nickname": "Kendall Jakubowski",
"complete_name": "Celine Skiles (Kendall Jakubowski)",
"initials": "CSJ",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1996-02-29T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/88ce1570-3d8a-47a6-88d5-5e610dcd2bdb.jpg?1580940164",
"source": "default",
"default_avatar_color": "#709512"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/1",
"account": {
"id": 1
}
}
}
]
},
"family": {
"total": 0,
"contacts": []
},
"friend": {
"total": 0,
"contacts": []
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "2015-12-03T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/5837b106-b878-4a29-9345-24fe775c4016.jpg?1580940164",
"source": "default",
"default_avatar_color": "#ff9807"
},
"food_preferences": null,
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": null
}
},
"addresses": [],
"tags": [],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 0,
"number_of_activities": 0,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 0,
"number_of_debts": 0
},
"url": "https:\/\/monica.test\/api\/contacts\/4",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 5,
"object": "contact",
"hash_id": "h:GK7L1M6q8vWzRDN3we",
"first_name": "Tyrel",
"last_name": "Schamberger",
"nickname": null,
"complete_name": "Tyrel Schamberger",
"description": null,
"gender": "Woman",
"gender_type": "F",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": false,
"is_me": false,
"last_called": null,
"last_activity_together": "2019-12-14T00:00:00.000000Z",
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 17,
"name": "lover"
},
"contact": {
"id": 11,
"object": "contact",
"hash_id": "h:3xK6JaeqVJqGR2BlVO",
"first_name": "Cydney",
"last_name": "Crona",
"nickname": null,
"complete_name": "Cydney Crona",
"initials": "CC",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/02edd08d-f75d-47a3-b3ac-40b0b1f24986.jpg?1580940165",
"source": "default",
"default_avatar_color": "#93521e"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/11",
"account": {
"id": 1
}
}
}
]
},
"family": {
"total": 3,
"contacts": [
{
"relationship": {
"id": 9,
"name": "child"
},
"contact": {
"id": 7,
"object": "contact",
"hash_id": "h:GK7L1M6q8vWzRDN3we",
"first_name": "Hilda",
"last_name": "Hagenes",
"nickname": "Wilburn Considine",
"complete_name": "Hilda Hagenes (Wilburn Considine)",
"initials": "HHC",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": true,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/50a2d1ca-ec9b-440f-b77d-34cf6139b65b.jpg?1580940164",
"source": "default",
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
}
},
{
"relationship": {
"id": 11,
"name": "sibling"
},
"contact": {
"id": 8,
"object": "contact",
"hash_id": "h:OxEj52krPNbR7VpJK8",
"first_name": "Manley",
"last_name": null,
"nickname": "Georgette Quigley",
"complete_name": "Manley (Georgette Quigley)",
"initials": "MQ",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "1959-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/97b49ef2-a17b-463b-a545-35663bdd924d.jpg?1580940164",
"source": "default",
"default_avatar_color": "#e5e5cd"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/8",
"account": {
"id": 1
}
}
},
{
"relationship": {
"id": 15,
"name": "stepparent"
},
"contact": {
"id": 10,
"object": "contact",
"hash_id": "h:a4OXL3BrZXbA5Kg9lD",
"first_name": "Larry",
"last_name": "Wisozk",
"nickname": "Prof. Hoyt Hamill DDS",
"complete_name": "Larry Wisozk (Prof. Hoyt Hamill DDS)",
"initials": "LWHHD",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "1986-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/c933d535-6172-4866-8616-2858f9442918.jpg?1580940165",
"source": "default",
"default_avatar_color": "#bd5067"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/10",
"account": {
"id": 1
}
}
}
]
},
"friend": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 13,
"name": "bestfriend"
},
"contact": {
"id": 9,
"object": "contact",
"hash_id": "h:Q67vO3nqdjW2Z80lJj",
"first_name": "Elwin",
"last_name": "Turcotte",
"nickname": null,
"complete_name": "Elwin Turcotte",
"initials": "ET",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1982-12-22T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/4f4410e0-d24b-4fe9-bef5-df02be6455f6.jpg?1580940164",
"source": "default",
"default_avatar_color": "#93521e"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/9",
"account": {
"id": 1
}
}
}
]
},
"work": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 7,
"name": "mentor"
},
"contact": {
"id": 6,
"object": "contact",
"hash_id": "h:j9ePOdJb01WB6EN1Rl",
"first_name": "Ford",
"last_name": "Abbott",
"nickname": "Arthur Waelchi Jr.",
"complete_name": "Ford Abbott (Arthur Waelchi Jr.)",
"initials": "FAWJ",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/f7e6f20e-8133-487d-be7d-c77290708f7a.jpg?1580940164",
"source": "default",
"default_avatar_color": "#93521e"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/6",
"account": {
"id": 1
}
}
}
]
}
},
"dates": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/3db57fb2-687b-41ef-8df5-71ae9e38fe86.jpg?1580940164",
"source": "default",
"default_avatar_color": "#b3d5fe"
},
"food_preferences": null,
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": {
"id": 14,
"object": "contact",
"hash_id": "h:M0456darjZr9ozJVnX",
"first_name": "Fabian",
"last_name": null,
"nickname": "Vincenzo Schimmel",
"complete_name": "Fabian (Vincenzo Schimmel)",
"initials": "FS",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/669b3ebc-62f4-4037-a6b8-739de33decd3.jpg?1580940166",
"source": "default",
"default_avatar_color": "#fdb660"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/14",
"account": {
"id": 1
}
}
}
},
"addresses": [
{
"id": 1,
"object": "address",
"name": "ea",
"street": null,
"city": "Lake Shaniyashire",
"province": "Pennsylvania",
"postal_code": null,
"latitude": null,
"longitude": null,
"country": {
"id": "CC",
"object": "country",
"name": "Cocos (Keeling) Islands",
"iso": "CC"
},
"url": "https:\/\/monica.test\/api\/addresses\/1",
"account": {
"id": 1
},
"contact": {
"id": 5,
"object": "contact",
"hash_id": "h:GK7L1M6q8vWzRDN3we",
"first_name": "Tyrel",
"last_name": "Schamberger",
"nickname": null,
"complete_name": "Tyrel Schamberger",
"initials": "TS",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/3db57fb2-687b-41ef-8df5-71ae9e38fe86.jpg?1580940164",
"source": "default",
"default_avatar_color": "#b3d5fe"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/5",
"account": {
"id": 1
}
},
"created_at": "2020-02-05T22:02:45Z",
"updated_at": "2020-02-05T22:02:45Z"
}
],
"tags": [
{
"id": 1,
"object": "tag",
"name": "nisi",
"name_slug": "nisi",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 2,
"object": "tag",
"name": "repudiandae",
"name_slug": "repudiandae",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 3,
"object": "tag",
"name": "eum",
"name_slug": "eum",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 4,
"object": "tag",
"name": "deleniti",
"name_slug": "deleniti",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 5,
"object": "tag",
"name": "voluptatum",
"name_slug": "voluptatum",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 6,
"object": "tag",
"name": "enim",
"name_slug": "enim",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 7,
"object": "tag",
"name": "assumenda",
"name_slug": "assumenda",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 8,
"object": "tag",
"name": "alias",
"name_slug": "alias",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 9,
"object": "tag",
"name": "ratione",
"name_slug": "ratione",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 10,
"object": "tag",
"name": "non",
"name_slug": "non",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
}
],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 5,
"number_of_activities": 9,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 0,
"number_of_debts": 0
},
"url": "https:\/\/monica.test\/api\/contacts\/5",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:45Z"
},
{
"id": 9,
"object": "contact",
"hash_id": "h:Q67vO3nqdjW2Z80lJj",
"first_name": "Elwin",
"last_name": "Turcotte",
"nickname": null,
"complete_name": "Elwin Turcotte",
"description": null,
"gender": "Woman",
"gender_type": "F",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": false,
"is_me": false,
"last_called": null,
"last_activity_together": null,
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 0,
"contacts": []
},
"family": {
"total": 0,
"contacts": []
},
"friend": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 14,
"name": "bestfriend"
},
"contact": {
"id": 5,
"object": "contact",
"hash_id": "h:GK7L1M6q8vWzRDN3we",
"first_name": "Tyrel",
"last_name": "Schamberger",
"nickname": null,
"complete_name": "Tyrel Schamberger",
"initials": "TS",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/3db57fb2-687b-41ef-8df5-71ae9e38fe86.jpg?1580940164",
"source": "default",
"default_avatar_color": "#b3d5fe"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/5",
"account": {
"id": 1
}
}
}
]
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1982-12-22T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/4f4410e0-d24b-4fe9-bef5-df02be6455f6.jpg?1580940164",
"source": "default",
"default_avatar_color": "#93521e"
},
"food_preferences": null,
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": null
}
},
"addresses": [],
"tags": [],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 0,
"number_of_activities": 0,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 0,
"number_of_debts": 0
},
"url": "https:\/\/monica.test\/api\/contacts\/9",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:45Z"
},
{
"id": 10,
"object": "contact",
"hash_id": "h:a4OXL3BrZXbA5Kg9lD",
"first_name": "Larry",
"last_name": "Wisozk",
"nickname": "Prof. Hoyt Hamill DDS",
"complete_name": "Larry Wisozk (Prof. Hoyt Hamill DDS)",
"description": null,
"gender": "Rather not say",
"gender_type": "O",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": false,
"is_me": false,
"last_called": null,
"last_activity_together": null,
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 0,
"contacts": []
},
"family": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 16,
"name": "stepchild"
},
"contact": {
"id": 5,
"object": "contact",
"hash_id": "h:GK7L1M6q8vWzRDN3we",
"first_name": "Tyrel",
"last_name": "Schamberger",
"nickname": null,
"complete_name": "Tyrel Schamberger",
"initials": "TS",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/3db57fb2-687b-41ef-8df5-71ae9e38fe86.jpg?1580940164",
"source": "default",
"default_avatar_color": "#b3d5fe"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/5",
"account": {
"id": 1
}
}
}
]
},
"friend": {
"total": 0,
"contacts": []
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "1986-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/c933d535-6172-4866-8616-2858f9442918.jpg?1580940165",
"source": "default",
"default_avatar_color": "#bd5067"
},
"food_preferences": null,
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": null
}
},
"addresses": [],
"tags": [],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 0,
"number_of_activities": 0,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 0,
"number_of_debts": 0
},
"url": "https:\/\/monica.test\/api\/contacts\/10",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:45Z",
"updated_at": "2020-02-05T22:02:45Z"
}
],
"account": {
"id": 1
},
"created_at": "2020-02-13T15:50:07Z",
"updated_at": "2020-02-13T22:27:42Z"
},
{
"id": 2,
"object": "group",
"name": "sales people",
"contacts": [],
"account": {
"id": 1
},
"created_at": "2020-02-13T15:50:13Z",
"updated_at": "2020-02-13T15:50:13Z"
}
],
"links": {
"first": "https:\/\/monica.test\/api\/groups?page=1",
"last": "https:\/\/monica.test\/api\/groups?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/monica.test\/api\/groups",
"per_page": 15,
"to": 2,
"total": 2
}
}
Get a specific group
GET /groups/:id
{
"data": {
"id": 1,
"object": "group",
"name": "loving friends",
"contacts": [
{
"id": 4,
"object": "contact",
"hash_id": "h:w7MAYJlq1nbR6BKj2p",
"first_name": "Maximillian",
"last_name": null,
"nickname": null,
"complete_name": "Maximillian",
"description": null,
"gender": "Woman",
"gender_type": "F",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": false,
"is_me": false,
"last_called": null,
"last_activity_together": null,
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 6,
"name": "ex_husband"
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Celine",
"last_name": "Skiles",
"nickname": "Kendall Jakubowski",
"complete_name": "Celine Skiles (Kendall Jakubowski)",
"initials": "CSJ",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1996-02-29T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/88ce1570-3d8a-47a6-88d5-5e610dcd2bdb.jpg?1580940164",
"source": "default",
"default_avatar_color": "#709512"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/1",
"account": {
"id": 1
}
}
}
]
},
"family": {
"total": 0,
"contacts": []
},
"friend": {
"total": 0,
"contacts": []
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "2015-12-03T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/5837b106-b878-4a29-9345-24fe775c4016.jpg?1580940164",
"source": "default",
"default_avatar_color": "#ff9807"
},
"food_preferences": null,
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": null
}
},
"addresses": [],
"tags": [],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 0,
"number_of_activities": 0,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 0,
"number_of_debts": 0
},
"url": "https:\/\/monica.test\/api\/contacts\/4",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 5,
"object": "contact",
"hash_id": "h:GK7L1M6q8vWzRDN3we",
"first_name": "Tyrel",
"last_name": "Schamberger",
"nickname": null,
"complete_name": "Tyrel Schamberger",
"description": null,
"gender": "Woman",
"gender_type": "F",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": false,
"is_me": false,
"last_called": null,
"last_activity_together": "2019-12-14T00:00:00.000000Z",
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 17,
"name": "lover"
},
"contact": {
"id": 11,
"object": "contact",
"hash_id": "h:3xK6JaeqVJqGR2BlVO",
"first_name": "Cydney",
"last_name": "Crona",
"nickname": null,
"complete_name": "Cydney Crona",
"initials": "CC",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/02edd08d-f75d-47a3-b3ac-40b0b1f24986.jpg?1580940165",
"source": "default",
"default_avatar_color": "#93521e"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/11",
"account": {
"id": 1
}
}
}
]
},
"family": {
"total": 3,
"contacts": [
{
"relationship": {
"id": 9,
"name": "child"
},
"contact": {
"id": 7,
"object": "contact",
"hash_id": "h:GK7L1M6q8vWzRDN3we",
"first_name": "Hilda",
"last_name": "Hagenes",
"nickname": "Wilburn Considine",
"complete_name": "Hilda Hagenes (Wilburn Considine)",
"initials": "HHC",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": true,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/50a2d1ca-ec9b-440f-b77d-34cf6139b65b.jpg?1580940164",
"source": "default",
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
}
},
{
"relationship": {
"id": 11,
"name": "sibling"
},
"contact": {
"id": 8,
"object": "contact",
"hash_id": "h:OxEj52krPNbR7VpJK8",
"first_name": "Manley",
"last_name": null,
"nickname": "Georgette Quigley",
"complete_name": "Manley (Georgette Quigley)",
"initials": "MQ",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "1959-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/97b49ef2-a17b-463b-a545-35663bdd924d.jpg?1580940164",
"source": "default",
"default_avatar_color": "#e5e5cd"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/8",
"account": {
"id": 1
}
}
},
{
"relationship": {
"id": 15,
"name": "stepparent"
},
"contact": {
"id": 10,
"object": "contact",
"hash_id": "h:a4OXL3BrZXbA5Kg9lD",
"first_name": "Larry",
"last_name": "Wisozk",
"nickname": "Prof. Hoyt Hamill DDS",
"complete_name": "Larry Wisozk (Prof. Hoyt Hamill DDS)",
"initials": "LWHHD",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "1986-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/c933d535-6172-4866-8616-2858f9442918.jpg?1580940165",
"source": "default",
"default_avatar_color": "#bd5067"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/10",
"account": {
"id": 1
}
}
}
]
},
"friend": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 13,
"name": "bestfriend"
},
"contact": {
"id": 9,
"object": "contact",
"hash_id": "h:Q67vO3nqdjW2Z80lJj",
"first_name": "Elwin",
"last_name": "Turcotte",
"nickname": null,
"complete_name": "Elwin Turcotte",
"initials": "ET",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1982-12-22T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/4f4410e0-d24b-4fe9-bef5-df02be6455f6.jpg?1580940164",
"source": "default",
"default_avatar_color": "#93521e"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/9",
"account": {
"id": 1
}
}
}
]
},
"work": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 7,
"name": "mentor"
},
"contact": {
"id": 6,
"object": "contact",
"hash_id": "h:j9ePOdJb01WB6EN1Rl",
"first_name": "Ford",
"last_name": "Abbott",
"nickname": "Arthur Waelchi Jr.",
"complete_name": "Ford Abbott (Arthur Waelchi Jr.)",
"initials": "FAWJ",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/f7e6f20e-8133-487d-be7d-c77290708f7a.jpg?1580940164",
"source": "default",
"default_avatar_color": "#93521e"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/6",
"account": {
"id": 1
}
}
}
]
}
},
"dates": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/3db57fb2-687b-41ef-8df5-71ae9e38fe86.jpg?1580940164",
"source": "default",
"default_avatar_color": "#b3d5fe"
},
"food_preferences": null,
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": {
"id": 14,
"object": "contact",
"hash_id": "h:M0456darjZr9ozJVnX",
"first_name": "Fabian",
"last_name": null,
"nickname": "Vincenzo Schimmel",
"complete_name": "Fabian (Vincenzo Schimmel)",
"initials": "FS",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/669b3ebc-62f4-4037-a6b8-739de33decd3.jpg?1580940166",
"source": "default",
"default_avatar_color": "#fdb660"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/14",
"account": {
"id": 1
}
}
}
},
"addresses": [
{
"id": 1,
"object": "address",
"name": "ea",
"street": null,
"city": "Lake Shaniyashire",
"province": "Pennsylvania",
"postal_code": null,
"latitude": null,
"longitude": null,
"country": {
"id": "CC",
"object": "country",
"name": "Cocos (Keeling) Islands",
"iso": "CC"
},
"url": "https:\/\/monica.test\/api\/addresses\/1",
"account": {
"id": 1
},
"contact": {
"id": 5,
"object": "contact",
"hash_id": "h:GK7L1M6q8vWzRDN3we",
"first_name": "Tyrel",
"last_name": "Schamberger",
"nickname": null,
"complete_name": "Tyrel Schamberger",
"initials": "TS",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/3db57fb2-687b-41ef-8df5-71ae9e38fe86.jpg?1580940164",
"source": "default",
"default_avatar_color": "#b3d5fe"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/5",
"account": {
"id": 1
}
},
"created_at": "2020-02-05T22:02:45Z",
"updated_at": "2020-02-05T22:02:45Z"
}
],
"tags": [
{
"id": 1,
"object": "tag",
"name": "nisi",
"name_slug": "nisi",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 2,
"object": "tag",
"name": "repudiandae",
"name_slug": "repudiandae",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 3,
"object": "tag",
"name": "eum",
"name_slug": "eum",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 4,
"object": "tag",
"name": "deleniti",
"name_slug": "deleniti",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 5,
"object": "tag",
"name": "voluptatum",
"name_slug": "voluptatum",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 6,
"object": "tag",
"name": "enim",
"name_slug": "enim",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 7,
"object": "tag",
"name": "assumenda",
"name_slug": "assumenda",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 8,
"object": "tag",
"name": "alias",
"name_slug": "alias",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 9,
"object": "tag",
"name": "ratione",
"name_slug": "ratione",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 10,
"object": "tag",
"name": "non",
"name_slug": "non",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
}
],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 5,
"number_of_activities": 9,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 0,
"number_of_debts": 0
},
"url": "https:\/\/monica.test\/api\/contacts\/5",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:45Z"
},
{
"id": 9,
"object": "contact",
"hash_id": "h:Q67vO3nqdjW2Z80lJj",
"first_name": "Elwin",
"last_name": "Turcotte",
"nickname": null,
"complete_name": "Elwin Turcotte",
"description": null,
"gender": "Woman",
"gender_type": "F",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": false,
"is_me": false,
"last_called": null,
"last_activity_together": null,
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 0,
"contacts": []
},
"family": {
"total": 0,
"contacts": []
},
"friend": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 14,
"name": "bestfriend"
},
"contact": {
"id": 5,
"object": "contact",
"hash_id": "h:GK7L1M6q8vWzRDN3we",
"first_name": "Tyrel",
"last_name": "Schamberger",
"nickname": null,
"complete_name": "Tyrel Schamberger",
"initials": "TS",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/3db57fb2-687b-41ef-8df5-71ae9e38fe86.jpg?1580940164",
"source": "default",
"default_avatar_color": "#b3d5fe"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/5",
"account": {
"id": 1
}
}
}
]
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1982-12-22T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/4f4410e0-d24b-4fe9-bef5-df02be6455f6.jpg?1580940164",
"source": "default",
"default_avatar_color": "#93521e"
},
"food_preferences": null,
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": null
}
},
"addresses": [],
"tags": [],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 0,
"number_of_activities": 0,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 0,
"number_of_debts": 0
},
"url": "https:\/\/monica.test\/api\/contacts\/9",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:45Z"
},
{
"id": 10,
"object": "contact",
"hash_id": "h:a4OXL3BrZXbA5Kg9lD",
"first_name": "Larry",
"last_name": "Wisozk",
"nickname": "Prof. Hoyt Hamill DDS",
"complete_name": "Larry Wisozk (Prof. Hoyt Hamill DDS)",
"description": null,
"gender": "Rather not say",
"gender_type": "O",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": false,
"is_me": false,
"last_called": null,
"last_activity_together": null,
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 0,
"contacts": []
},
"family": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 16,
"name": "stepchild"
},
"contact": {
"id": 5,
"object": "contact",
"hash_id": "h:GK7L1M6q8vWzRDN3we",
"first_name": "Tyrel",
"last_name": "Schamberger",
"nickname": null,
"complete_name": "Tyrel Schamberger",
"initials": "TS",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/3db57fb2-687b-41ef-8df5-71ae9e38fe86.jpg?1580940164",
"source": "default",
"default_avatar_color": "#b3d5fe"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/5",
"account": {
"id": 1
}
}
}
]
},
"friend": {
"total": 0,
"contacts": []
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "1986-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/c933d535-6172-4866-8616-2858f9442918.jpg?1580940165",
"source": "default",
"default_avatar_color": "#bd5067"
},
"food_preferences": null,
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": null
}
},
"addresses": [],
"tags": [],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 0,
"number_of_activities": 0,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 0,
"number_of_debts": 0
},
"url": "https:\/\/monica.test\/api\/contacts\/10",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:45Z",
"updated_at": "2020-02-05T22:02:45Z"
}
],
"account": {
"id": 1
},
"created_at": "2020-02-13T15:50:07Z",
"updated_at": "2020-02-13T22:27:42Z"
}
}
Create a group
POST /groups/
Input
If a field is not required, you can send the
null
value as the content of the field.
Name
Type
Description
name
string
Required
. The name of the group.
Example
{
"name": "best friends bff"
}
Response
The API call returns a group object if the call succeeds.
{
"data": {
"id": 4,
"object": "group",
"name": "best friends bff",
"contacts": [],
"account": {
"id": 1
},
"created_at": "2020-02-13T23:53:15Z",
"updated_at": "2020-02-13T23:53:15Z"
}
}
Update a group
PUT /groups/:id
Input
Name
Type
Description
name
string
Required
. The name of the group.
Example
{
"name":"loving friends"
}
Response
{
"data": {
"id": 4,
"object": "group",
"name": "best friends bff",
"contacts": [],
"account": {
"id": 1
},
"created_at": "2020-02-13T23:53:15Z",
"updated_at": "2020-02-13T23:53:15Z"
}
}
Delete a group
DELETE /groups/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 31
}
Attach contact(s) to a group
POST /groups/:id/attach
Input
Name
Type
Description
contacts
array
Required
. The ids (as integer) of the contacts to add.
Example
{
"contacts": [1,2,3]
}
Response
{
"data": {
"id": 1,
"object": "group",
"name": "loving friends",
"contacts": [
{
"id": 4,
"object": "contact",
"hash_id": "h:w7MAYJlq1nbR6BKj2p",
"first_name": "Maximillian",
"last_name": null,
"nickname": null,
"complete_name": "Maximillian",
"description": null,
"gender": "Woman",
"gender_type": "F",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": false,
"is_me": false,
"last_called": null,
"last_activity_together": null,
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 6,
"name": "ex_husband"
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Celine",
"last_name": "Skiles",
"nickname": "Kendall Jakubowski",
"complete_name": "Celine Skiles (Kendall Jakubowski)",
"initials": "CSJ",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1996-02-29T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/88ce1570-3d8a-47a6-88d5-5e610dcd2bdb.jpg?1580940164",
"source": "default",
"default_avatar_color": "#709512"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/1",
"account": {
"id": 1
}
}
}
]
},
"family": {
"total": 0,
"contacts": []
},
"friend": {
"total": 0,
"contacts": []
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "2015-12-03T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/5837b106-b878-4a29-9345-24fe775c4016.jpg?1580940164",
"source": "default",
"default_avatar_color": "#ff9807"
},
"food_preferences": null,
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": null
}
},
"addresses": [],
"tags": [],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 0,
"number_of_activities": 0,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 0,
"number_of_debts": 0
},
"url": "https:\/\/monica.test\/api\/contacts\/4",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 5,
"object": "contact",
"hash_id": "h:GK7L1M6q8vWzRDN3we",
"first_name": "Tyrel",
"last_name": "Schamberger",
"nickname": null,
"complete_name": "Tyrel Schamberger",
"description": null,
"gender": "Woman",
"gender_type": "F",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": false,
"is_me": false,
"last_called": null,
"last_activity_together": "2019-12-14T00:00:00.000000Z",
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 17,
"name": "lover"
},
"contact": {
"id": 11,
"object": "contact",
"hash_id": "h:3xK6JaeqVJqGR2BlVO",
"first_name": "Cydney",
"last_name": "Crona",
"nickname": null,
"complete_name": "Cydney Crona",
"initials": "CC",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/02edd08d-f75d-47a3-b3ac-40b0b1f24986.jpg?1580940165",
"source": "default",
"default_avatar_color": "#93521e"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/11",
"account": {
"id": 1
}
}
}
]
},
"family": {
"total": 3,
"contacts": [
{
"relationship": {
"id": 9,
"name": "child"
},
"contact": {
"id": 7,
"object": "contact",
"hash_id": "h:GK7L1M6q8vWzRDN3we",
"first_name": "Hilda",
"last_name": "Hagenes",
"nickname": "Wilburn Considine",
"complete_name": "Hilda Hagenes (Wilburn Considine)",
"initials": "HHC",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": true,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/50a2d1ca-ec9b-440f-b77d-34cf6139b65b.jpg?1580940164",
"source": "default",
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
}
},
{
"relationship": {
"id": 11,
"name": "sibling"
},
"contact": {
"id": 8,
"object": "contact",
"hash_id": "h:OxEj52krPNbR7VpJK8",
"first_name": "Manley",
"last_name": null,
"nickname": "Georgette Quigley",
"complete_name": "Manley (Georgette Quigley)",
"initials": "MQ",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "1959-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/97b49ef2-a17b-463b-a545-35663bdd924d.jpg?1580940164",
"source": "default",
"default_avatar_color": "#e5e5cd"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/8",
"account": {
"id": 1
}
}
},
{
"relationship": {
"id": 15,
"name": "stepparent"
},
"contact": {
"id": 10,
"object": "contact",
"hash_id": "h:a4OXL3BrZXbA5Kg9lD",
"first_name": "Larry",
"last_name": "Wisozk",
"nickname": "Prof. Hoyt Hamill DDS",
"complete_name": "Larry Wisozk (Prof. Hoyt Hamill DDS)",
"initials": "LWHHD",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "1986-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/c933d535-6172-4866-8616-2858f9442918.jpg?1580940165",
"source": "default",
"default_avatar_color": "#bd5067"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/10",
"account": {
"id": 1
}
}
}
]
},
"friend": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 13,
"name": "bestfriend"
},
"contact": {
"id": 9,
"object": "contact",
"hash_id": "h:Q67vO3nqdjW2Z80lJj",
"first_name": "Elwin",
"last_name": "Turcotte",
"nickname": null,
"complete_name": "Elwin Turcotte",
"initials": "ET",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1982-12-22T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/4f4410e0-d24b-4fe9-bef5-df02be6455f6.jpg?1580940164",
"source": "default",
"default_avatar_color": "#93521e"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/9",
"account": {
"id": 1
}
}
}
]
},
"work": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 7,
"name": "mentor"
},
"contact": {
"id": 6,
"object": "contact",
"hash_id": "h:j9ePOdJb01WB6EN1Rl",
"first_name": "Ford",
"last_name": "Abbott",
"nickname": "Arthur Waelchi Jr.",
"complete_name": "Ford Abbott (Arthur Waelchi Jr.)",
"initials": "FAWJ",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/f7e6f20e-8133-487d-be7d-c77290708f7a.jpg?1580940164",
"source": "default",
"default_avatar_color": "#93521e"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/6",
"account": {
"id": 1
}
}
}
]
}
},
"dates": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/3db57fb2-687b-41ef-8df5-71ae9e38fe86.jpg?1580940164",
"source": "default",
"default_avatar_color": "#b3d5fe"
},
"food_preferences": null,
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": {
"id": 14,
"object": "contact",
"hash_id": "h:M0456darjZr9ozJVnX",
"first_name": "Fabian",
"last_name": null,
"nickname": "Vincenzo Schimmel",
"complete_name": "Fabian (Vincenzo Schimmel)",
"initials": "FS",
"gender": "Rather not say",
"gender_type": "O",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/669b3ebc-62f4-4037-a6b8-739de33decd3.jpg?1580940166",
"source": "default",
"default_avatar_color": "#fdb660"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/14",
"account": {
"id": 1
}
}
}
},
"addresses": [
{
"id": 1,
"object": "address",
"name": "ea",
"street": null,
"city": "Lake Shaniyashire",
"province": "Pennsylvania",
"postal_code": null,
"latitude": null,
"longitude": null,
"country": {
"id": "CC",
"object": "country",
"name": "Cocos (Keeling) Islands",
"iso": "CC"
},
"url": "https:\/\/monica.test\/api\/addresses\/1",
"account": {
"id": 1
},
"contact": {
"id": 5,
"object": "contact",
"hash_id": "h:GK7L1M6q8vWzRDN3we",
"first_name": "Tyrel",
"last_name": "Schamberger",
"nickname": null,
"complete_name": "Tyrel Schamberger",
"initials": "TS",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/3db57fb2-687b-41ef-8df5-71ae9e38fe86.jpg?1580940164",
"source": "default",
"default_avatar_color": "#b3d5fe"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/5",
"account": {
"id": 1
}
},
"created_at": "2020-02-05T22:02:45Z",
"updated_at": "2020-02-05T22:02:45Z"
}
],
"tags": [
{
"id": 1,
"object": "tag",
"name": "nisi",
"name_slug": "nisi",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 2,
"object": "tag",
"name": "repudiandae",
"name_slug": "repudiandae",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 3,
"object": "tag",
"name": "eum",
"name_slug": "eum",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 4,
"object": "tag",
"name": "deleniti",
"name_slug": "deleniti",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 5,
"object": "tag",
"name": "voluptatum",
"name_slug": "voluptatum",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 6,
"object": "tag",
"name": "enim",
"name_slug": "enim",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 7,
"object": "tag",
"name": "assumenda",
"name_slug": "assumenda",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 8,
"object": "tag",
"name": "alias",
"name_slug": "alias",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 9,
"object": "tag",
"name": "ratione",
"name_slug": "ratione",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
},
{
"id": 10,
"object": "tag",
"name": "non",
"name_slug": "non",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:44Z"
}
],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 5,
"number_of_activities": 9,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 0,
"number_of_debts": 0
},
"url": "https:\/\/monica.test\/api\/contacts\/5",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:45Z"
},
{
"id": 9,
"object": "contact",
"hash_id": "h:Q67vO3nqdjW2Z80lJj",
"first_name": "Elwin",
"last_name": "Turcotte",
"nickname": null,
"complete_name": "Elwin Turcotte",
"description": null,
"gender": "Woman",
"gender_type": "F",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": false,
"is_me": false,
"last_called": null,
"last_activity_together": null,
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 0,
"contacts": []
},
"family": {
"total": 0,
"contacts": []
},
"friend": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 14,
"name": "bestfriend"
},
"contact": {
"id": 5,
"object": "contact",
"hash_id": "h:GK7L1M6q8vWzRDN3we",
"first_name": "Tyrel",
"last_name": "Schamberger",
"nickname": null,
"complete_name": "Tyrel Schamberger",
"initials": "TS",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/3db57fb2-687b-41ef-8df5-71ae9e38fe86.jpg?1580940164",
"source": "default",
"default_avatar_color": "#b3d5fe"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/5",
"account": {
"id": 1
}
}
}
]
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1982-12-22T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/4f4410e0-d24b-4fe9-bef5-df02be6455f6.jpg?1580940164",
"source": "default",
"default_avatar_color": "#93521e"
},
"food_preferences": null,
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": null
}
},
"addresses": [],
"tags": [],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 0,
"number_of_activities": 0,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 0,
"number_of_debts": 0
},
"url": "https:\/\/monica.test\/api\/contacts\/9",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:44Z",
"updated_at": "2020-02-05T22:02:45Z"
},
{
"id": 10,
"object": "contact",
"hash_id": "h:a4OXL3BrZXbA5Kg9lD",
"first_name": "Larry",
"last_name": "Wisozk",
"nickname": "Prof. Hoyt Hamill DDS",
"complete_name": "Larry Wisozk (Prof. Hoyt Hamill DDS)",
"description": null,
"gender": "Rather not say",
"gender_type": "O",
"is_starred": false,
"is_partial": false,
"is_active": true,
"is_dead": false,
"is_me": false,
"last_called": null,
"last_activity_together": null,
"stay_in_touch_frequency": null,
"stay_in_touch_trigger_date": null,
"information": {
"relationships": {
"love": {
"total": 0,
"contacts": []
},
"family": {
"total": 1,
"contacts": [
{
"relationship": {
"id": 16,
"name": "stepchild"
},
"contact": {
"id": 5,
"object": "contact",
"hash_id": "h:GK7L1M6q8vWzRDN3we",
"first_name": "Tyrel",
"last_name": "Schamberger",
"nickname": null,
"complete_name": "Tyrel Schamberger",
"initials": "TS",
"gender": "Woman",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/3db57fb2-687b-41ef-8df5-71ae9e38fe86.jpg?1580940164",
"source": "default",
"default_avatar_color": "#b3d5fe"
}
},
"url": "https:\/\/monica.test\/api\/contacts\/5",
"account": {
"id": 1
}
}
}
]
},
"friend": {
"total": 0,
"contacts": []
},
"work": {
"total": 0,
"contacts": []
}
},
"dates": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "1986-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https:\/\/monica.test\/storage\/avatars\/c933d535-6172-4866-8616-2858f9442918.jpg?1580940165",
"source": "default",
"default_avatar_color": "#bd5067"
},
"food_preferences": null,
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"first_met_through_contact": null
}
},
"addresses": [],
"tags": [],
"statistics": {
"number_of_calls": 0,
"number_of_notes": 0,
"number_of_activities": 0,
"number_of_reminders": 0,
"number_of_tasks": 0,
"number_of_gifts": 0,
"number_of_debts": 0
},
"url": "https:\/\/monica.test\/api\/contacts\/10",
"account": {
"id": 1
},
"created_at": "2020-02-05T22:02:45Z",
"updated_at": "2020-02-05T22:02:45Z"
}
],
"account": {
"id": 1
},
"created_at": "2020-02-13T15:50:07Z",
"updated_at": "2020-02-13T22:27:42Z"
}
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Journal Entries
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Notes
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Notes
Overview
List all the notes in your account
Parameters
Response
List all the notes of a specific contact
Response
Get a specific note
Response
Create a note
Input
Example
Response
Update a note
Input
Example
Response
Delete a note
Response
Overview
The Note object allows to associate notes to contacts. A note has to be
associated with an existing contact - it can't be orphan.
A note can be favorited. When favorited, it will be display on the dashboard
inside the application.
When retrieving a note, we always also return some basic information about the
related contact.
List all the notes in your account
GET /notes/
Parameters
Name
Type
Description
limit
integer
Indicates the page size.
page
integer
Indicates the page to return.
Response
{
"data": [
{
"id": 4724,
"object": "note",
"body": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor.",
"is_favorited": true,
"favorited_at": "2017-12-04T00:00:00Z",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Usher",
"last_name": "Misste",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-07T09:00:35Z",
"updated_at": "2017-10-07T09:00:35Z"
},
{
"id": 4725,
"object": "note",
"body": "I should definitely see her more often, this is sad that I don't see her more often.",
"is_favorited": true,
"favorited_at": "2017-12-04T00:00:00Z",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Henri",
"last_name": "Troyat",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-07T15:28:22Z",
"updated_at": "2017-10-07T15:28:22Z"
}
],
"links": {
"first": "https://app.monicahq.com/api/contacts/1/notes?page=1",
"last": "https://app.monicahq.com/api/contacts/1/notes?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https://app.monicahq.com/api/contacts/1/notes",
"per_page": 10,
"to": 2,
"total": 2
}
}
List all the notes of a specific contact
GET /contacts/:id/notes
Response
{
"data": [
{
"id": 4724,
"object": "note",
"body": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor.",
"is_favorited": true,
"favorited_at": "2017-12-04T00:00:00Z",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Usher",
"last_name": "Misste",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-07T09:00:35Z",
"updated_at": "2017-10-07T09:00:35Z"
},
{
"id": 4725,
"object": "note",
"body": "I should definitely see her more often, this is sad that I don't see her more often.",
"is_favorited": true,
"favorited_at": "2017-12-04T00:00:00Z",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Henri",
"last_name": "Troyat",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-07T15:28:22Z",
"updated_at": "2017-10-07T15:28:22Z"
}
],
"links": {
"first": "https://app.monicahq.com/api/contacts/1/notes?page=1",
"last": "https://app.monicahq.com/api/contacts/1/notes?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https://app.monicahq.com/api/contacts/1/notes",
"per_page": 10,
"to": 2,
"total": 2
}
}
Get a specific note
GET /notes/:id
Response
{
"data": {
"id": 4724,
"object": "note",
"body": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor.",
"is_favorited": true,
"favorited_at": "2017-12-04T00:00:00Z",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Henri",
"last_name": "Troyat",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-07T09:00:35Z",
"updated_at": "2017-10-07T09:00:35Z"
}
}
Create a note
POST /notes/
Input
Name
Type
Description
body
string
Required
. The body of the note. Max 100000 characters.
contact_id
integer
Required
. The ID of the contact that the note is associated with.
is_favorited
integer
Required
. Indicates whether the note is favorited or not. Can be
0
(false) or
1
(true).
Example
{
"body": "This is a sample of a note.",
"contact_id": 1,
"is_favorited": 0
}
Response
The API call returns a note object if the call succeeds.
{
"data": {
"id": 4724,
"object": "note",
"body": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor.",
"is_favorited": true,
"favorited_at": null,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Henri",
"last_name": "Troyat",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-07T09:00:35Z",
"updated_at": "2017-10-07T09:00:35Z"
}
}
Update a note
PUT /notes/:id
Input
Name
Type
Description
body
string
Required
. The body of the note. Max 100000 characters.
contact_id
integer
Required
. The ID of the contact that the note is associated with.
is_favorited
integer
Required
. Indicates whether the note is favorited or not. Can be
0
(false) or
1
(true).
Example
{
"body": "This is a test that is updated",
"contact_id": 3
}
Response
{
"data": {
"id": 4724,
"object": "note",
"body": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. Praesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. Donec ut libero sed arcu vehicula ultricies a non tortor.",
"is_favorited": true,
"favorited_at": "2017-12-04T00:00:00Z",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Henri",
"last_name": "Troyat",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-07T09:00:35Z",
"updated_at": "2017-10-07T09:00:35Z"
}
}
Delete a note
DELETE /notes/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 31
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Occupations
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Occupations
Overview
List all the occupations in your account
Parameters
Response
Get a specific occupation
Response
Create an occupation
Input
Example
Response
Update an occupation
Input
Example
Response
Delete an occupation
Response
Overview
The Occupation object represents a job a Contact has (or had). It is linked with a occupation object.
List all the occupations in your account
GET /occupations/
Parameters
Name
Type
Description
limit
integer
Indicates the page size.
page
integer
Indicates the page to return.
Response
{
"data": [
{
"id": 2,
"object": "occupation",
"title": "Waiter",
"description": "Served beverages",
"salary": 12000,
"salary_unit": "year",
"currently_works_here": false,
"start_date": null,
"end_date": null,
"company": {
"id": 1,
"object": "company",
"name": "Central Perk",
"website": "http:\/\/url.com",
"number_of_employees": 3,
"account": {
"id": 1
},
"created_at": "2019-01-02T14:44:30Z",
"updated_at": "2019-01-02T14:47:07Z"
},
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Misael",
"last_name": null,
"nickname": null,
"complete_name": "Misael",
"initials": "M",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/55.jpg",
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
},
"created_at": "2019-01-02T15:04:54Z",
"updated_at": "2019-01-02T15:04:54Z"
},
{
"id": 3,
"object": "occupation",
"title": "Waiter",
"description": "Served beverages",
"salary": 12000,
"salary_unit": "year",
"currently_works_here": false,
"start_date": "1990-01-01",
"end_date": "1994-02-02",
"company": {
"id": 1,
"object": "company",
"name": "Central Perk",
"website": "http:\/\/url.com",
"number_of_employees": 3,
"account": {
"id": 1
},
"created_at": "2019-01-02T14:44:30Z",
"updated_at": "2019-01-02T14:47:07Z"
},
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Misael",
"last_name": null,
"nickname": null,
"complete_name": "Misael",
"initials": "M",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/55.jpg",
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
},
"created_at": "2019-01-02T15:07:03Z",
"updated_at": "2019-01-02T15:07:03Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/occupations?page=1",
"last": "https:\/\/app.monicahq.com\/api\/occupations?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/occupations",
"per_page": 15,
"to": 2,
"total": 2
}
}
Get a specific occupation
GET /occupations/:id
Response
{
{
"data": {
"id": 2,
"object": "occupation",
"title": "Waiter",
"description": "Served beverages",
"salary": 12000,
"salary_unit": "year",
"currently_works_here": false,
"start_date": null,
"end_date": null,
"company": {
"id": 1,
"object": "company",
"name": "Central Perk",
"website": "http:\/\/url.com",
"number_of_employees": 3,
"account": {
"id": 1
},
"created_at": "2019-01-02T14:44:30Z",
"updated_at": "2019-01-02T14:47:07Z"
},
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Misael",
"last_name": null,
"nickname": null,
"complete_name": "Misael",
"initials": "M",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/55.jpg",
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
},
"created_at": "2019-01-02T15:04:54Z",
"updated_at": "2019-01-02T15:04:54Z"
}
}
Create an occupation
POST /occupations/
Input
Name
Type
Description
contact_id
integer
Required
. The contact this occupation is about.
company_id
integer
Required
. The company where this occupation took place.
title
string
Required
. The job title. Max 255 characters.
description
string
Any additional description about this job. Max 1000 characters.
salary
integer
The estimated salary of the contact for this job.
salary_unit
string
The unit of the salary (ie. $12000/year). Possible values: year, month, week, day, hour.
currently_works_here
boolean
Indicates whether the contact currently works here.
start_date
date
The date the job started. Format: YYYY-MM-DD.
end_date
date
The date the job ended. Format: YYYY-MM-DD.
Example
{
"contact_id": 1,
"company_id": 1,
"title": "Waiter",
"description": "Served beverages",
"salary": "12000",
"salary_unit": "year",
"currently_works_here": false,
"start_date": "1990-01-01",
"end_date": "1994-02-02"
}
Response
The API call returns a occupation object if the call succeeds.
{
"data": {
"id": 3,
"object": "occupation",
"title": "Waiter",
"description": "Served beverages",
"salary": "12000",
"salary_unit": "year",
"currently_works_here": false,
"start_date": "1990-01-01T00:00:00Z",
"end_date": "1994-02-02T00:00:00Z",
"company": {
"id": 1,
"object": "company",
"name": "Central Perk",
"website": "http:\/\/url.com",
"number_of_employees": 3,
"account": {
"id": 1
},
"created_at": "2019-01-02T14:44:30Z",
"updated_at": "2019-01-02T14:47:07Z"
},
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Misael",
"last_name": null,
"nickname": null,
"complete_name": "Misael",
"initials": "M",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/55.jpg",
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
},
"created_at": "2019-01-02T15:07:03Z",
"updated_at": "2019-01-02T15:07:03Z"
}
}
Update an occupation
PUT /occupations/:id
Input
Name
Type
Description
contact_id
integer
Required
. The contact this occupation is about.
company_id
integer
Required
. The company where this occupation took place.
title
string
Required
. The job title. Max 255 characters.
description
string
Any additional description about this job. Max 1000 characters.
salary
integer
The estimated salary of the contact for this job.
salary_unit
string
The unit of the salary (ie. $12000/year). Possible values: year, month, week, day, hour.
currently_works_here
boolean
Indicates whether the contact currently works here.
start_date
date
The date the job started. Format: YYYY-MM-DD.
end_date
date
The date the job ended. Format: YYYY-MM-DD.
Example
{
"contact_id": 1,
"company_id": 1,
"title": "Waiter",
"description": "Served beverages",
"salary": "12000",
"salary_unit": "year",
"currently_works_here": false,
"start_date": "1990-01-01",
"end_date": "1994-02-02"
}
Response
{
"data": {
"id": 1,
"object": "occupation",
"title": "Waiter",
"description": "Served beverages",
"salary": "12000",
"salary_unit": "year",
"currently_works_here": false,
"start_date": "1990-01-01T00:00:00Z",
"end_date": "1994-02-02T00:00:00Z",
"company": {
"id": 1,
"object": "company",
"name": "Central Perk",
"website": "http:\/\/url.com",
"number_of_employees": 3,
"account": {
"id": 1
},
"created_at": "2019-01-02T14:44:30Z",
"updated_at": "2019-01-02T14:47:07Z"
},
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Misael",
"last_name": null,
"nickname": null,
"complete_name": "Misael",
"initials": "M",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/women\/55.jpg",
"default_avatar_color": "#e5e5cd"
}
},
"account": {
"id": 1
}
},
"created_at": "2019-01-02T15:03:27Z",
"updated_at": "2019-01-02T15:10:53Z"
}
}
Delete an occupation
DELETE /occupations/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 1
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Photos
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Photos
Overview
List all the photos of your account
Response
List all the photos of a specific contact
Response
Get a specific photo
Response
Create a photo
Input
Example
Response
Associate a photo to a gift
Delete a photo
Response
Overview
The Photo object represents a photo attached to a contact. A contact can have as many photos as necessary. There are two limitations though: the maximum allowed size of the photo itself, and the maximum allowed total amount of Mb allowed by the instance.
List all the photos of your account
GET /photos/
Response
{
"data": [
{
"id": 44,
"object": "photo",
"original_filename": "EBeV.jpeg",
"new_filename": "photos\/POWVMVuauZ2xPsG9ZNoZdE0jLaMRz1FGZtCUrjDH.jpeg",
"filesize": 484289,
"mime_type": "image\/jpeg",
"link": "https:\/\/app.monicahq.com\/storage\/photos\/POWVMVuauZ2xPsG9ZNoZdE0jLaMRz1FGZtCUrjDH.jpeg",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Julia",
"last_name": null,
"nickname": null,
"complete_name": "Julia",
"initials": "J",
"gender": "Femme",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "",
"source": "default",
"default_avatar_color": "#b3d5fe"
}
},
"url": "https:\/\/app.monicahq.com\/api\/contacts\/1",
"account": {
"id": 1
}
},
"created_at": "2020-01-04T10:26:48Z",
"updated_at": "2020-01-04T10:26:48Z"
},
{
"id": 45,
"object": "photo",
"original_filename": "z.jpg",
"new_filename": "photos\/FbTRT8vYf5eCaxXzKWqVOw07sceY5IdDUNpVy3sQ.jpeg",
"filesize": 43389,
"mime_type": "image\/jpeg",
"link": "https:\/\/app.monicahq.com\/storage\/photos\/FbTRT8vYf5eCaxXzKWqVOw07sceY5IdDUNpVy3sQ.jpeg",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Julia",
"last_name": null,
"nickname": null,
"complete_name": "Julia",
"initials": "J",
"gender": "Femme",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "",
"source": "default",
"default_avatar_color": "#b3d5fe"
}
},
"url": "https:\/\/app.monicahq.com\/api\/contacts\/1",
"account": {
"id": 1
}
},
"created_at": "2020-01-04T11:55:43Z",
"updated_at": "2020-01-04T11:55:43Z"
},
{
"id": 46,
"object": "photo",
"original_filename": "25832602.png",
"new_filename": "photos\/DGp8XlpBvwa7Vlh6f7XJX4xFjhdFafVkqIqUgS7A.png",
"filesize": 19951,
"mime_type": "image\/png",
"link": "https:\/\/app.monicahq.com\/storage\/photos\/DGp8XlpBvwa7Vlh6f7XJX4xFjhdFafVkqIqUgS7A.png",
"account": {
"id": 1
},
"contact": {
"id": 2,
"object": "contact",
"hash_id": "h:kxPeaNArJeWyE27lgM",
"first_name": "Chase",
"last_name": null,
"nickname": null,
"complete_name": "Chase",
"initials": "C",
"gender": null,
"gender_type": null,
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "",
"source": "default",
"default_avatar_color": "#bd5067"
}
},
"url": "https:\/\/app.monicahq.com\/api\/contacts\/2",
"account": {
"id": 1
}
},
"created_at": "2020-01-11T11:37:13Z",
"updated_at": "2020-01-11T11:37:13Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/photos?page=1",
"last": "https:\/\/app.monicahq.com\/api\/photos?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/photos",
"per_page": 15,
"to": 3,
"total": 3
}
}
List all the photos of a specific contact
GET /contacts/:id/photos
Response
{
"data": [
{
"id": 44,
"object": "photo",
"original_filename": "EBeV.jpeg",
"new_filename": "photos\/POWVMVuauZ2xPsG9ZNoZdE0jLaMRz1FGZtCUrjDH.jpeg",
"filesize": 484289,
"mime_type": "image\/jpeg",
"link": "https:\/\/app.monicahq.com\/storage\/photos\/POWVMVuauZ2xPsG9ZNoZdE0jLaMRz1FGZtCUrjDH.jpeg",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Julia",
"last_name": null,
"nickname": null,
"complete_name": "Julia",
"initials": "J",
"gender": "Femme",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "",
"source": "default",
"default_avatar_color": "#b3d5fe"
}
},
"url": "https:\/\/app.monicahq.com\/api\/contacts\/1",
"account": {
"id": 1
}
},
"created_at": "2020-01-04T10:26:48Z",
"updated_at": "2020-01-04T10:26:48Z"
},
{
"id": 45,
"object": "photo",
"original_filename": "z.jpg",
"new_filename": "photos\/FbTRT8vYf5eCaxXzKWqVOw07sceY5IdDUNpVy3sQ.jpeg",
"filesize": 43389,
"mime_type": "image\/jpeg",
"link": "https:\/\/app.monicahq.com\/storage\/photos\/FbTRT8vYf5eCaxXzKWqVOw07sceY5IdDUNpVy3sQ.jpeg",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Julia",
"last_name": null,
"nickname": null,
"complete_name": "Julia",
"initials": "J",
"gender": "Femme",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "",
"source": "default",
"default_avatar_color": "#b3d5fe"
}
},
"url": "https:\/\/app.monicahq.com\/api\/contacts\/1",
"account": {
"id": 1
}
},
"created_at": "2020-01-04T11:55:43Z",
"updated_at": "2020-01-04T11:55:43Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/contacts\/1\/photos?page=1",
"last": "https:\/\/app.monicahq.com\/api\/contacts\/1\/photos?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/contacts\/1\/photos",
"per_page": 15,
"to": 2,
"total": 2
}
}
Get a specific photo
GET /photos/:id
Response
{
"data": {
"id": 44,
"object": "photo",
"original_filename": "EBeV.jpeg",
"new_filename": "photos\/POWVMVuauZ2xPsG9ZNoZdE0jLaMRz1FGZtCUrjDH.jpeg",
"filesize": 484289,
"mime_type": "image\/jpeg",
"link": "https:\/\/app.monicahq.com\/storage\/photos\/POWVMVuauZ2xPsG9ZNoZdE0jLaMRz1FGZtCUrjDH.jpeg",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Julia",
"last_name": null,
"nickname": null,
"complete_name": "Julia",
"initials": "J",
"gender": "Femme",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "",
"source": "default",
"default_avatar_color": "#b3d5fe"
}
},
"url": "https:\/\/app.monicahq.com\/api\/contacts\/1",
"account": {
"id": 1
}
},
"created_at": "2020-01-04T10:26:48Z",
"updated_at": "2020-01-04T10:26:48Z"
}
}
Create a photo
POST /photos/
Input
Name
Type
Description
contact_id
integer
Required
. The ID of the contact that the document is associated with.
photo
file
Required
. The photo content to upload.
Example
You can send the photo file using a
multipart/form-data
Content-type.
Example with curl:
curl -sSL -H "Authorization: Bearer $TOKEN"
https://app.monicahq.com/api/documents
-X POST
-F contact_id=1
-F
[email protected]
Response
The API call returns a Photo object if the call succeeds.
{
"data": {
"id": 47,
"object": "photo",
"original_filename": "avatar.png",
"new_filename": "photos\/zFx8jyaoXArR0Wl4lbQFUjslX7xdVRTCLfdvy8a9.png",
"filesize": 2760,
"mime_type": "image\/png",
"link": "https:\/\/app.monicahq.com\/storage\/photos\/zFx8jyaoXArR0Wl4lbQFUjslX7xdVRTCLfdvy8a9.png",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"hash_id": "h:Y5LOkAdWNDqgVomKPv",
"first_name": "Julia",
"last_name": null,
"nickname": null,
"complete_name": "Julia",
"initials": "J",
"gender": "Femme",
"gender_type": "F",
"is_partial": false,
"is_dead": false,
"is_me": false,
"information": {
"birthdate": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"url": "",
"source": "default",
"default_avatar_color": "#b3d5fe"
}
},
"url": "https:\/\/app.monicahq.com\/api\/contacts\/1",
"account": {
"id": 1
}
},
"created_at": "2020-01-11T11:41:09Z",
"updated_at": "2020-01-11T11:41:09Z"
}
}
Associate a photo to a gift
You can
associate a photo to a gift
.
Delete a photo
DELETE /photos/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 47
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Relationships
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Relationships
Overview
List a specific relationship
Response
List all the relationships of a contact
Response
Create a relationship
Input
Example
Response
Update a relationship
Input
Example
Response
Delete a relationship
Response
Overview
A contact can be linked to other contacts. This link is called a relationship. For instance, a contact can have an uncle, a lover, a protégé.
Each relationship has a
relationship type
. A contact can have as many relationships as necessary.
A relationship is between two contacts. Let's say John has an uncle called Peter. In this case:
the primary contact is John. In the API calls below, John is called
contact_is
.
the secondary contact is Peter. In the API calls below, Peter is called
of_contact
.
They are named that way so you can read a call more easily:
contact_is
is friend
of_contact
.
List a specific relationship
GET /relationships/:id
Response
{
"data": {
"id": 20,
"object": "relationship",
"contact_is": {
"id": 1,
"hash_ID": "h:Y5LOkAdWNDqgVomKPv",
"object": "contact",
"first_name": "Bailey",
"last_name": "Rolfson",
"complete_name": "Bailey Rolfson",
"initials": "BR",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "1949-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/men\/42.jpg",
"default_avatar_color": "#5f479a"
}
},
"account": {
"id": 1
}
},
"relationship_type": {
"id": 2,
"object": "relationshiptype",
"name": "spouse",
"name_reverse_relationship": "spouse",
"relationship_type_group_id": 1,
"delible": false,
"account": {
"id": 1
},
"created_at": "2018-04-14T23:24:49Z",
"updated_at": "2018-04-14T23:24:49Z"
},
"of_contact": {
"id": 3,
"hash_ID": "h:65JGY7ZWDkbpOvPQR4",
"object": "contact",
"first_name": "Yoshiko",
"last_name": "Ziemann",
"complete_name": "Yoshiko Ziemann",
"initials": "YZ",
"gender": "Woman",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1939-04-05T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#bd5067"
}
},
"account": {
"id": 1
}
},
"account": {
"id": 1
},
"created_at": "2018-04-16T20:49:04Z",
"updated_at": "2018-04-16T20:49:04Z"
}
}
List all the relationships of a contact
GET /contacts/:id/relationships/
Response
{
"data": [
{
"id": 1,
"object": "relationshiptypegroup",
"name": "love",
"delible": false,
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
{
"id": 2,
"object": "relationshiptypegroup",
"name": "family",
"delible": false,
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
{
"id": 3,
"object": "relationshiptypegroup",
"name": "friend",
"delible": false,
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
},
{
"id": 4,
"object": "relationshiptypegroup",
"name": "work",
"delible": false,
"account": {
"id": 1
},
"created_at": null,
"updated_at": null
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/relationshiptypegroups?page=1",
"last": "https:\/\/app.monicahq.com\/api\/relationshiptypegroups?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/relationshiptypegroups",
"per_page": 15,
"to": 4,
"total": 4
}
}
Create a relationship
POST /relationships/
Input
Name
Type
Description
contact_is
integer
Required
. The ID of the contact that the relationship will be linked to.
relationship_type_id
integer
Required
. The nature of the relationship between the two contacts.
of_contact
integer
Required
. The ID of the contact the relationship is made with.
Example
{
"contact_is": 1,
"relationship_type_id": 2,
"of_contact": 3
}
Response
The API returns a Relationship object if the call succeeds.
{
"data": {
"id": 20,
"object": "relationship",
"contact_is": {
"id": 1,
"hash_ID": "h:Y5LOkAdWNDqgVomKPv",
"object": "contact",
"first_name": "Bailey",
"last_name": "Rolfson",
"complete_name": "Bailey Rolfson",
"initials": "BR",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "1949-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/men\/42.jpg",
"default_avatar_color": "#5f479a"
}
},
"account": {
"id": 1
}
},
"relationship_type": {
"id": 2,
"object": "relationshiptype",
"name": "spouse",
"name_reverse_relationship": "spouse",
"relationship_type_group_id": 1,
"delible": false,
"account": {
"id": 1
},
"created_at": "2018-04-14T23:24:49Z",
"updated_at": "2018-04-14T23:24:49Z"
},
"of_contact": {
"id": 3,
"hash_ID": "h:65JGY7ZWDkbpOvPQR4",
"object": "contact",
"first_name": "Yoshiko",
"last_name": "Ziemann",
"complete_name": "Yoshiko Ziemann",
"initials": "YZ",
"gender": "Woman",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1939-04-05T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#bd5067"
}
},
"account": {
"id": 1
}
},
"account": {
"id": 1
},
"created_at": "2018-04-16T20:49:04Z",
"updated_at": "2018-04-16T20:49:04Z"
}
}
Update a relationship
Updating a relationship will only update the relationship type.
PUT /relationships/:id
Input
Name
Type
Description
relationship_type_id
integer
Required
. The nature of the relationship between the two contacts.
Example
{
"relationship_type_id": 1
}
Response
The API returns a Relationship object if the call succeeds.
{
"data": {
"id": 20,
"object": "relationship",
"contact_is": {
"id": 1,
"hash_ID": "h:Y5LOkAdWNDqgVomKPv",
"object": "contact",
"first_name": "Bailey",
"last_name": "Rolfson",
"complete_name": "Bailey Rolfson",
"initials": "BR",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": true,
"is_year_unknown": false,
"date": "1949-01-01T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": true,
"avatar_url": "https:\/\/randomuser.me\/api\/portraits\/men\/42.jpg",
"default_avatar_color": "#5f479a"
}
},
"account": {
"id": 1
}
},
"relationship_type": {
"id": 2,
"object": "relationshiptype",
"name": "spouse",
"name_reverse_relationship": "spouse",
"relationship_type_group_id": 1,
"delible": false,
"account": {
"id": 1
},
"created_at": "2018-04-14T23:24:49Z",
"updated_at": "2018-04-14T23:24:49Z"
},
"of_contact": {
"id": 3,
"hash_ID": "h:65JGY7ZWDkbpOvPQR4",
"object": "contact",
"first_name": "Yoshiko",
"last_name": "Ziemann",
"complete_name": "Yoshiko Ziemann",
"initials": "YZ",
"gender": "Woman",
"is_partial": false,
"is_dead": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1939-04-05T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
},
"avatar": {
"has_avatar": false,
"avatar_url": null,
"default_avatar_color": "#bd5067"
}
},
"account": {
"id": 1
}
},
"account": {
"id": 1
},
"created_at": "2018-04-16T20:49:04Z",
"updated_at": "2018-04-16T20:49:04Z"
}
}
Delete a relationship
DELETE /relationships/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 31
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Relationship Types
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Relationship Type Groups
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Reminders
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Reminders
Overview
List all the reminders in your account
Parameters
Response
List all the reminders of a specific contact
Response
Get a specific reminder
Response
Create a reminder
Input
Example
Response
Update a reminder
Input
Example
Response
Delete a reminder
Response
Overview
The Reminder object allows to add reminders about your contacts.
A reminder is a complex object in Monica. There are two types of reminders:
unique reminder (
frequency_type
==
one_time
),
recurring reminder (
frequency_type
==
week
|
month
|
year
).
When a reminder is recurrent, the
frequency_number
indicates the number of
days|months|years between each occurence.
It's important to note that when a birthdate is entered for a contact, the
system will automatically create a reminder for this birthday. In your code,
make sure that you don't explicitely create a reminder for birthdays.
When a reminder is supposed to be triggered, if the instance is set to send
emails or if the account is on the paid plan, an email will be sent
automatically to the user with the reminder as its content.
When retrieving a reminder, we always also return some basic information about the
related contact.
List all the reminders in your account
GET /reminders/
Parameters
Name
Type
Description
limit
integer
Indicates the page size.
page
integer
Indicates the page to return.
Response
{
"data": [
{
"id": 2,
"object": "reminder",
"title": "Wish happy birthday to Danny",
"description": null,
"frequency_type": "year",
"frequency_number": 1,
"last_triggered_date": null,
"next_expected_date": "2017-10-23T00:00:18Z",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Danny",
"last_name": "Troyat",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2016-10-07T11:53:43Z",
"updated_at": "2017-06-16T19:04:54Z"
},
{
"id": 4,
"object": "reminder",
"title": "Wish happy birthday to Leon",
"description": null,
"frequency_type": "year",
"frequency_number": 1,
"last_triggered_date": null,
"next_expected_date": "2018-04-24T09:04:35Z",
"account": {
"id": 1
},
"contact": {
"id": 79117,
"object": "contact",
"first_name": "Leon",
"last_name": null,
"gender": "male",
"is_partial": true,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "2016-04-24T00:00:00Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2016-10-09T13:04:35Z",
"updated_at": "2017-06-16T19:04:49Z"
},
{
"id": 5,
"object": "reminder",
"title": "Wish happy birthday to Lena",
"description": null,
"frequency_type": "year",
"frequency_number": 1,
"last_triggered_date": null,
"next_expected_date": "2017-10-09T15:28:03Z",
"account": {
"id": 1
},
"contact": {
"id": 79118,
"object": "contact",
"first_name": "Lena",
"last_name": null,
"gender": "female",
"is_partial": true,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "2015-10-09T00:00:00Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2016-10-09T19:28:03Z",
"updated_at": "2017-06-16T19:04:49Z"
},
{
"id": 13,
"object": "reminder",
"title": "Wish happy birthday to Edouard",
"description": null,
"frequency_type": "year",
"frequency_number": 1,
"last_triggered_date": null,
"next_expected_date": "2017-10-14T23:35:10Z",
"account": {
"id": 1
},
"contact": {
"id": 5,
"object": "contact",
"first_name": "Edouard",
"last_name": "Desgrée",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1982-10-14T00:00:00Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2016-10-15T03:35:10Z",
"updated_at": "2017-06-16T19:04:54Z"
},
{
"id": 14,
"object": "reminder",
"title": "Happy birthday to my best friend",
"description": null,
"frequency_type": "year",
"frequency_number": 1,
"last_triggered_date": null,
"next_expected_date": "2017-10-15T07:59:21Z",
"account": {
"id": 1
},
"contact": {
"id": 6,
"object": "contact",
"first_name": "Matthieu",
"last_name": "Demarque",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 1
}
},
"created_at": "2016-10-17T11:59:21Z",
"updated_at": "2017-05-30T01:27:38Z"
},
{
"id": 16,
"object": "reminder",
"title": "Wish happy birthday to Jim",
"description": null,
"frequency_type": "year",
"frequency_number": 1,
"last_triggered_date": null,
"next_expected_date": "2017-10-01T19:55:30Z",
"account": {
"id": 1
},
"contact": {
"id": 8,
"object": "contact",
"first_name": "Jim",
"last_name": "Halpert",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1978-10-01T16:20:55Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2016-10-18T23:55:30Z",
"updated_at": "2017-06-16T19:04:54Z"
},
{
"id": 122,
"object": "reminder",
"title": "Anniversaire de première date",
"description": null,
"frequency_type": "year",
"frequency_number": 1,
"last_triggered_date": null,
"next_expected_date": "2017-10-23T22:57:25Z",
"account": {
"id": 1
},
"contact": {
"id": 6,
"object": "contact",
"first_name": "Matthieu",
"last_name": "Demarque",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 1
}
},
"created_at": "2016-10-24T02:57:25Z",
"updated_at": "2017-05-30T01:33:36Z"
},
{
"id": 162,
"object": "reminder",
"title": "Wish happy birthday to Alexis",
"description": null,
"frequency_type": "year",
"frequency_number": 1,
"last_triggered_date": null,
"next_expected_date": "2018-01-18T14:07:54Z",
"account": {
"id": 1
},
"contact": {
"id": 150,
"object": "contact",
"first_name": "Alexis",
"last_name": "Saettler",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "2017-01-18T00:00:00Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-01-18T19:07:54Z",
"updated_at": "2017-06-16T19:04:55Z"
},
{
"id": 186,
"object": "reminder",
"title": "Wish happy birthday to Héloïse, Danny's child.",
"description": null,
"frequency_type": "year",
"frequency_number": 1,
"last_triggered_date": null,
"next_expected_date": "2017-11-22T02:21:49Z",
"account": {
"id": 1
},
"contact": {
"id": 79172,
"object": "contact",
"first_name": "Héloïse",
"last_name": null,
"gender": "female",
"is_partial": true,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "2011-11-22T02:21:49Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-05-30T02:21:49Z",
"updated_at": "2017-06-16T19:04:49Z"
},
{
"id": 2165,
"object": "reminder",
"title": "Anniversaire de mariage",
"description": "",
"frequency_type": "year",
"frequency_number": 1,
"last_triggered_date": "2017-08-12T00:00:00Z",
"next_expected_date": "2018-08-12T00:00:00Z",
"account": {
"id": 1
},
"contact": {
"id": 11668,
"object": "contact",
"first_name": "Michel",
"last_name": "Fleury",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "unknown",
"birthdate": null
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-06-15T21:06:59Z",
"updated_at": "2017-08-12T00:00:37Z"
}
],
"links": {
"first": "https://app.monicahq.com/api/reminders?page=1",
"last": "https://app.monicahq.com/api/reminders?page=3",
"prev": null,
"next": "https://app.monicahq.com/api/reminders?page=2"
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 3,
"path": "https://app.monicahq.com/api/reminders",
"per_page": 10,
"to": 10,
"total": 22
}
}
List all the reminders of a specific contact
GET /contacts/:id/reminders
Response
{
"data": [
{
"id": 2,
"object": "reminder",
"title": "Wish happy birthday to Jean",
"description": null,
"frequency_type": "year",
"frequency_number": 1,
"last_triggered_date": null,
"next_expected_date": "2017-10-23T00:00:18Z",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Jean",
"last_name": "Valjean",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2016-10-07T11:53:43Z",
"updated_at": "2017-06-16T19:04:54Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/contacts\/1\/reminders?page=1",
"last": "https:\/\/app.monicahq.com\/api\/contacts\/1\/reminders?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/contacts\/1\/reminders",
"per_page": 10,
"to": 1,
"total": 1
}
}
Get a specific reminder
GET /reminders/:id
Response
{
"data": {
"id": 2,
"object": "reminder",
"title": "Wish happy birthday to Jean",
"description": null,
"frequency_type": "year",
"frequency_number": 1,
"last_triggered_date": null,
"next_expected_date": "2017-10-23T00:00:18Z",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Jean",
"last_name": "Valjean",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2016-10-07T11:53:43Z",
"updated_at": "2017-06-16T19:04:54Z"
}
}
Create a reminder
POST /reminder/
Input
Name
Type
Description
title
string
Required
. The title of the reminder. Max 100000 characters.
description
string
A description about what the reminder is. Max 1000000 characters.
next_expected_date
string
Required
. The date, in the future, when we should warn the user about this reminder. Format: YYYY-MM-DD.
frequency_type
string
Required
. The frequency type indicates if the reminder is recurring and if so, what it is. Possible values:
one_time
,
week
,
month
,
year
.
frequency_number
integer
The frequency of which the event should occur.
contact_id
integer
Required
. The ID of the contact that the call is associated with.
Example
{
"title": "Call to make sure everything's fine",
"description": "I want to make sure that everything is ok about him and his wedding.",
"next_expected_date": "2018-09-09",
"frequency_type": "day",
"frequency_number": 3,
"contact_id": 1
}
Response
The API call returns a Reminder object if the call succeeds.
{
"data": {
"id": 2,
"object": "reminder",
"title": "Call to make sure everything's fine",
"description": "I want to make sure that everything is ok about him and his wedding.",
"frequency_type": "day",
"frequency_number": 3,
"last_triggered_date": null,
"next_expected_date": "2018-09-09T00:00:18Z",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Jean",
"last_name": "Valjean",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2016-10-07T11:53:43Z",
"updated_at": "2017-06-16T19:04:54Z"
}
}
Update a reminder
PUT /reminders/:id
Input
Name
Type
Description
title
string
Required
. The title of the reminder. Max 100000 characters.
description
string
A description about what the reminder is. Max 1000000 characters.
next_expected_date
string
Required
. The date, in the future, when we should warn the user about this reminder. Format: YYYY-MM-DD.
frequency_type
string
Required
. The frequency type indicates if the reminder is recurring and if so, what it is. Possible values:
one_time
,
week
,
month
,
year
.
frequency_number
integer
The frequency of which the event should occur.
contact_id
integer
Required
. The ID of the contact that the call is associated with.
Example
{
"title": "Call to make sure everything's fine",
"description": "I want to make sure that everything is ok about him and his wedding.",
"next_expected_date": "2018-09-09",
"frequency_type": "day",
"frequency_number": 3,
"contact_id": 3
}
Response
{
"data": {
"id": 2,
"object": "reminder",
"title": "Call to make sure everything's fine",
"description": "I want to make sure that everything is ok about him and his wedding.",
"frequency_type": "day",
"frequency_number": 3,
"last_triggered_date": null,
"next_expected_date": "2018-09-09T00:00:18Z",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Jean",
"last_name": "Valjean",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2016-10-07T11:53:43Z",
"updated_at": "2017-06-16T19:04:54Z"
}
}
Delete a reminder
DELETE /reminders/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 31
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Tags
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Tags
Overview
List all your tags
Parameters
Response
Get a specific tag
Create a tag
Input
Example
Response
Update a tag
Input
Example
Response
Delete a tag
Response
Associate a tag to a contact
Parameters
Example
Response
Remove a specific tag from a contact
Parameters
Example
Response
Remove all the tags from a contact
Response
Overview
The Tag object allows to tag contacts. Think of tags as labels, or folders, with
which you can group contacts who belong together.
List all your tags
GET /tags/
Parameters
Name
Type
Description
limit
integer
Indicates the page size.
page
integer
Indicates the page to return.
Response
{
"data": [
{
"id": 325,
"object": "tag",
"name": "ami",
"name_slug": "ami",
"account": {
"id": 1
},
"created_at": "2017-07-19T21:00:07Z",
"updated_at": "2017-07-19T21:00:07Z"
},
{
"id": 857,
"object": "tag",
"name": "college",
"name_slug": "college",
"account": {
"id": 1
},
"created_at": "2017-09-26T20:51:59Z",
"updated_at": "2017-09-26T20:51:59Z"
},
{
"id": 1,
"object": "tag",
"name": "collegue",
"name_slug": "collegue",
"account": {
"id": 1
},
"created_at": "2017-07-04T22:15:03Z",
"updated_at": "2017-07-04T22:15:03Z"
},
{
"id": 322,
"object": "tag",
"name": "eglise",
"name_slug": "eglise",
"account": {
"id": 1
},
"created_at": "2017-07-19T19:49:54Z",
"updated_at": "2017-07-19T19:49:54Z"
},
{
"id": 856,
"object": "tag",
"name": "friend",
"name_slug": "friend",
"account": {
"id": 1
},
"created_at": "2017-09-26T20:51:59Z",
"updated_at": "2017-09-26T20:51:59Z"
}
],
"links": {
"first": "https://app.monicahq.com/api/tags?page=1",
"last": "https://app.monicahq.com/api/tags?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https://app.monicahq.com/api/tags",
"per_page": 10,
"to": 5,
"total": 5
}
}
Get a specific tag
GET /tags/:id
{
"data": {
"id": 1,
"object": "tag",
"name": "collegue",
"name_slug": "collegue",
"account": {
"id": 1
},
"created_at": "2017-07-04T22:15:03Z",
"updated_at": "2017-07-04T22:15:03Z"
}
}
Create a tag
POST /tags/
Input
If a field is not required, you can send the
null
value as the content of the field.
Name
Type
Description
name
string
Required
. The name of the tag. Max 255 characters.
Example
{
"name": "friends"
}
Response
The API call returns a tag object if the call succeeds.
{
"data": {
"id": 1,
"object": "tag",
"name": "friends",
"name_slug": "friends",
"account": {
"id": 1
},
"created_at": "2017-07-04T22:15:03Z",
"updated_at": "2017-07-04T22:15:03Z"
}
}
Update a tag
PUT /tags/:id
Input
Name
Type
Description
name
string
Required
. The name of the tag. Max 255 characters.
Example
{
"name": "prison"
}
Response
{
"data": {
"id": 1,
"object": "tag",
"name": "prison",
"name_slug": "prison",
"account": {
"id": 1
},
"created_at": "2017-07-04T22:15:03Z",
"updated_at": "2017-07-04T22:15:03Z"
}
}
Delete a tag
DELETE /tags/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 31
}
Associate a tag to a contact
A tag is only useful if linked to a contact. To associate a tag to a contact, simply call the following method and give an array of tag name. The call automatically manages whether a tag with the given name already exists and will only create tags that do not exist yet.
Let's say that you have one tag in your account, called
family
. Let's also assume that you are sending this array:
{
"tags": ["family", "friend"]
}
friend
does not exist yet in the user's account, therefore it will be automatically created, whereas the
family
tag will not be created and only be associated with the contact.
Please note that calling this method will add the given tags to the contact without removing those which might already be associated with the contact.
POST /contacts/:id/setTags
Parameters
Name
Type
Description
tags
array
Required
. A list of tags, as string, separated by a comma.
Example
{
"tags": ["family", "friend"]
}
Response
The response sends back a standard Contact object.
{
"data": {
"id": 1,
"object": "contact",
"first_name": "Odell",
"last_name": "McKenzie",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"last_called": null,
"last_activity_together": {
"date": "2017-10-22 00:00:00.000000",
"timezone_type": 3,
"timezone": "US/Eastern"
},
"information": {
"family": {
"kids": {
"total": 4,
"kids": [
{
"id": 2,
"object": "contact",
"first_name": "Oleta",
"last_name": "Hintz",
"gender": "Woman",
"is_partial": true,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2018-08-16T00:00:00Z"
}
},
"account": {
"id": 1
}
},
{
"id": 3,
"object": "contact",
"first_name": "Lloyd",
"last_name": "Connelly",
"gender": "Woman",
"is_partial": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2018-06-18T00:00:00Z"
}
},
"account": {
"id": 1
}
},
{
"id": 4,
"object": "contact",
"first_name": "Burley",
"last_name": null,
"gender": "Woman",
"is_partial": true,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1922-11-06T00:00:00Z"
}
},
"account": {
"id": 1
}
},
{
"id": 5,
"object": "contact",
"first_name": "Ben",
"last_name": null,
"gender": "Man",
"is_partial": true,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2018-03-17T00:00:00Z"
}
},
"account": {
"id": 1
}
}
]
},
"partners": {
"total": 3,
"partners": [
{
"id": 6,
"object": "contact",
"first_name": "Weston",
"last_name": "Lowe",
"gender": "Man",
"is_partial": true,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1950-12-21T00:00:00Z"
}
},
"account": {
"id": 1
}
},
{
"id": 7,
"object": "contact",
"first_name": "Zelda",
"last_name": "Kessler",
"gender": "Rather not say",
"is_partial": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2018-08-04T00:00:00Z"
}
},
"account": {
"id": 1
}
},
{
"id": 8,
"object": "contact",
"first_name": "Annetta",
"last_name": null,
"gender": "Woman",
"is_partial": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1967-06-19T00:00:00Z"
}
},
"account": {
"id": 1
}
}
]
},
"progenitors": {
"total": 0,
"progenitors": []
}
},
"dates": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1979-01-08T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https://randomuser.me/api/portraits/men/62.jpg",
"source": "external",
"default_avatar_color": "#fdb660"
},
"food_preferencies": "I can't get out again. Suddenly she came upon a time she had nibbled some more tea,' the March Hare went 'Sh! sh!' and the bright flower-beds and the other side of WHAT? The other guests had taken.",
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2018-06-08T00:00:00Z"
},
"first_met_through_contact": null
}
},
"addresses": [],
"tags": [
{
"id": 1,
"object": "tag",
"name": "friends",
"name_slug": "friends",
"account": {
"id": 1
},
"created_at": "2018-02-24T09:27:05Z",
"updated_at": "2018-02-24T09:27:05Z"
},
{
"id": 2,
"object": "tag",
"name": "family",
"name_slug": "family",
"account": {
"id": 1
},
"created_at": "2018-02-24T09:27:05Z",
"updated_at": "2018-02-24T09:27:05Z"
}
],
"statistics": {
"number_of_calls": 1,
"number_of_notes": 5,
"number_of_activities": 6,
"number_of_reminders": 2,
"number_of_tasks": 2,
"number_of_gifts": 0,
"number_of_debts": 2
},
"account": {
"id": 1
},
"created_at": "2018-02-18T10:35:59Z",
"updated_at": "2018-02-18T10:35:59Z"
}
}
Remove a specific tag from a contact
The call lets you remove one or multiple tags from a contact. The difference with the tag creation method is the fact that this call accepts a list of ids of the tags, not a list of tag names. This is because when you create a tag, you don't want to deal with creating a tag first, then take the id and pass it to the creation method call. However, when you remove a tag, you know the id of the tag you want to remove.
The call does not delete the actual tag. It only removes the association.
POST /contacts/:id/unsetTag
Parameters
Name
Type
Description
tags
array
Required
. A list of tag ids, as integer, separated by a comma.
Example
{
"tags": [1]
}
Response
The response sends back a standard Contact object.
{
"data": {
"id": 1,
"object": "contact",
"first_name": "Odell",
"last_name": "McKenzie",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"last_called": null,
"last_activity_together": {
"date": "2017-10-22 00:00:00.000000",
"timezone_type": 3,
"timezone": "US/Eastern"
},
"information": {
"family": {
"kids": {
"total": 4,
"kids": [
{
"id": 2,
"object": "contact",
"first_name": "Oleta",
"last_name": "Hintz",
"gender": "Woman",
"is_partial": true,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2018-08-16T00:00:00Z"
}
},
"account": {
"id": 1
}
},
{
"id": 3,
"object": "contact",
"first_name": "Lloyd",
"last_name": "Connelly",
"gender": "Woman",
"is_partial": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2018-06-18T00:00:00Z"
}
},
"account": {
"id": 1
}
},
{
"id": 4,
"object": "contact",
"first_name": "Burley",
"last_name": null,
"gender": "Woman",
"is_partial": true,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1922-11-06T00:00:00Z"
}
},
"account": {
"id": 1
}
},
{
"id": 5,
"object": "contact",
"first_name": "Ben",
"last_name": null,
"gender": "Man",
"is_partial": true,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2018-03-17T00:00:00Z"
}
},
"account": {
"id": 1
}
}
]
},
"partners": {
"total": 3,
"partners": [
{
"id": 6,
"object": "contact",
"first_name": "Weston",
"last_name": "Lowe",
"gender": "Man",
"is_partial": true,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1950-12-21T00:00:00Z"
}
},
"account": {
"id": 1
}
},
{
"id": 7,
"object": "contact",
"first_name": "Zelda",
"last_name": "Kessler",
"gender": "Rather not say",
"is_partial": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2018-08-04T00:00:00Z"
}
},
"account": {
"id": 1
}
},
{
"id": 8,
"object": "contact",
"first_name": "Annetta",
"last_name": null,
"gender": "Woman",
"is_partial": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1967-06-19T00:00:00Z"
}
},
"account": {
"id": 1
}
}
]
},
"progenitors": {
"total": 0,
"progenitors": []
}
},
"dates": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1979-01-08T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https://randomuser.me/api/portraits/men/62.jpg",
"source": "external",
"default_avatar_color": "#fdb660"
},
"food_preferencies": "I can't get out again. Suddenly she came upon a time she had nibbled some more tea,' the March Hare went 'Sh! sh!' and the bright flower-beds and the other side of WHAT? The other guests had taken.",
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2018-06-08T00:00:00Z"
},
"first_met_through_contact": null
}
},
"addresses": [],
"tags": [
{
"id": 2,
"object": "tag",
"name": "family",
"name_slug": "family",
"account": {
"id": 1
},
"created_at": "2018-02-24T09:27:05Z",
"updated_at": "2018-02-24T09:27:05Z"
}
],
"statistics": {
"number_of_calls": 1,
"number_of_notes": 5,
"number_of_activities": 6,
"number_of_reminders": 2,
"number_of_tasks": 2,
"number_of_gifts": 0,
"number_of_debts": 2
},
"account": {
"id": 1
},
"created_at": "2018-02-18T10:35:59Z",
"updated_at": "2018-02-18T10:35:59Z"
}
}
Remove all the tags from a contact
If you need to remove all the tags associated with a contact, you can use this method. Note that the call does not delete the tags, it only removes the association.
POST /contacts/:id/unsetTags
Response
The response sends back a standard Contact object.
{
"data": {
"id": 1,
"object": "contact",
"first_name": "Odell",
"last_name": "McKenzie",
"gender": "Man",
"is_partial": false,
"is_dead": false,
"last_called": null,
"last_activity_together": {
"date": "2017-10-22 00:00:00.000000",
"timezone_type": 3,
"timezone": "US/Eastern"
},
"information": {
"family": {
"kids": {
"total": 4,
"kids": [
{
"id": 2,
"object": "contact",
"first_name": "Oleta",
"last_name": "Hintz",
"gender": "Woman",
"is_partial": true,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2018-08-16T00:00:00Z"
}
},
"account": {
"id": 1
}
},
{
"id": 3,
"object": "contact",
"first_name": "Lloyd",
"last_name": "Connelly",
"gender": "Woman",
"is_partial": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2018-06-18T00:00:00Z"
}
},
"account": {
"id": 1
}
},
{
"id": 4,
"object": "contact",
"first_name": "Burley",
"last_name": null,
"gender": "Woman",
"is_partial": true,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1922-11-06T00:00:00Z"
}
},
"account": {
"id": 1
}
},
{
"id": 5,
"object": "contact",
"first_name": "Ben",
"last_name": null,
"gender": "Man",
"is_partial": true,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2018-03-17T00:00:00Z"
}
},
"account": {
"id": 1
}
}
]
},
"partners": {
"total": 3,
"partners": [
{
"id": 6,
"object": "contact",
"first_name": "Weston",
"last_name": "Lowe",
"gender": "Man",
"is_partial": true,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1950-12-21T00:00:00Z"
}
},
"account": {
"id": 1
}
},
{
"id": 7,
"object": "contact",
"first_name": "Zelda",
"last_name": "Kessler",
"gender": "Rather not say",
"is_partial": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2018-08-04T00:00:00Z"
}
},
"account": {
"id": 1
}
},
{
"id": 8,
"object": "contact",
"first_name": "Annetta",
"last_name": null,
"gender": "Woman",
"is_partial": false,
"information": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1967-06-19T00:00:00Z"
}
},
"account": {
"id": 1
}
}
]
},
"progenitors": {
"total": 0,
"progenitors": []
}
},
"dates": {
"birthdate": {
"is_age_based": false,
"is_year_unknown": false,
"date": "1979-01-08T00:00:00Z"
},
"deceased_date": {
"is_age_based": null,
"is_year_unknown": null,
"date": null
}
},
"career": {
"job": null,
"company": null
},
"avatar": {
"url": "https://randomuser.me/api/portraits/men/62.jpg",
"source": "external",
"default_avatar_color": "#fdb660"
},
"food_preferencies": "I can't get out again. Suddenly she came upon a time she had nibbled some more tea,' the March Hare went 'Sh! sh!' and the bright flower-beds and the other side of WHAT? The other guests had taken.",
"how_you_met": {
"general_information": null,
"first_met_date": {
"is_age_based": false,
"is_year_unknown": true,
"date": "2018-06-08T00:00:00Z"
},
"first_met_through_contact": null
}
},
"addresses": [],
"tags": [],
"statistics": {
"number_of_calls": 1,
"number_of_notes": 5,
"number_of_activities": 6,
"number_of_reminders": 2,
"number_of_tasks": 2,
"number_of_gifts": 0,
"number_of_debts": 2
},
"account": {
"id": 1
},
"created_at": "2018-02-18T10:35:59Z",
"updated_at": "2018-02-18T10:35:59Z"
}
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
Tasks
================================================================================

Personal CRM - Monica Api Documentation
Features
Pricing
API documentation
Blog
Login
Sign Up
API documentation
Overview
Activities
Activity types
Activity type categories
Addresses
Audit logs
Calls
Companies
Compliance
Contacts
Contact Fields
Contact Field Types
Conversations
Countries
Currencies
Debts
Documents
Genders
Gifts
Groups
Journal entries
Notes
Occupations
Photos
Relationships
Relationship Types
Relationship Type Groups
Reminders
Tags
Tasks
User
API changelog
Tasks
Overview
List all the tasks in your account
Parameters
Response
Sorting
List all the tasks of a specific contact
Response
Get a specific task
Response
Create a task
Input
Example
Response
Update a task
Input
Example
Response
Delete a task
Response
Overview
The Task object allows to add tasks about your contacts.
When retrieving a task, we always also return some basic information about the
related contact.
List all the tasks in your account
GET /tasks/
Parameters
Name
Type
Description
limit
integer
Indicates the page size.
page
integer
Indicates the page to return.
Response
{
"data": [
{
"id": 809,
"object": "task",
"title": "Send Phillys all my love",
"description": "",
"completed": false,
"completed_at": null,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Jim",
"last_name": "Helpert",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-13T21:58:40Z",
"updated_at": "2017-10-13T21:58:40Z"
},
{
"id": 810,
"object": "task",
"title": "Send Michael Scott some flowers",
"description": "Because he's the best boss ever.",
"completed": false,
"completed_at": null,
"account": {
"id": 1
},
"contact": {
"id": 32,
"object": "contact",
"first_name": "Dwight",
"last_name": "Schrutt",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-13T21:59:11Z",
"updated_at": "2017-10-13T21:59:11Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/tasks?page=1",
"last": "https:\/\/app.monicahq.com\/api\/tasks?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/tasks",
"per_page": 10,
"to": 2,
"total": 2
}
}
Sorting
You can sort this query. Accepted criteria are:
Name
Description
created_at
Will add
order by created_at asc
to the query
-created_at
Will add
order by created_at desc
to the query
updated_at
Will add
order by updated_at asc
to the query
-updated_at
Will add
order by updated_at desc
to the query
completed_at
Will add
order by completed_at asc
to the query
-completed_at
Will add
order by completed_at desc
to the query
List all the tasks of a specific contact
GET /contacts/:id/tasks
Response
{
"data": [
{
"id": 809,
"object": "task",
"title": "Send Phillys all my love",
"description": "",
"completed": false,
"completed_at": null,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Jim",
"last_name": "Helpert",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-13T21:58:40Z",
"updated_at": "2017-10-13T21:58:40Z"
},
{
"id": 810,
"object": "task",
"title": "Send Michael Scott some flowers",
"description": "Because he's the best boss ever.",
"completed": false,
"completed_at": null,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Jim",
"last_name": "Helpert",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-13T21:59:11Z",
"updated_at": "2017-10-13T21:59:11Z"
}
],
"links": {
"first": "https:\/\/app.monicahq.com\/api\/tasks?page=1",
"last": "https:\/\/app.monicahq.com\/api\/tasks?page=1",
"prev": null,
"next": null
},
"meta": {
"current_page": 1,
"from": 1,
"last_page": 1,
"path": "https:\/\/app.monicahq.com\/api\/tasks",
"per_page": 10,
"to": 2,
"total": 2
}
}
Get a specific task
GET /tasks/:id
Response
{
"data": {
"id": 809,
"object": "task",
"title": "Send Phillys all my love",
"description": "",
"completed": false,
"completed_at": null,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Dwight",
"last_name": "Schrutt",
"gender": "male",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-13T21:58:40Z",
"updated_at": "2017-10-13T21:58:40Z"
}
}
Create a task
POST /task/
Input
Name
Type
Description
title
string
Required
. The title of the task. Max 255 characters.
description
string
A description about what the task is. Max 1000000 characters.
completed
integer
Required
. The status of the task. Values:
0
(false),
1
(true).
completed_at
string
The date the task happened. Can be in the past or future - the latter being dumb, but well. Format: YYYY-MM-DD.
contact_id
integer
Required
. The ID of the contact that the call is associated with.
Example
{
"title": "Bring back the table",
"description": "I borrowed a table a while ago.",
"completed": 0,
"contact_id": 1
}
Response
The API call returns a task object if the call succeeds.
{
"data": {
"id": 811,
"object": "task",
"title": "Bring back the table",
"description": "I borrowed a table a while ago.",
"completed": false,
"completed_at": null,
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Michael",
"last_name": "Scott",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-13T22:12:05Z",
"updated_at": "2017-10-13T22:12:05Z"
}
}
Update a task
PUT /tasks/:id
Input
Name
Type
Description
title
string
Required
. The title of the task. Max 255 characters.
description
string
A description about what the task is. Max 1000000 characters.
completed
integer
Required
. The status of the task. Values:
0
(false),
1
(true).
completed_at
string
The date the task happened. Can be in the past or future - the latter being dumb, but well. Format: YYYY-MM-DD.
contact_id
integer
Required
. The ID of the contact that the call is associated with.
Example
{
"title": "Bring back the table",
"description": "I borrowed a table a while ago.",
"completed": 1,
"completed_at": "1970-03-03",
"contact_id": 1
}
Response
{
"data": {
"id": 811,
"object": "task",
"title": "Bring back the table",
"description": "I borrowed a table a while ago.",
"completed": true,
"completed_at": "1970-03-03T00:00:00Z",
"account": {
"id": 1
},
"contact": {
"id": 1,
"object": "contact",
"first_name": "Michael",
"last_name": "Scott",
"gender": "female",
"is_partial": false,
"information": {
"dates": [
{
"name": "birthdate",
"is_birthdate_approximate": "exact",
"birthdate": "1983-10-23T19:10:42Z"
}
]
},
"account": {
"id": 1
}
},
"created_at": "2017-10-13T22:12:05Z",
"updated_at": "2017-10-13T22:14:33Z"
}
}
Delete a task
DELETE /tasks/:id
Response
The response sends back the id that was just deleted.
{
"deleted": true,
"id": 31
}
Features
Contact management
Powerful dashboard
Journal
Company
Team
Blog
Community
Changelog
Source code on GitHub
Issue tracker
Mastodon
Resources
Terms
Privacy
Refund policy
Contact
© 2018 — 2025
Proudly
Canadian


================================================================================
User
================================================================================

Monicahq

